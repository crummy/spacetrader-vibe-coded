
> spacetrader-ts@1.0.0 test
> mise exec -- node --test --experimental-strip-types '**/*.test.ts'

TAP version 13
# (node:55585) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# ✅ AutomatedPlayer created with defaults
# ✅ AutomatedPlayer created with custom settings
# 🏁 Game \#584 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 10
# 💰 Final Credits: 0
# 💎 Final Worth: -1000
# ✅ Game completed: 10 turns, 0 credits
# 🏁 Game \#326 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 1
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
# ✅ Short game: 1 turns completed
# 🏁 Game \#62 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
# ✅ Difficulty 0: 5 turns completed
# 🏁 Game \#517 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
# ✅ Difficulty 1: 5 turns completed
# 🏁 Game \#668 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 2000
# 💎 Final Worth: 1000
# ✅ Difficulty 2: 5 turns completed
# Subtest: AutomatedPlayer
    # Subtest: Constructor
        # Subtest: should create player with default parameters
        ok 1 - should create player with default parameters
          ---
          duration_ms: 2.242875
          ...
        # Subtest: should create player with custom parameters
        ok 2 - should create player with custom parameters
          ---
          duration_ms: 0.751958
          ...
        1..2
    ok 1 - Constructor
      ---
      duration_ms: 3.359333
      ...
    # Subtest: playToCompletion
        # Subtest: should complete a game session within turn limit
        ok 1 - should complete a game session within turn limit
          ---
          duration_ms: 6.362166
          ...
        # Subtest: should handle very short turn limit
        ok 2 - should handle very short turn limit
          ---
          duration_ms: 3.082917
          ...
# 🏁 Game \#132 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 996
# 💎 Final Worth: 996
# ✅ Difficulty 3: 5 turns completed
# 🏁 Game \#79 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
# ✅ Difficulty 4: 5 turns completed
# 🏁 Game \#228 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 15
# 💰 Final Credits: 998
# 💎 Final Worth: 998
# ✅ Session data: Game \#228, 15 turns
# 🎮 Starting automated game \#687
# 📍 Starting at: Acamar
# 💰 Starting credits: 1000
# 🏁 Game \#687 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 3
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
# ✅ Verbose mode completed without errors
# 🎯 Running 3 automated games on Beginner difficulty...
# 📊 Game 1/3
# 🏁 Game \#695 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 999
# 💎 Final Worth: 999
#   Result: Max turns reached
#   Turns: 5 | Worth: 999
# 📊 Game 2/3
# 🏁 Game \#632 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
#   Result: Max turns reached
#   Turns: 5 | Worth: 1000
# 📊 Game 3/3
# 🏁 Game \#563 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 5
# 💰 Final Credits: 1999
# 💎 Final Worth: 999
#   Result: Max turns reached
#   Turns: 5 | Worth: 999
# 📈 Overall Statistics:
#   Average turns: 5.0
#   Average worth: 999 credits
#   Completed games: 0/3
#   End conditions: {}
# ✅ Multiple games: 3 games completed
# 🎯 Running 1 automated games on Easy difficulty...
# 📊 Game 1/1
# 🏁 Game \#133 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 8
# 💰 Final Credits: 998
# 💎 Final Worth: 998
#   Result: Max turns reached
#   Turns: 8 | Worth: 998
# 📈 Overall Statistics:
#   Average turns: 8.0
#   Average worth: 998 credits
#   Completed games: 0/1
#   End conditions: {}
# ✅ Single game statistics collected
# 🏁 Game \#711 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 20
# 💰 Final Credits: 997
# 💎 Final Worth: 997
# ✅ Game state remained valid throughout play
# 🏁 Game \#29 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 0
# 💰 Final Credits: 1000
# 💎 Final Worth: 1000
# ✅ Zero turn limit handled correctly
# 🏁 Game \#50 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 10
# 💰 Final Credits: 2000
# 💎 Final Worth: 1000
# 🏁 Game \#697 Complete!
# ⏱️ Duration: 0.0s
# 🎯 Turns: 10
# 💰 Final Credits: 997
# 💎 Final Worth: 997
# ✅ Consistent behavior: Game 1: 10 turns, Game 2: 10 turns
        # Subtest: should handle different difficulty levels
        ok 3 - should handle different difficulty levels
          ---
          duration_ms: 26.341333
          ...
        # Subtest: should track game session data
        ok 4 - should track game session data
          ---
          duration_ms: 1.2465
          ...
        # Subtest: should handle verbose mode
        ok 5 - should handle verbose mode
          ---
          duration_ms: 0.410834
          ...
        1..5
    ok 2 - playToCompletion
      ---
      duration_ms: 38.797667
      ...
    # Subtest: runMultipleGames
        # Subtest: should run multiple games and collect statistics
        ok 1 - should run multiple games and collect statistics
          ---
          duration_ms: 4.317541
          ...
        # Subtest: should handle single game run
        ok 2 - should handle single game run
          ---
          duration_ms: 1.254291
          ...
        1..2
    ok 3 - runMultipleGames
      ---
      duration_ms: 5.766959
      ...
    # Subtest: Game State Management
        # Subtest: should maintain valid game state throughout play
        ok 1 - should maintain valid game state throughout play
          ---
          duration_ms: 1.24225
          ...
        # Subtest: should handle edge cases gracefully
        ok 2 - should handle edge cases gracefully
          ---
          duration_ms: 0.186292
          ...
        1..2
    ok 4 - Game State Management
      ---
      duration_ms: 1.533083
      ...
    # Subtest: Action Selection Logic
        # Subtest: should have consistent action selection behavior
        ok 1 - should have consistent action selection behavior
          ---
          duration_ms: 1.932334
          ...
        1..1
    ok 5 - Action Selection Logic
      ---
      duration_ms: 1.987125
      ...
    1..5
ok 1 - AutomatedPlayer
  ---
  duration_ms: 52.116125
  ...
# (node:55586) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Combat Bounty System
    # Subtest: Basic Bounty Calculations
        # Subtest: should calculate bounty using Palm OS formula
        ok 1 - should calculate bounty using Palm OS formula
          ---
          duration_ms: 0.512791
          ...
        # Subtest: should apply minimum bounty of 25
        ok 2 - should apply minimum bounty of 25
          ---
          duration_ms: 0.068875
          ...
        # Subtest: should apply maximum bounty of 2500
        ok 3 - should apply maximum bounty of 2500
          ---
          duration_ms: 0.053541
          ...
        # Subtest: should round to nearest 25 credits
        ok 4 - should round to nearest 25 credits
          ---
          duration_ms: 0.118875
          ...
        1..4
    ok 1 - Basic Bounty Calculations
      ---
      duration_ms: 1.0995
      type: 'suite'
      ...
    # Subtest: Equipment Impact on Bounty
        # Subtest: should increase bounty with equipment
        ok 1 - should increase bounty with equipment
          ---
          duration_ms: 0.065292
          ...
        # Subtest: should handle ships with different equipment configurations
        ok 2 - should handle ships with different equipment configurations
          ---
          duration_ms: 0.114583
          ...
        1..2
    ok 2 - Equipment Impact on Bounty
      ---
      duration_ms: 0.29275
      type: 'suite'
      ...
    # Subtest: Ship Type Bounty Range
        # Subtest: should calculate appropriate bounties for all buyable ship types
        ok 1 - should calculate appropriate bounties for all buyable ship types
          ---
          duration_ms: 0.167791
          ...
        # Subtest: should handle special encounter ships appropriately
        ok 2 - should handle special encounter ships appropriately
          ---
          duration_ms: 10.643167
          ...
        1..2
    ok 3 - Ship Type Bounty Range
      ---
      duration_ms: 10.966875
      type: 'suite'
      ...
    # Subtest: Bounty Formula Verification
        # Subtest: should match exact Palm OS bounty calculation formula
        ok 1 - should match exact Palm OS bounty calculation formula
          ---
          duration_ms: 0.154625
          ...
        # Subtest: should handle integer division correctly
        ok 2 - should handle integer division correctly
          ---
          duration_ms: 0.147167
          ...
        1..2
    ok 4 - Bounty Formula Verification
      ---
      duration_ms: 0.389833
      type: 'suite'
      ...
    # Subtest: Bounty Edge Cases
        # Subtest: should handle ships with zero equipment gracefully
        ok 1 - should handle ships with zero equipment gracefully
          ---
          duration_ms: 0.061917
          ...
        # Subtest: should handle damaged ships correctly
        ok 2 - should handle damaged ships correctly
          ---
          duration_ms: 0.035875
          ...
        1..2
    ok 5 - Bounty Edge Cases
      ---
      duration_ms: 0.134584
      type: 'suite'
      ...
    # Subtest: Integration with Combat System
        # Subtest: should provide bounty rewards after combat victory
        ok 1 - should provide bounty rewards after combat victory
          ---
          duration_ms: 1.216417
          ...
        1..1
    ok 6 - Integration with Combat System
      ---
      duration_ms: 1.2435
      type: 'suite'
      ...
    1..6
ok 2 - Combat Bounty System
  ---
  duration_ms: 14.723917
  type: 'suite'
  ...
# (node:55587) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Combat System Engine
    # Subtest: Encounter Type Constants
        # Subtest: should have correct encounter type values matching Palm OS
        ok 1 - should have correct encounter type values matching Palm OS
          ---
          duration_ms: 0.438667
          ...
        # Subtest: should provide encounter type validation functions
        ok 2 - should provide encounter type validation functions
          ---
          duration_ms: 0.053167
          ...
        1..2
    ok 1 - Encounter Type Constants
      ---
      duration_ms: 0.75525
      type: 'suite'
      ...
    # Subtest: Encounter Management
        # Subtest: should start encounter and change game mode to combat
        ok 1 - should start encounter and change game mode to combat
          ---
          duration_ms: 51.327125
          ...
        # Subtest: should not start encounter if already in combat
        ok 2 - should not start encounter if already in combat
          ---
          duration_ms: 0.710459
          ...
        # Subtest: should end encounter and return to space mode
        ok 3 - should end encounter and return to space mode
          ---
          duration_ms: 8.0185
          ...
        # Subtest: should get current encounter information
        ok 4 - should get current encounter information
          ---
          duration_ms: 0.920958
          ...
        1..4
    ok 2 - Encounter Management
      ---
      duration_ms: 61.297792
      type: 'suite'
      ...
    # Subtest: Combat Actions
        # Subtest: should validate available actions based on encounter type
        ok 1 - should validate available actions based on encounter type
          ---
          duration_ms: 0.918125
          ...
        # Subtest: should validate police inspection actions
        ok 2 - should validate police inspection actions
          ---
          duration_ms: 0.538875
          ...
        # Subtest: should check if action can be performed
        ok 3 - should check if action can be performed
          ---
          duration_ms: 2.128167
          ...
        1..3
    ok 3 - Combat Actions
      ---
      duration_ms: 3.866792
      type: 'suite'
      ...
    # Subtest: Combat Calculations
        # Subtest: should calculate weapon power correctly
        ok 1 - should calculate weapon power correctly
          ---
          duration_ms: 0.802333
          ...
        # Subtest: should calculate shield power correctly
        ok 2 - should calculate shield power correctly
          ---
          duration_ms: 0.685083
          ...
        # Subtest: should calculate hull strength correctly
        ok 3 - should calculate hull strength correctly
          ---
          duration_ms: 0.168917
          ...
        # Subtest: should calculate damage based on weapons vs shields
        ok 4 - should calculate damage based on weapons vs shields
          ---
          duration_ms: 0.148791
          ...
        # Subtest: should apply damage to shields first, then hull
        ok 5 - should apply damage to shields first, then hull
          ---
          duration_ms: 0.13975
          ...
        1..5
    ok 4 - Combat Calculations
      ---
      duration_ms: 2.084375
      type: 'suite'
      ...
    # Subtest: Combat Resolution
        # Subtest: should resolve combat round with mutual attacks
        ok 1 - should resolve combat round with mutual attacks
          ---
          duration_ms: 2.254791
          ...
        # Subtest: should determine combat outcome when ship is destroyed
        ok 2 - should determine combat outcome when ship is destroyed
          ---
          duration_ms: 1.253291
          ...
        # Subtest: should determine combat outcome when opponent is destroyed
        ok 3 - should determine combat outcome when opponent is destroyed
          ---
          duration_ms: 0.186125
          ...
        # Subtest: should handle flee attempts based on ship capabilities
        ok 4 - should handle flee attempts based on ship capabilities
          ---
          duration_ms: 0.262792
          ...
        # Subtest: should handle surrender attempts
        ok 5 - should handle surrender attempts
          ---
          duration_ms: 0.144542
          ...
        1..5
    ok 5 - Combat Resolution
      ---
      duration_ms: 4.271583
      type: 'suite'
      ...
    # Subtest: Encounter State Management
        # Subtest: should create encounter state with proper initialization
        ok 1 - should create encounter state with proper initialization
          ---
          duration_ms: 0.153291
          ...
        # Subtest: should update encounter state after actions
        ok 2 - should update encounter state after actions
          ---
          duration_ms: 0.200583
          ...
        1..2
    ok 6 - Encounter State Management
      ---
      duration_ms: 0.39125
      type: 'suite'
      ...
    # Subtest: Integration with Game State
        # Subtest: should properly integrate with ship equipment system
        ok 1 - should properly integrate with ship equipment system
          ---
          duration_ms: 0.135833
          ...
        # Subtest: should handle crew skill bonuses in combat
        ok 2 - should handle crew skill bonuses in combat
          ---
          duration_ms: 0.106875
          ...
        # Subtest: should integrate with reputation and police record
        ok 3 - should integrate with reputation and police record
          ---
          duration_ms: 0.112583
          ...
        1..3
    ok 7 - Integration with Game State
      ---
      duration_ms: 0.393959
      type: 'suite'
      ...
    # Subtest: Edge Cases and Error Handling
        # Subtest: should handle ships with no weapons
        ok 1 - should handle ships with no weapons
          ---
          duration_ms: 0.13275
          ...
        # Subtest: should handle ships with no shields
        ok 2 - should handle ships with no shields
          ---
          duration_ms: 0.108333
          ...
        # Subtest: should validate encounter type ranges
        ok 3 - should validate encounter type ranges
          ---
          duration_ms: 0.038083
          ...
        # Subtest: should handle invalid combat actions gracefully
        ok 4 - should handle invalid combat actions gracefully
          ---
          duration_ms: 0.117375
          ...
        1..4
    ok 8 - Edge Cases and Error Handling
      ---
      duration_ms: 0.44575
      type: 'suite'
      ...
    1..8
ok 3 - Combat System Engine
  ---
  duration_ms: 74.188791
  type: 'suite'
  ...
# (node:55588) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Special Ship Encounters
    # Subtest: Marie Celeste boarding - successful with cargo space
    ok 1 - Marie Celeste boarding - successful with cargo space
      ---
      duration_ms: 52.986333
      ...
    # Subtest: Marie Celeste boarding - fails when cargo full
    ok 2 - Marie Celeste boarding - fails when cargo full
      ---
      duration_ms: 0.7595
      ...
    # Subtest: Bottle drinking - success with bottle available
    ok 3 - Bottle drinking - success with bottle available
      ---
      duration_ms: 10.829625
      ...
    # Subtest: Bottle drinking - fails without bottle
    ok 4 - Bottle drinking - fails without bottle
      ---
      duration_ms: 1.536917
      ...
    # Subtest: Space Monster encounter setup
    ok 5 - Space Monster encounter setup
      ---
      duration_ms: 0.82525
      ...
    # Subtest: Dragonfly encounter setup
    ok 6 - Dragonfly encounter setup
      ---
      duration_ms: 0.718
      ...
    # Subtest: Scarab encounter setup
    ok 7 - Scarab encounter setup
      ---
      duration_ms: 0.7505
      ...
    # Subtest: Scarab destruction rewards - first time
    ok 8 - Scarab destruction rewards - first time
      ---
      duration_ms: 0.814833
      ...
    # Subtest: Scarab destruction rewards - already acquired
    ok 9 - Scarab destruction rewards - already acquired
      ---
      duration_ms: 2.647125
      ...
    # Subtest: Marie encounter setup
    ok 10 - Marie encounter setup
      ---
      duration_ms: 0.946584
      ...
    # Subtest: Very rare encounter identification
    ok 11 - Very rare encounter identification
      ---
      duration_ms: 0.067
      ...
    # Subtest: Special ship names
    ok 12 - Special ship names
      ---
      duration_ms: 0.04825
      ...
    # Subtest: Very rare encounter tracking - not encountered before
    ok 13 - Very rare encounter tracking - not encountered before
      ---
      duration_ms: 0.588042
      ...
    # Subtest: Very rare encounter tracking - mark as completed
    ok 14 - Very rare encounter tracking - mark as completed
      ---
      duration_ms: 0.573125
      ...
    # Subtest: Very rare encounter tracking - multiple encounters
    ok 15 - Very rare encounter tracking - multiple encounters
      ---
      duration_ms: 0.565416
      ...
    # Subtest: Complete Marie Celeste workflow - board and drink
    ok 16 - Complete Marie Celeste workflow - board and drink
      ---
      duration_ms: 0.571125
      ...
    # Subtest: Special ship encounters all set correct combat mode
    ok 17 - Special ship encounters all set correct combat mode
      ---
      duration_ms: 0.593208
      ...
    # Subtest: Scarab hull upgrade - multiple destructions only grant one upgrade
    ok 18 - Scarab hull upgrade - multiple destructions only grant one upgrade
      ---
      duration_ms: 1.425334
      ...
    1..18
ok 4 - Special Ship Encounters
  ---
  duration_ms: 78.168709
  type: 'suite'
  ...
# (node:55589) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Combat Statistics System
    # Subtest: Police Kill Tracking
        # Subtest: should track police kills and apply score penalty
        ok 1 - should track police kills and apply score penalty
          ---
          duration_ms: 1.645209
          ...
        # Subtest: should track multiple police kills
        ok 2 - should track multiple police kills
          ---
          duration_ms: 0.942875
          ...
        1..2
    ok 1 - Police Kill Tracking
      ---
      duration_ms: 24.97425
      ...
    # Subtest: Trader Kill Tracking
        # Subtest: should track trader kills and apply score penalty
        ok 1 - should track trader kills and apply score penalty
          ---
          duration_ms: 0.734583
          ...
        1..1
    ok 2 - Trader Kill Tracking
      ---
      duration_ms: 1.011
      ...
    # Subtest: Pirate Kill Tracking
        # Subtest: should track pirate kills and improve police record
        ok 1 - should track pirate kills and improve police record
          ---
          duration_ms: 0.679875
          ...
        1..1
    ok 3 - Pirate Kill Tracking
      ---
      duration_ms: 0.86725
      ...
    # Subtest: Special Ship Kill Tracking
        # Subtest: should track space monster kill and update status
        ok 1 - should track space monster kill and update status
          ---
          duration_ms: 3.895167
          ...
        # Subtest: should track dragonfly kill and update status
        ok 2 - should track dragonfly kill and update status
          ---
          duration_ms: 0.966375
          ...
        # Subtest: should track scarab kill and update status
        ok 3 - should track scarab kill and update status
          ---
          duration_ms: 0.243875
          ...
        1..3
    ok 4 - Special Ship Kill Tracking
      ---
      duration_ms: 5.778667
      ...
    # Subtest: Famous Captain Kill Handling
        # Subtest: should handle famous captain kill with special reputation boost
        ok 1 - should handle famous captain kill with special reputation boost
          ---
          duration_ms: 0.175167
          ...
        # Subtest: should add bonus points if already dangerous reputation
        ok 2 - should add bonus points if already dangerous reputation
          ---
          duration_ms: 0.133375
          ...
        # Subtest: should identify famous captain encounters correctly
        ok 3 - should identify famous captain encounters correctly
          ---
          duration_ms: 0.04625
          ...
        1..3
    ok 5 - Famous Captain Kill Handling
      ---
      duration_ms: 0.465667
      ...
    # Subtest: Statistics Retrieval and Formatting
        # Subtest: should retrieve combat statistics correctly
        ok 1 - should retrieve combat statistics correctly
          ---
          duration_ms: 0.159458
          ...
        # Subtest: should format statistics for display
        ok 2 - should format statistics for display
          ---
          duration_ms: 0.053542
          ...
        1..2
    ok 6 - Statistics Retrieval and Formatting
      ---
      duration_ms: 0.285
      ...
    # Subtest: Kill Achievement System
        # Subtest: should award veteran fighter achievement
        ok 1 - should award veteran fighter achievement
          ---
          duration_ms: 0.098458
          ...
        # Subtest: should award elite pilot achievement
        ok 2 - should award elite pilot achievement
          ---
          duration_ms: 0.04375
          ...
        # Subtest: should award enemy of the state achievement
        ok 3 - should award enemy of the state achievement
          ---
          duration_ms: 0.0385
          ...
        # Subtest: should award pirate hunter achievement
        ok 4 - should award pirate hunter achievement
          ---
          duration_ms: 0.033
          ...
        # Subtest: should award honorable fighter achievement
        ok 5 - should award honorable fighter achievement
          ---
          duration_ms: 0.030791
          ...
        # Subtest: should not award achievements below thresholds
        ok 6 - should not award achievements below thresholds
          ---
          duration_ms: 0.027833
          ...
        1..6
    ok 7 - Kill Achievement System
      ---
      duration_ms: 3.214209
      ...
    # Subtest: Statistics Reset
        # Subtest: should reset all kill counters
        ok 1 - should reset all kill counters
          ---
          duration_ms: 0.140083
          ...
        1..1
    ok 8 - Statistics Reset
      ---
      duration_ms: 0.181916
      ...
    # Subtest: Encounter Type Classification
        # Subtest: should correctly classify encounter types
        ok 1 - should correctly classify encounter types
          ---
          duration_ms: 0.122958
          ...
        1..1
    ok 9 - Encounter Type Classification
      ---
      duration_ms: 0.162458
      ...
    # Subtest: Integration with Reputation System
        # Subtest: should integrate kill tracking with reputation scoring
        ok 1 - should integrate kill tracking with reputation scoring
          ---
          duration_ms: 0.187084
          ...
        1..1
    ok 10 - Integration with Reputation System
      ---
      duration_ms: 0.229209
      ...
    # Subtest: Edge Cases
        # Subtest: should handle unknown encounter types gracefully
        ok 1 - should handle unknown encounter types gracefully
          ---
          duration_ms: 0.115167
          ...
        # Subtest: should handle multiple rapid kills correctly
        ok 2 - should handle multiple rapid kills correctly
          ---
          duration_ms: 0.110333
          ...
        1..2
    ok 11 - Edge Cases
      ---
      duration_ms: 0.282875
      ...
    1..11
ok 5 - Combat Statistics System
  ---
  duration_ms: 38.201125
  ...
# (node:55590) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Tribbles survived destruction
# Subtest: Tribble Enhancement System
    # Subtest: Tribble Breeding Mechanics
        # Subtest: should not breed with no tribbles
        ok 1 - should not breed with no tribbles
          ---
          duration_ms: 1.614583
          ...
        # Subtest: should breed tribbles when conditions are met
        ok 2 - should breed tribbles when conditions are met
          ---
          duration_ms: 0.783958
          ...
        # Subtest: should cap tribbles at maximum population
        ok 3 - should cap tribbles at maximum population
          ---
          duration_ms: 0.982417
          ...
        # Subtest: should generate infestation message at max population
        ok 4 - should generate infestation message at max population
          ---
          duration_ms: 0.700417
          ...
        1..4
    ok 1 - Tribble Breeding Mechanics
      ---
      duration_ms: 4.63925
      ...
    # Subtest: Radiation Effects
        # Subtest: should kill half tribbles from radiation
        ok 1 - should kill half tribbles from radiation
          ---
          duration_ms: 1.118542
          ...
        # Subtest: should kill all tribbles if population too small
        ok 2 - should kill all tribbles if population too small
          ---
          duration_ms: 7.817083
          ...
        # Subtest: should do nothing with no tribbles
        ok 3 - should do nothing with no tribbles
          ---
          duration_ms: 1.112708
          ...
        1..3
    ok 2 - Radiation Effects
      ---
      duration_ms: 11.3815
      ...
    # Subtest: Narcotics Interaction
        # Subtest: should have tribbles eat narcotics and get sick
        ok 1 - should have tribbles eat narcotics and get sick
          ---
          duration_ms: 0.636208
          ...
        # Subtest: should do nothing without narcotics
        ok 2 - should do nothing without narcotics
          ---
          duration_ms: 0.506208
          ...
        # Subtest: should do nothing without tribbles
        ok 3 - should do nothing without tribbles
          ---
          duration_ms: 0.516917
          ...
        1..3
    ok 3 - Narcotics Interaction
      ---
      duration_ms: 1.957709
      ...
    # Subtest: Cargo Bay Impact
        # Subtest: should calculate cargo bay impact correctly
        ok 1 - should calculate cargo bay impact correctly
          ---
          duration_ms: 0.051042
          ...
        # Subtest: should provide operational impact warnings
        ok 2 - should provide operational impact warnings
          ---
          duration_ms: 0.091917
          ...
        1..2
    ok 4 - Cargo Bay Impact
      ---
      duration_ms: 0.212375
      ...
    # Subtest: Ship Value Penalty
        # Subtest: should reduce ship value with tribbles aboard
        ok 1 - should reduce ship value with tribbles aboard
          ---
          duration_ms: 0.042667
          ...
        # Subtest: should not reduce value for insurance claims
        ok 2 - should not reduce value for insurance claims
          ---
          duration_ms: 0.027375
          ...
        # Subtest: should not affect value with no tribbles
        ok 3 - should not affect value with no tribbles
          ---
          duration_ms: 0.028041
          ...
        1..3
    ok 5 - Ship Value Penalty
      ---
      duration_ms: 0.173167
      ...
    # Subtest: IGP Inspection System
        # Subtest: should pass inspection with no tribbles
        ok 1 - should pass inspection with no tribbles
          ---
          duration_ms: 0.158167
          ...
        # Subtest: should confiscate tribbles and impose fine
        ok 2 - should confiscate tribbles and impose fine
          ---
          duration_ms: 0.12975
          ...
        # Subtest: should cap fine at maximum amount
        ok 3 - should cap fine at maximum amount
          ---
          duration_ms: 0.114875
          ...
        1..3
    ok 6 - IGP Inspection System
      ---
      duration_ms: 0.481375
      ...
    # Subtest: Combat Survival
        # Subtest: should handle tribble survival in rare cases
        ok 1 - should handle tribble survival in rare cases
          ---
          duration_ms: 0.29825
          ...
        # Subtest: should do nothing if ship not destroyed
        ok 2 - should do nothing if ship not destroyed
          ---
          duration_ms: 0.111958
          ...
        1..2
    ok 7 - Combat Survival
      ---
      duration_ms: 0.477458
      ...
    # Subtest: Tribble Trading
        # Subtest: should sell tribbles to buyer for half credits
        ok 1 - should sell tribbles to buyer for half credits
          ---
          duration_ms: 0.201625
          ...
        # Subtest: should fail to sell with no tribbles
        ok 2 - should fail to sell with no tribbles
          ---
          duration_ms: 0.123208
          ...
        1..2
    ok 8 - Tribble Trading
      ---
      duration_ms: 0.528334
      ...
    # Subtest: UI and Description Functions
        # Subtest: should provide appropriate tribble descriptions
        ok 1 - should provide appropriate tribble descriptions
          ---
          duration_ms: 0.057833
          ...
        # Subtest: should handle tribble warning system
        ok 2 - should handle tribble warning system
          ---
          duration_ms: 0.126208
          ...
        # Subtest: should generate random encounter messages
        ok 3 - should generate random encounter messages
          ---
          duration_ms: 0.044875
          ...
        1..3
    ok 9 - UI and Description Functions
      ---
      duration_ms: 0.315541
      ...
    # Subtest: Integration with Game Systems
        # Subtest: should integrate with reactor quest radiation
        ok 1 - should integrate with reactor quest radiation
          ---
          duration_ms: 0.118417
          ...
        # Subtest: should integrate with narcotics trading
        ok 2 - should integrate with narcotics trading
          ---
          duration_ms: 0.111333
          ...
        # Subtest: should affect cargo capacity calculations
        ok 3 - should affect cargo capacity calculations
          ---
          duration_ms: 0.028375
          ...
        1..3
    ok 10 - Integration with Game Systems
      ---
      duration_ms: 0.335584
      ...
    # Subtest: Edge Cases and Error Handling
        # Subtest: should handle negative tribble counts gracefully
        ok 1 - should handle negative tribble counts gracefully
          ---
          duration_ms: 0.110333
          ...
        # Subtest: should handle extremely large populations
        ok 2 - should handle extremely large populations
          ---
          duration_ms: 0.106041
          ...
        1..2
    ok 11 - Edge Cases and Error Handling
      ---
      duration_ms: 0.273042
      ...
    1..11
ok 6 - Tribble Enhancement System
  ---
  duration_ms: 24.175292
  ...
# (node:55591) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: hire crew - success
ok 7 - hire crew - success
  ---
  duration_ms: 3.062042
  ...
# Subtest: hire crew - no mercenary available
ok 8 - hire crew - no mercenary available
  ---
  duration_ms: 31.757584
  ...
# Subtest: hire crew - insufficient credits
ok 9 - hire crew - insufficient credits
  ---
  duration_ms: 0.912584
  ...
# Subtest: hire crew - no crew quarters
ok 10 - hire crew - no crew quarters
  ---
  duration_ms: 1.769625
  ...
# Subtest: fire crew - success
ok 11 - fire crew - success
  ---
  duration_ms: 0.83425
  ...
# Subtest: fire crew - shift crew members
ok 12 - fire crew - shift crew members
  ---
  duration_ms: 0.688375
  ...
# Subtest: fire crew - no crew member in slot
ok 13 - fire crew - no crew member in slot
  ---
  duration_ms: 1.799708
  ...
# Subtest: fire crew - invalid slot
ok 14 - fire crew - invalid slot
  ---
  duration_ms: 0.613375
  ...
# Subtest: crew actions appear in planet menu when appropriate
ok 15 - crew actions appear in planet menu when appropriate
  ---
  duration_ms: 0.927292
  ...
# Subtest: fire crew action appears when crew exists
ok 16 - fire crew action appears when crew exists
  ---
  duration_ms: 0.814416
  ...
# Subtest: fire crew UI integration - parameter prompts
ok 17 - fire crew UI integration - parameter prompts
  ---
  duration_ms: 5.690875
  ...
# (node:55592) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Crew System
    # Subtest: Mercenary Names
        # Subtest: should have exactly 31 mercenary names (MAXCREWMEMBER)
        ok 1 - should have exactly 31 mercenary names (MAXCREWMEMBER)
          ---
          duration_ms: 0.447083
          ...
        # Subtest: should match exact Palm OS mercenary names
        ok 2 - should match exact Palm OS mercenary names
          ---
          duration_ms: 1.668958
          ...
        # Subtest: should provide individual mercenary name access
        ok 3 - should provide individual mercenary name access
          ---
          duration_ms: 0.276667
          ...
        # Subtest: should throw error for invalid mercenary index
        ok 4 - should throw error for invalid mercenary index
          ---
          duration_ms: 0.578625
          ...
        # Subtest: should have all unique non-empty names
        ok 5 - should have all unique non-empty names
          ---
          duration_ms: 0.399541
          ...
        1..5
    ok 1 - Mercenary Names
      ---
      duration_ms: 3.917334
      type: 'suite'
      ...
    # Subtest: Random Skill Generation
        # Subtest: should generate skills in range 1-10
        ok 1 - should generate skills in range 1-10
          ---
          duration_ms: 1.036791
          ...
        # Subtest: should match Palm OS RandomSkill formula (1 + GetRandom(5) + GetRandom(6))
        ok 2 - should match Palm OS RandomSkill formula (1 + GetRandom(5) + GetRandom(6))
          ---
          duration_ms: 0.371792
          ...
        # Subtest: should validate skill levels
        ok 3 - should validate skill levels
          ---
          duration_ms: 0.994041
          ...
        1..3
    ok 2 - Random Skill Generation
      ---
      duration_ms: 2.659292
      type: 'suite'
      ...
    # Subtest: Commander Creation
        # Subtest: should create commander with correct initial stats
        ok 1 - should create commander with correct initial stats
          ---
          duration_ms: 0.161208
          ...
        1..1
    ok 3 - Commander Creation
      ---
      duration_ms: 0.277
      type: 'suite'
      ...
    # Subtest: Random Crew Member Creation
        # Subtest: should create crew member with valid random skills
        ok 1 - should create crew member with valid random skills
          ---
          duration_ms: 0.121791
          ...
        # Subtest: should set system location correctly
        ok 2 - should set system location correctly
          ---
          duration_ms: 0.041959
          ...
        # Subtest: should use system 255 as default for no location
        ok 3 - should use system 255 as default for no location
          ---
          duration_ms: 0.032791
          ...
        1..3
    ok 4 - Random Crew Member Creation
      ---
      duration_ms: 0.293125
      type: 'suite'
      ...
    # Subtest: Zeethibal Creation
        # Subtest: should create Zeethibal with correct name index
        ok 1 - should create Zeethibal with correct name index
          ---
          duration_ms: 0.108166
          ...
        # Subtest: should create Zeethibal with skills based on player weaknesses
        ok 2 - should create Zeethibal with skills based on player weaknesses
          ---
          duration_ms: 0.041083
          ...
        # Subtest: should set Zeethibal system to 255 (special location)
        ok 3 - should set Zeethibal system to 255 (special location)
          ---
          duration_ms: 0.032958
          ...
        1..3
    ok 5 - Zeethibal Creation
      ---
      duration_ms: 0.224333
      type: 'suite'
      ...
    # Subtest: Data Validation
        # Subtest: should have valid mercenary name at each index
        ok 1 - should have valid mercenary name at each index
          ---
          duration_ms: 0.065375
          ...
        # Subtest: should create different random crew members
        ok 2 - should create different random crew members
          ---
          duration_ms: 0.039834
          ...
        # Subtest: should handle all valid mercenary indices
        ok 3 - should handle all valid mercenary indices
          ---
          duration_ms: 0.099584
          ...
        1..3
    ok 6 - Data Validation
      ---
      duration_ms: 0.243042
      type: 'suite'
      ...
    1..6
ok 18 - Crew System
  ---
  duration_ms: 8.13475
  type: 'suite'
  ...
# (node:55593) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Equipment System
    # Subtest: Weapons
        # Subtest: should have exactly 4 weapon types (MAXWEAPONTYPE + EXTRAWEAPONS)
        ok 1 - should have exactly 4 weapon types (MAXWEAPONTYPE + EXTRAWEAPONS)
          ---
          duration_ms: 0.877709
          ...
        # Subtest: should match exact Palm OS weapon data
        ok 2 - should match exact Palm OS weapon data
          ---
          duration_ms: 0.081667
          ...
        # Subtest: should provide individual weapon access
        ok 3 - should provide individual weapon access
          ---
          duration_ms: 0.056709
          ...
        # Subtest: should distinguish buyable vs special weapons
        ok 4 - should distinguish buyable vs special weapons
          ---
          duration_ms: 0.060625
          ...
        1..4
    ok 1 - Weapons
      ---
      duration_ms: 1.914166
      type: 'suite'
      ...
    # Subtest: Shields
        # Subtest: should have exactly 3 shield types (MAXSHIELDTYPE + EXTRASHIELDS)
        ok 1 - should have exactly 3 shield types (MAXSHIELDTYPE + EXTRASHIELDS)
          ---
          duration_ms: 0.070834
          ...
        # Subtest: should match exact Palm OS shield data
        ok 2 - should match exact Palm OS shield data
          ---
          duration_ms: 0.134791
          ...
        # Subtest: should provide individual shield access
        ok 3 - should provide individual shield access
          ---
          duration_ms: 47.17875
          ...
        # Subtest: should distinguish buyable vs special shields
        ok 4 - should distinguish buyable vs special shields
          ---
          duration_ms: 0.288958
          ...
        1..4
    ok 2 - Shields
      ---
      duration_ms: 47.898167
      type: 'suite'
      ...
    # Subtest: Gadgets
        # Subtest: should have exactly 6 gadget types (MAXGADGETTYPE + EXTRAGADGETS)
        ok 1 - should have exactly 6 gadget types (MAXGADGETTYPE + EXTRAGADGETS)
          ---
          duration_ms: 0.138583
          ...
        # Subtest: should match exact Palm OS gadget data
        ok 2 - should match exact Palm OS gadget data
          ---
          duration_ms: 0.149
          ...
        # Subtest: should provide individual gadget access
        ok 3 - should provide individual gadget access
          ---
          duration_ms: 0.054
          ...
        # Subtest: should distinguish buyable vs special gadgets
        ok 4 - should distinguish buyable vs special gadgets
          ---
          duration_ms: 0.044291
          ...
        1..4
    ok 3 - Gadgets
      ---
      duration_ms: 0.462667
      type: 'suite'
      ...
    # Subtest: Error Handling
        # Subtest: should throw error for invalid equipment indices
        ok 1 - should throw error for invalid equipment indices
          ---
          duration_ms: 0.146125
          ...
        1..1
    ok 4 - Error Handling
      ---
      duration_ms: 0.203542
      type: 'suite'
      ...
    # Subtest: Data Validation
        # Subtest: should have valid tech levels for all equipment
        ok 1 - should have valid tech levels for all equipment
          ---
          duration_ms: 0.094333
          ...
        # Subtest: should have positive prices for all equipment
        ok 2 - should have positive prices for all equipment
          ---
          duration_ms: 0.040791
          ...
        # Subtest: should have valid chance values (0-100) for all equipment
        ok 3 - should have valid chance values (0-100) for all equipment
          ---
          duration_ms: 0.041208
          ...
        # Subtest: should have positive power for weapons and shields
        ok 4 - should have positive power for weapons and shields
          ---
          duration_ms: 0.039042
          ...
        # Subtest: should have non-empty names for all equipment
        ok 5 - should have non-empty names for all equipment
          ---
          duration_ms: 0.0435
          ...
        1..5
    ok 5 - Data Validation
      ---
      duration_ms: 0.315792
      type: 'suite'
      ...
    1..5
ok 19 - Equipment System
  ---
  duration_ms: 51.6985
  type: 'suite'
  ...
# (node:55594) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Political Systems
    # Subtest: Politics Data
        # Subtest: should have exactly 17 political systems (MAXPOLITICS)
        ok 1 - should have exactly 17 political systems (MAXPOLITICS)
          ---
          duration_ms: 0.424083
          ...
        # Subtest: should match exact Palm OS politics data
        ok 2 - should match exact Palm OS politics data
          ---
          duration_ms: 0.1495
          ...
        # Subtest: should have all politics with correct names in order
        ok 3 - should have all politics with correct names in order
          ---
          duration_ms: 0.063333
          ...
        1..3
    ok 1 - Politics Data
      ---
      duration_ms: 0.921958
      type: 'suite'
      ...
    # Subtest: Individual Politics Access
        # Subtest: should provide access to individual political systems
        ok 1 - should provide access to individual political systems
          ---
          duration_ms: 6.968875
          ...
        # Subtest: should throw error for invalid politics index
        ok 2 - should throw error for invalid politics index
          ---
          duration_ms: 0.14625
          ...
        1..2
    ok 2 - Individual Politics Access
      ---
      duration_ms: 7.26525
      type: 'suite'
      ...
    # Subtest: Politics Validation
        # Subtest: should validate politics indices
        ok 1 - should validate politics indices
          ---
          duration_ms: 0.082584
          ...
        # Subtest: should have valid strength levels (0-7)
        ok 2 - should have valid strength levels (0-7)
          ---
          duration_ms: 0.248542
          ...
        # Subtest: should have valid tech level constraints
        ok 3 - should have valid tech level constraints
          ---
          duration_ms: 0.105125
          ...
        # Subtest: should have valid reaction and bribe levels (0-7)
        ok 4 - should have valid reaction and bribe levels (0-7)
          ---
          duration_ms: 0.112125
          ...
        # Subtest: should have valid wanted trade items
        ok 5 - should have valid wanted trade items
          ---
          duration_ms: 0.129125
          ...
        # Subtest: should have boolean values for drugs and firearms
        ok 6 - should have boolean values for drugs and firearms
          ---
          duration_ms: 0.051916
          ...
        1..6
    ok 3 - Politics Validation
      ---
      duration_ms: 0.966875
      type: 'suite'
      ...
    # Subtest: Politics Constants
        # Subtest: should provide politics constants
        ok 1 - should provide politics constants
          ---
          duration_ms: 0.067958
          ...
        1..1
    ok 4 - Politics Constants
      ---
      duration_ms: 0.128959
      type: 'suite'
      ...
    # Subtest: Government Characteristics
        # Subtest: should have restrictive governments with low drug/firearm acceptance
        ok 1 - should have restrictive governments with low drug/firearm acceptance
          ---
          duration_ms: 0.060875
          ...
        # Subtest: should have permissive governments with high drug/firearm acceptance
        ok 2 - should have permissive governments with high drug/firearm acceptance
          ---
          duration_ms: 0.030209
          ...
        # Subtest: should have varying economic preferences
        ok 3 - should have varying economic preferences
          ---
          duration_ms: 0.049792
          ...
        # Subtest: should have appropriate police/pirate/trader distributions
        ok 4 - should have appropriate police/pirate/trader distributions
          ---
          duration_ms: 0.03075
          ...
        1..4
    ok 5 - Government Characteristics
      ---
      duration_ms: 0.217791
      type: 'suite'
      ...
    # Subtest: Tech Level Constraints
        # Subtest: should have appropriate tech level ranges for each government
        ok 1 - should have appropriate tech level ranges for each government
          ---
          duration_ms: 0.036
          ...
        1..1
    ok 6 - Tech Level Constraints
      ---
      duration_ms: 0.058666
      type: 'suite'
      ...
    1..6
ok 20 - Political Systems
  ---
  duration_ms: 10.070333
  type: 'suite'
  ...
# (node:55595) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Ship Types System
    # Subtest: should have exactly 15 ship types (MAXSHIPTYPE + EXTRASHIPS)
    ok 1 - should have exactly 15 ship types (MAXSHIPTYPE + EXTRASHIPS)
      ---
      duration_ms: 0.551792
      ...
    # Subtest: should match exact Palm OS ship type data
    ok 2 - should match exact Palm OS ship type data
      ---
      duration_ms: 0.138292
      ...
    # Subtest: should provide individual ship type access
    ok 3 - should provide individual ship type access
      ---
      duration_ms: 0.108708
      ...
    # Subtest: should throw error for invalid ship type index
    ok 4 - should throw error for invalid ship type index
      ---
      duration_ms: 0.107833
      ...
    # Subtest: should have all ships with valid names
    ok 5 - should have all ships with valid names
      ---
      duration_ms: 0.085458
      ...
    # Subtest: should have valid tech levels (0-8)
    ok 6 - should have valid tech levels (0-8)
      ---
      duration_ms: 0.054084
      ...
    # Subtest: should have non-negative values for slots and bays
    ok 7 - should have non-negative values for slots and bays
      ---
      duration_ms: 0.109416
      ...
    # Subtest: should have positive prices and hull strength
    ok 8 - should have positive prices and hull strength
      ---
      duration_ms: 0.166084
      ...
    # Subtest: should have valid occurrence rates (0-100)
    ok 9 - should have valid occurrence rates (0-100)
      ---
      duration_ms: 0.145542
      ...
    # Subtest: should have valid encounter strength values
    ok 10 - should have valid encounter strength values
      ---
      duration_ms: 0.40225
      ...
    # Subtest: should distinguish buyable vs non-buyable ships
    ok 11 - should distinguish buyable vs non-buyable ships
      ---
      duration_ms: 0.067291
      ...
    # Subtest: should have correct ship names in order
    ok 12 - should have correct ship names in order
      ---
      duration_ms: 0.057167
      ...
    1..12
ok 21 - Ship Types System
  ---
  duration_ms: 44.832583
  type: 'suite'
  ...
# (node:55596) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Solar Systems
    # Subtest: System Names
        # Subtest: should have exactly 120 solar system names (MAXSOLARSYSTEM)
        ok 1 - should have exactly 120 solar system names (MAXSOLARSYSTEM)
          ---
          duration_ms: 0.395666
          ...
        # Subtest: should match exact Palm OS system names
        ok 2 - should match exact Palm OS system names
          ---
          duration_ms: 1.176833
          ...
        # Subtest: should provide individual system name access
        ok 3 - should provide individual system name access
          ---
          duration_ms: 0.106083
          ...
        # Subtest: should throw error for invalid system name index
        ok 4 - should throw error for invalid system name index
          ---
          duration_ms: 0.14425
          ...
        # Subtest: should have all unique non-empty names
        ok 5 - should have all unique non-empty names
          ---
          duration_ms: 0.1865
          ...
        1..5
    ok 1 - System Names
      ---
      duration_ms: 10.37325
      type: 'suite'
      ...
    # Subtest: System Constants
        # Subtest: should have correct galaxy dimensions and limits
        ok 1 - should have correct galaxy dimensions and limits
          ---
          duration_ms: 0.141042
          ...
        # Subtest: should have correct special system indices
        ok 2 - should have correct special system indices
          ---
          duration_ms: 0.058042
          ...
        1..2
    ok 2 - System Constants
      ---
      duration_ms: 0.439583
      type: 'suite'
      ...
    # Subtest: Coordinate Validation
        # Subtest: should validate coordinates within galaxy bounds
        ok 1 - should validate coordinates within galaxy bounds
          ---
          duration_ms: 0.069084
          ...
        1..1
    ok 3 - Coordinate Validation
      ---
      duration_ms: 0.189291
      type: 'suite'
      ...
    # Subtest: System Generation
        # Subtest: should generate exactly 120 systems
        ok 1 - should generate exactly 120 systems
          ---
          duration_ms: 0.772916
          ...
        # Subtest: should generate systems with valid properties
        ok 2 - should generate systems with valid properties
          ---
          duration_ms: 8.754041
          ...
        # Subtest: should place wormhole systems in designated regions
        ok 3 - should place wormhole systems in designated regions
          ---
          duration_ms: 0.603417
          ...
        # Subtest: should generate deterministic results with same seed
        ok 4 - should generate deterministic results with same seed
          ---
          duration_ms: 1.072792
          ...
        # Subtest: should generate different results with different seeds
        ok 5 - should generate different results with different seeds
          ---
          duration_ms: 0.998667
          ...
        # Subtest: should avoid placing systems too close to each other
        ok 6 - should avoid placing systems too close to each other
          ---
          duration_ms: 13.782625
          ...
        1..6
    ok 4 - System Generation
      ---
      duration_ms: 26.106834
      type: 'suite'
      ...
    # Subtest: System Access
        # Subtest: should provide access to individual systems
        ok 1 - should provide access to individual systems
          ---
          duration_ms: 0.637333
          ...
        # Subtest: should throw error for invalid system index access
        ok 2 - should throw error for invalid system index access
          ---
          duration_ms: 0.545916
          ...
        1..2
    ok 5 - System Access
      ---
      duration_ms: 1.238042
      type: 'suite'
      ...
    # Subtest: Special Resources Distribution
        # Subtest: should have roughly 40% of systems with special resources
        ok 1 - should have roughly 40% of systems with special resources
          ---
          duration_ms: 0.556042
          ...
        1..1
    ok 6 - Special Resources Distribution
      ---
      duration_ms: 0.584417
      type: 'suite'
      ...
    # Subtest: Status Distribution
        # Subtest: should have roughly 15% of systems with special status
        ok 1 - should have roughly 15% of systems with special status
          ---
          duration_ms: 0.546792
          ...
        1..1
    ok 7 - Status Distribution
      ---
      duration_ms: 0.573417
      type: 'suite'
      ...
    # Subtest: Tech Level and Politics Constraints
        # Subtest: should respect politics tech level constraints
        ok 1 - should respect politics tech level constraints
          ---
          duration_ms: 0.558875
          ...
        1..1
    ok 8 - Tech Level and Politics Constraints
      ---
      duration_ms: 0.585
      type: 'suite'
      ...
    # Subtest: Trade Item Quantities
        # Subtest: should initialize all systems with zero trade item quantities
        ok 1 - should initialize all systems with zero trade item quantities
          ---
          duration_ms: 11.551083
          ...
        1..1
    ok 9 - Trade Item Quantities
      ---
      duration_ms: 11.596458
      type: 'suite'
      ...
    1..9
ok 22 - Solar Systems
  ---
  duration_ms: 52.419542
  type: 'suite'
  ...
# (node:55597) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Trade Items System
    # Subtest: should have exactly 10 trade items (MAXTRADEITEM)
    ok 1 - should have exactly 10 trade items (MAXTRADEITEM)
      ---
      duration_ms: 0.507292
      ...
    # Subtest: should match exact Palm OS trade item data
    ok 2 - should match exact Palm OS trade item data
      ---
      duration_ms: 0.151666
      ...
    # Subtest: should provide individual trade item access
    ok 3 - should provide individual trade item access
      ---
      duration_ms: 0.101834
      ...
    # Subtest: should throw error for invalid trade item index
    ok 4 - should throw error for invalid trade item index
      ---
      duration_ms: 0.098541
      ...
    # Subtest: should have all items with valid names
    ok 5 - should have all items with valid names
      ---
      duration_ms: 0.075375
      ...
    # Subtest: should have valid tech levels (0-7)
    ok 6 - should have valid tech levels (0-7)
      ---
      duration_ms: 0.058208
      ...
    # Subtest: should have positive prices and valid variance
    ok 7 - should have positive prices and valid variance
      ---
      duration_ms: 0.102375
      ...
    # Subtest: should have valid system status values
    ok 8 - should have valid system status values
      ---
      duration_ms: 0.156375
      ...
    # Subtest: should have valid resource values (-1 or 0-12)
    ok 9 - should have valid resource values (-1 or 0-12)
      ---
      duration_ms: 0.141041
      ...
    1..9
ok 23 - Trade Items System
  ---
  duration_ms: 2.230041
  type: 'suite'
  ...
# (node:55598) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Bank System
    # Subtest: Current Worth Calculation
        # Subtest: should calculate current worth correctly
        ok 1 - should calculate current worth correctly
          ---
          duration_ms: 1.604042
          ...
        # Subtest: should include moon value when moon is bought
        ok 2 - should include moon value when moon is bought
          ---
          duration_ms: 1.3325
          ...
        # Subtest: should handle negative worth correctly
        ok 3 - should handle negative worth correctly
          ---
          duration_ms: 1.761083
          ...
        1..3
    ok 1 - Current Worth Calculation
      ---
      duration_ms: 5.236792
      type: 'suite'
      ...
    # Subtest: Maximum Loan Calculation
        # Subtest: should return 500 for criminals (bad police record)
        ok 1 - should return 500 for criminals (bad police record)
          ---
          duration_ms: 1.985333
          ...
        # Subtest: should calculate loan based on worth for clean record
        ok 2 - should calculate loan based on worth for clean record
          ---
          duration_ms: 0.633084
          ...
        # Subtest: should cap maximum loan at 25000
        ok 3 - should cap maximum loan at 25000
          ---
          duration_ms: 0.679042
          ...
        # Subtest: should have minimum loan of 1000 for clean record
        ok 4 - should have minimum loan of 1000 for clean record
          ---
          duration_ms: 0.602708
          ...
        # Subtest: should round loan to nearest 500
        ok 5 - should round loan to nearest 500
          ---
          duration_ms: 0.768917
          ...
        1..5
    ok 2 - Maximum Loan Calculation
      ---
      duration_ms: 4.982209
      type: 'suite'
      ...
    # Subtest: Loan Operations
        # Subtest: should successfully get loan when conditions are met
        ok 1 - should successfully get loan when conditions are met
          ---
          duration_ms: 0.743167
          ...
        # Subtest: should limit loan to maximum available
        ok 2 - should limit loan to maximum available
          ---
          duration_ms: 0.792667
          ...
        # Subtest: should limit loan by existing debt
        ok 3 - should limit loan by existing debt
          ---
          duration_ms: 0.355209
          ...
        # Subtest: should fail when already at maximum debt
        ok 4 - should fail when already at maximum debt
          ---
          duration_ms: 0.225875
          ...
        # Subtest: should fail when requesting zero or negative amount
        ok 5 - should fail when requesting zero or negative amount
          ---
          duration_ms: 0.600125
          ...
        1..5
    ok 3 - Loan Operations
      ---
      duration_ms: 2.821541
      type: 'suite'
      ...
    # Subtest: Pay Back Operations
        # Subtest: should successfully pay back loan
        ok 1 - should successfully pay back loan
          ---
          duration_ms: 0.304458
          ...
        # Subtest: should limit payment to available credits
        ok 2 - should limit payment to available credits
          ---
          duration_ms: 0.1875
          ...
        # Subtest: should limit payment to debt amount
        ok 3 - should limit payment to debt amount
          ---
          duration_ms: 0.156291
          ...
        # Subtest: should fail when no debt exists
        ok 4 - should fail when no debt exists
          ---
          duration_ms: 0.131542
          ...
        # Subtest: should fail when requesting zero or negative payment
        ok 5 - should fail when requesting zero or negative payment
          ---
          duration_ms: 0.116208
          ...
        # Subtest: should handle pay back everything
        ok 6 - should handle pay back everything
          ---
          duration_ms: 0.109333
          ...
        1..6
    ok 4 - Pay Back Operations
      ---
      duration_ms: 1.148583
      type: 'suite'
      ...
    # Subtest: Interest Payment
        # Subtest: should charge 10% interest when credits available
        ok 1 - should charge 10% interest when credits available
          ---
          duration_ms: 0.438208
          ...
        # Subtest: should add unpaid interest to debt when insufficient credits
        ok 2 - should add unpaid interest to debt when insufficient credits
          ---
          duration_ms: 0.195917
          ...
        # Subtest: should do nothing when no debt exists
        ok 3 - should do nothing when no debt exists
          ---
          duration_ms: 0.130459
          ...
        # Subtest: should charge minimum 1 credit interest
        ok 4 - should charge minimum 1 credit interest
          ---
          duration_ms: 0.11275
          ...
        1..4
    ok 5 - Interest Payment
      ---
      duration_ms: 1.06575
      type: 'suite'
      ...
    # Subtest: Loan Availability Checks
        # Subtest: canGetLoan should return true when loan is available
        ok 1 - canGetLoan should return true when loan is available
          ---
          duration_ms: 0.145834
          ...
        # Subtest: canGetLoan should return false when at maximum debt
        ok 2 - canGetLoan should return false when at maximum debt
          ---
          duration_ms: 0.109292
          ...
        # Subtest: canPayBack should return true when debt exists
        ok 3 - canPayBack should return true when debt exists
          ---
          duration_ms: 0.131167
          ...
        # Subtest: canPayBack should return false when no debt
        ok 4 - canPayBack should return false when no debt
          ---
          duration_ms: 0.107625
          ...
        1..4
    ok 6 - Loan Availability Checks
      ---
      duration_ms: 0.545666
      type: 'suite'
      ...
    # Subtest: Edge Cases and Integration
        # Subtest: should handle multiple loan and payback operations
        ok 1 - should handle multiple loan and payback operations
          ---
          duration_ms: 0.135834
          ...
        # Subtest: should handle criminal with very high worth
        ok 2 - should handle criminal with very high worth
          ---
          duration_ms: 0.115167
          ...
        1..2
    ok 7 - Edge Cases and Integration
      ---
      duration_ms: 0.283708
      type: 'suite'
      ...
    1..7
ok 24 - Bank System
  ---
  duration_ms: 16.744334
  type: 'suite'
  ...
# (node:55599) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Bought for 1980, sold for 1500 (base: 2000, expected: 1500)
# Subtest: Equipment Trading System
    # Subtest: Weapon Trading Operations
        # Subtest: should successfully buy weapon when conditions are met
        ok 1 - should successfully buy weapon when conditions are met
          ---
          duration_ms: 1.574459
          ...
        # Subtest: should fail when insufficient credits
        ok 2 - should fail when insufficient credits
          ---
          duration_ms: 5.179125
          ...
        # Subtest: should fail when no empty weapon slots
        ok 3 - should fail when no empty weapon slots
          ---
          duration_ms: 0.766458
          ...
        # Subtest: should fail when tech level too low
        ok 4 - should fail when tech level too low
          ---
          duration_ms: 0.685125
          ...
        # Subtest: should successfully sell installed weapon
        ok 5 - should successfully sell installed weapon
          ---
          duration_ms: 15.188209
          ...
        # Subtest: should fail to sell from empty slot
        ok 6 - should fail to sell from empty slot
          ---
          duration_ms: 0.705625
          ...
        # Subtest: should apply trader skill discount on purchase
        ok 7 - should apply trader skill discount on purchase
          ---
          duration_ms: 1.407166
          ...
        # Subtest: should use authentic 75% sell price formula
        ok 8 - should use authentic 75% sell price formula
          ---
          duration_ms: 0.866375
          ...
        1..8
    ok 1 - Weapon Trading Operations
      ---
      duration_ms: 27.466625
      ...
    # Subtest: Shield Trading Operations
        # Subtest: should fail to buy shield when no shield slots
        ok 1 - should fail to buy shield when no shield slots
          ---
          duration_ms: 0.809125
          ...
        # Subtest: should fail to sell shield from empty slot when no shield slots
        ok 2 - should fail to sell shield from empty slot when no shield slots
          ---
          duration_ms: 11.024667
          ...
        # Subtest: should handle shield operations correctly for ships with shield slots
        ok 3 - should handle shield operations correctly for ships with shield slots
          ---
          duration_ms: 0.692916
          ...
        1..3
    ok 2 - Shield Trading Operations
      ---
      duration_ms: 12.753459
      ...
    # Subtest: Gadget Trading Operations
        # Subtest: should successfully buy and install gadget
        ok 1 - should successfully buy and install gadget
          ---
          duration_ms: 0.733708
          ...
        # Subtest: should handle expensive gadgets correctly
        ok 2 - should handle expensive gadgets correctly
          ---
          duration_ms: 0.692334
          ...
        1..2
    ok 3 - Gadget Trading Operations
      ---
      duration_ms: 1.518833
      ...
    # Subtest: Equipment Availability System
        # Subtest: should filter equipment by tech level
        ok 1 - should filter equipment by tech level
          ---
          duration_ms: 0.689
          ...
        # Subtest: should apply trader skill discount in availability display
        ok 2 - should apply trader skill discount in availability display
          ---
          duration_ms: 0.675083
          ...
        # Subtest: should list sellable equipment correctly
        ok 3 - should list sellable equipment correctly
          ---
          duration_ms: 6.6865
          ...
        1..3
    ok 4 - Equipment Availability System
      ---
      duration_ms: 8.17425
      ...
# Direct weapon purchase result: Action 'buy_weapon' is not available in current game mode
    # Subtest: Integration with Game Engine
        # Subtest: should integrate with game action system
        ok 1 - should integrate with game action system
          ---
          duration_ms: 78.148792
          ...
        # Subtest: should show equipment actions when available
        ok 2 - should show equipment actions when available
          ---
          duration_ms: 0.351375
          ...
        1..2
    ok 5 - Integration with Game Engine
      ---
      duration_ms: 78.655625
      ...
    # Subtest: Edge Cases and Error Handling
        # Subtest: should handle invalid equipment indices
        ok 1 - should handle invalid equipment indices
          ---
          duration_ms: 0.152291
          ...
        # Subtest: should handle invalid slot indices for selling
        ok 2 - should handle invalid slot indices for selling
          ---
          duration_ms: 0.150167
          ...
        # Subtest: should handle equipment installation edge cases
        ok 3 - should handle equipment installation edge cases
          ---
          duration_ms: 0.150834
          ...
        1..3
    ok 6 - Edge Cases and Error Handling
      ---
      duration_ms: 0.565375
      ...
    # Subtest: Price Calculation Accuracy
        # Subtest: should calculate correct sell prices (75% of base price)
        ok 1 - should calculate correct sell prices (75% of base price)
          ---
          duration_ms: 0.55675
          ...
        # Subtest: should apply trader skill discounts correctly
        ok 2 - should apply trader skill discounts correctly
          ---
          duration_ms: 0.427834
          ...
        # Subtest: should show correct prices in equipment availability
        ok 3 - should show correct prices in equipment availability
          ---
          duration_ms: 0.199833
          ...
        1..3
    ok 7 - Price Calculation Accuracy
      ---
      duration_ms: 1.281042
      ...
    # Subtest: Equipment Information Accuracy
        # Subtest: should provide accurate weapon specifications
        ok 1 - should provide accurate weapon specifications
          ---
          duration_ms: 0.133375
          ...
        # Subtest: should provide accurate shield specifications
        ok 2 - should provide accurate shield specifications
          ---
          duration_ms: 0.135416
          ...
        # Subtest: should list installed equipment for selling accurately
        ok 3 - should list installed equipment for selling accurately
          ---
          duration_ms: 1.379083
          ...
        1..3
    ok 8 - Equipment Information Accuracy
      ---
      duration_ms: 1.806
      ...
    1..8
ok 25 - Equipment Trading System
  ---
  duration_ms: 133.288917
  ...
# (node:55622) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Cost without fuel compactor: 28
# Cost with fuel compactor: 36
# Flea fuel cost: 20/20 = 1 credits/unit
# Gnat fuel cost: 28/14 = 2 credits/unit
# Ship type 2: Max fuel 17, Cost per unit 3
# Tank capacity: 14 -> 18 (with fuel compactor)
# Flea: 20 fuel capacity, 1 credits/unit
# Gnat: 14 fuel capacity, 2 credits/unit
# Firefly: 17 fuel capacity, 3 credits/unit
# Mosquito: 13 fuel capacity, 5 credits/unit
# Subtest: Fuel System
    # Subtest: Fuel Cost Calculations
        # Subtest: should calculate full refuel cost correctly
        ok 1 - should calculate full refuel cost correctly
          ---
          duration_ms: 1.566958
          ...
        # Subtest: should return zero cost when fuel tanks are full
        ok 2 - should return zero cost when fuel tanks are full
          ---
          duration_ms: 13.43125
          ...
        # Subtest: should calculate cost for different ship types
        ok 3 - should calculate cost for different ship types
          ---
          duration_ms: 0.835625
          ...
        # Subtest: should handle fuel compactor gadget effect
        ok 4 - should handle fuel compactor gadget effect
          ---
          duration_ms: 0.784
          ...
        1..4
    ok 1 - Fuel Cost Calculations
      ---
      duration_ms: 17.216208
      ...
    # Subtest: Affordable Fuel Calculations
        # Subtest: should calculate affordable fuel within credit limit
        ok 1 - should calculate affordable fuel within credit limit
          ---
          duration_ms: 0.693708
          ...
        # Subtest: should limit affordable fuel by tank capacity
        ok 2 - should limit affordable fuel by tank capacity
          ---
          duration_ms: 0.686791
          ...
        # Subtest: should handle insufficient credits gracefully
        ok 3 - should handle insufficient credits gracefully
          ---
          duration_ms: 0.5395
          ...
        # Subtest: should handle partial fuel purchases
        ok 4 - should handle partial fuel purchases
          ---
          duration_ms: 4.446
          ...
        1..4
    ok 2 - Affordable Fuel Calculations
      ---
      duration_ms: 7.456584
      ...
    # Subtest: Fuel Purchase Operations
        # Subtest: should successfully buy fuel when conditions are met
        ok 1 - should successfully buy fuel when conditions are met
          ---
          duration_ms: 0.311333
          ...
        # Subtest: should fail when fuel tanks are full
        ok 2 - should fail when fuel tanks are full
          ---
          duration_ms: 0.163542
          ...
        # Subtest: should fail when insufficient credits
        ok 3 - should fail when insufficient credits
          ---
          duration_ms: 0.115417
          ...
        # Subtest: should limit purchase to available credits
        ok 4 - should limit purchase to available credits
          ---
          duration_ms: 0.11175
          ...
        # Subtest: should limit purchase to tank capacity
        ok 5 - should limit purchase to tank capacity
          ---
          duration_ms: 0.111125
          ...
        # Subtest: should handle different ship types with different fuel costs
        ok 6 - should handle different ship types with different fuel costs
          ---
          duration_ms: 0.257625
          ...
        1..6
    ok 3 - Fuel Purchase Operations
      ---
      duration_ms: 1.328333
      ...
    # Subtest: Refuel to Full Operations
        # Subtest: should successfully refuel to full capacity
        ok 1 - should successfully refuel to full capacity
          ---
          duration_ms: 0.127791
          ...
        # Subtest: should fail when insufficient credits for full refuel
        ok 2 - should fail when insufficient credits for full refuel
          ---
          duration_ms: 0.107875
          ...
        # Subtest: should handle already full tanks
        ok 3 - should handle already full tanks
          ---
          duration_ms: 0.10925
          ...
        1..3
    ok 4 - Refuel to Full Operations
      ---
      duration_ms: 0.432875
      ...
    # Subtest: Fuel Status Information
        # Subtest: should provide accurate fuel status information
        ok 1 - should provide accurate fuel status information
          ---
          duration_ms: 0.141209
          ...
        # Subtest: should handle empty fuel tanks
        ok 2 - should handle empty fuel tanks
          ---
          duration_ms: 0.167667
          ...
        # Subtest: should handle full fuel tanks
        ok 3 - should handle full fuel tanks
          ---
          duration_ms: 0.127709
          ...
        # Subtest: should adapt to different ship types
        ok 4 - should adapt to different ship types
          ---
          duration_ms: 0.145333
          ...
        1..4
    ok 5 - Fuel Status Information
      ---
      duration_ms: 0.682666
      ...
    # Subtest: Integration with Ship Systems
        # Subtest: should respect fuel compactor gadget effects
        ok 1 - should respect fuel compactor gadget effects
          ---
          duration_ms: 0.145292
          ...
        # Subtest: should work with ships that have different fuel specifications
        ok 2 - should work with ships that have different fuel specifications
          ---
          duration_ms: 8.172459
          ...
        1..2
    ok 6 - Integration with Ship Systems
      ---
      duration_ms: 8.417375
      ...
    # Subtest: Error Handling and Edge Cases
        # Subtest: should handle zero credit purchases gracefully
        ok 1 - should handle zero credit purchases gracefully
          ---
          duration_ms: 0.166042
          ...
        # Subtest: should handle negative fuel requests gracefully
        ok 2 - should handle negative fuel requests gracefully
          ---
          duration_ms: 0.122584
          ...
        # Subtest: should handle fuel overflow correctly
        ok 3 - should handle fuel overflow correctly
          ---
          duration_ms: 0.116792
          ...
        # Subtest: should handle edge case where fuel costs more than credits available
        ok 4 - should handle edge case where fuel costs more than credits available
          ---
          duration_ms: 1.510209
          ...
        1..4
    ok 7 - Error Handling and Edge Cases
      ---
      duration_ms: 2.125375
      ...
# 1000 fuel operations completed in 0.84ms
    # Subtest: Integration with Game Engine
        # Subtest: should integrate with refuel_ship action
        ok 1 - should integrate with refuel_ship action
          ---
          duration_ms: 104.261708
          ...
        # Subtest: should show refuel action when fuel is not full
        ok 2 - should show refuel action when fuel is not full
          ---
          duration_ms: 0.431834
          ...
        # Subtest: should not show refuel action when fuel is full
        ok 3 - should not show refuel action when fuel is full
          ---
          duration_ms: 0.27275
          ...
        1..3
    ok 8 - Integration with Game Engine
      ---
      duration_ms: 105.176375
      ...
    # Subtest: Price Calculations Accuracy
        # Subtest: should calculate accurate costs for different scenarios
        ok 1 - should calculate accurate costs for different scenarios
          ---
          duration_ms: 0.494167
          ...
        # Subtest: should maintain price consistency across functions
        ok 2 - should maintain price consistency across functions
          ---
          duration_ms: 0.10425
          ...
        # Subtest: should provide consistent fuel status information
        ok 3 - should provide consistent fuel status information
          ---
          duration_ms: 0.106625
          ...
        1..3
    ok 9 - Price Calculations Accuracy
      ---
      duration_ms: 0.79425
      ...
    # Subtest: Performance and Optimization
        # Subtest: should execute fuel operations efficiently
        ok 1 - should execute fuel operations efficiently
          ---
          duration_ms: 0.977708
          ...
        # Subtest: should handle large numbers correctly
        ok 2 - should handle large numbers correctly
          ---
          duration_ms: 0.11975
          ...
        1..2
    ok 10 - Performance and Optimization
      ---
      duration_ms: 1.164625
      ...
    1..10
ok 26 - Fuel System
  ---
  duration_ms: 152.356417
  ...
# (node:55623) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Price Calculation System
    # Subtest: Standard Price Calculation
        # Subtest: should calculate base price from tech level and price increment
        ok 1 - should calculate base price from tech level and price increment
          ---
          duration_ms: 0.489375
          ...
        # Subtest: should apply government wanted item bonus (4/3 multiplier)
        ok 2 - should apply government wanted item bonus (4/3 multiplier)
          ---
          duration_ms: 0.056625
          ...
        # Subtest: should apply high trader activity price reduction
        ok 3 - should apply high trader activity price reduction
          ---
          duration_ms: 0.12475
          ...
        # Subtest: should apply system size production bonus
        ok 4 - should apply system size production bonus
          ---
          duration_ms: 0.049042
          ...
        # Subtest: should apply special resource modifiers
        ok 5 - should apply special resource modifiers
          ---
          duration_ms: 0.100792
          ...
        # Subtest: should return 0 for politically restricted items
        ok 6 - should return 0 for politically restricted items
          ---
          duration_ms: 0.042416
          ...
        # Subtest: should return 0 if tech level too low for usage
        ok 7 - should return 0 if tech level too low for usage
          ---
          duration_ms: 0.152042
          ...
        # Subtest: should never return negative prices
        ok 8 - should never return negative prices
          ---
          duration_ms: 0.045
          ...
        1..8
    ok 1 - Standard Price Calculation
      ---
      duration_ms: 1.507708
      type: 'suite'
      ...
    # Subtest: Special Event Price Modifiers
        # Subtest: should apply 1.5x multiplier for special events
        ok 1 - should apply 1.5x multiplier for special events
          ---
          duration_ms: 0.11925
          ...
        # Subtest: should only apply modifier for matching status
        ok 2 - should only apply modifier for matching status
          ---
          duration_ms: 0.139292
          ...
        1..2
    ok 2 - Special Event Price Modifiers
      ---
      duration_ms: 0.368833
      type: 'suite'
      ...
    # Subtest: Random Price Variance
        # Subtest: should apply variance within expected range
        ok 1 - should apply variance within expected range
          ---
          duration_ms: 0.067
          ...
        # Subtest: should never result in negative prices after variance
        ok 2 - should never result in negative prices after variance
          ---
          duration_ms: 0.035958
          ...
        1..2
    ok 3 - Random Price Variance
      ---
      duration_ms: 0.139292
      type: 'suite'
      ...
    # Subtest: Buy/Sell Price Calculations
        # Subtest: should calculate correct buy prices with trader skill modifier
        ok 1 - should calculate correct buy prices with trader skill modifier
          ---
          duration_ms: 0.065
          ...
        # Subtest: should apply criminal penalty to buy prices
        ok 2 - should apply criminal penalty to buy prices
          ---
          duration_ms: 0.030417
          ...
        # Subtest: should ensure buy price is always higher than sell price
        ok 3 - should ensure buy price is always higher than sell price
          ---
          duration_ms: 0.033625
          ...
        # Subtest: should apply criminal penalty to sell prices
        ok 4 - should apply criminal penalty to sell prices
          ---
          duration_ms: 0.029125
          ...
        1..4
    ok 4 - Buy/Sell Price Calculations
      ---
      duration_ms: 0.2325
      type: 'suite'
      ...
    # Subtest: Political and Tech Restrictions
        # Subtest: should correctly identify politically restricted items
        ok 1 - should correctly identify politically restricted items
          ---
          duration_ms: 0.046458
          ...
        # Subtest: should correctly check if system can produce items
        ok 2 - should correctly check if system can produce items
          ---
          duration_ms: 0.031834
          ...
        # Subtest: should correctly check if system can use items
        ok 3 - should correctly check if system can use items
          ---
          duration_ms: 0.026792
          ...
        1..3
    ok 5 - Political and Tech Restrictions
      ---
      duration_ms: 0.1445
      type: 'suite'
      ...
    # Subtest: Edge Cases and Error Handling
        # Subtest: should handle invalid trade item indices gracefully
        ok 1 - should handle invalid trade item indices gracefully
          ---
          duration_ms: 0.1175
          ...
        # Subtest: should handle extreme parameter values
        ok 2 - should handle extreme parameter values
          ---
          duration_ms: 0.028875
          ...
        # Subtest: should produce consistent results for same inputs
        ok 3 - should produce consistent results for same inputs
          ---
          duration_ms: 0.031625
          ...
        1..3
    ok 6 - Edge Cases and Error Handling
      ---
      duration_ms: 0.213209
      type: 'suite'
      ...
    # Subtest: Integration with Game Data
        # Subtest: should work with all trade items
        ok 1 - should work with all trade items
          ---
          duration_ms: 0.111041
          ...
        # Subtest: should respect trade item min/max prices
        ok 2 - should respect trade item min/max prices
          ---
          duration_ms: 0.044292
          ...
        1..2
    ok 7 - Integration with Game Data
      ---
      duration_ms: 0.239959
      type: 'suite'
      ...
    1..7
ok 27 - Price Calculation System
  ---
  duration_ms: 108.352917
  type: 'suite'
  ...
# (node:55624) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Ship Pricing System
    # Subtest: calculateShipTradeInValue - basic functionality
    ok 1 - calculateShipTradeInValue - basic functionality
      ---
      duration_ms: 1.805417
      ...
    # Subtest: calculateShipTradeInValue - tribble penalty
    ok 2 - calculateShipTradeInValue - tribble penalty
      ---
      duration_ms: 16.352458
      ...
    # Subtest: calculateShipTradeInValue - insurance vs trade-in
    ok 3 - calculateShipTradeInValue - insurance vs trade-in
      ---
      duration_ms: 8.45975
      ...
    # Subtest: calculateShipTradeInValue - damage reduces value
    ok 4 - calculateShipTradeInValue - damage reduces value
      ---
      duration_ms: 0.945583
      ...
    # Subtest: calculateShipBasePrice - trader skill discount
    ok 5 - calculateShipBasePrice - trader skill discount
      ---
      duration_ms: 1.4655
      ...
    # Subtest: calculateShipNetPrice - current ship returns 0
    ok 6 - calculateShipNetPrice - current ship returns 0
      ---
      duration_ms: 0.520667
      ...
    # Subtest: calculateShipNetPrice - more expensive ship costs money
    ok 7 - calculateShipNetPrice - more expensive ship costs money
      ---
      duration_ms: 0.904791
      ...
    # Subtest: calculateShipNetPrice - cheaper ship might be free or profitable
    ok 8 - calculateShipNetPrice - cheaper ship might be free or profitable
      ---
      duration_ms: 2.720208
      ...
    # Subtest: getAvailableShipsForPurchase - excludes current ship
    ok 9 - getAvailableShipsForPurchase - excludes current ship
      ---
      duration_ms: 0.465083
      ...
    # Subtest: getAvailableShipsForPurchase - includes affordability info
    ok 10 - getAvailableShipsForPurchase - includes affordability info
      ---
      duration_ms: 0.409958
      ...
    # Subtest: canPurchaseShip - debt prevents purchase
    ok 11 - canPurchaseShip - debt prevents purchase
      ---
      duration_ms: 0.174709
      ...
    # Subtest: canPurchaseShip - insufficient funds
    ok 12 - canPurchaseShip - insufficient funds
      ---
      duration_ms: 0.118583
      ...
    # Subtest: canPurchaseShip - valid purchase
    ok 13 - canPurchaseShip - valid purchase
      ---
      duration_ms: 0.1095
      ...
    # Subtest: canPurchaseShip - passenger quarter requirements
    ok 14 - canPurchaseShip - passenger quarter requirements
      ---
      duration_ms: 0.109917
      ...
    # Subtest: canPurchaseShip - reactor prevents ship sale
    ok 15 - canPurchaseShip - reactor prevents ship sale
      ---
      duration_ms: 0.107958
      ...
    1..15
ok 28 - Ship Pricing System
  ---
  duration_ms: 36.061583
  type: 'suite'
  ...
# (node:55625) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Ship Trading Integration
    # Subtest: ship trading action is available on planets
    ok 1 - ship trading action is available on planets
      ---
      duration_ms: 2.54075
      ...
    # Subtest: ship trading not available in space
    ok 2 - ship trading not available in space
      ---
      duration_ms: 9.733417
      ...
    # Subtest: complete ship purchase flow
    ok 3 - complete ship purchase flow
      ---
      duration_ms: 6.852125
      ...
    # Subtest: ship purchase with insufficient funds
    ok 4 - ship purchase with insufficient funds
      ---
      duration_ms: 0.799459
      ...
    # Subtest: ship menu action returns available ships
    ok 5 - ship menu action returns available ships
      ---
      duration_ms: 0.640959
      ...
    1..5
ok 29 - Ship Trading Integration
  ---
  duration_ms: 21.249458
  type: 'suite'
  ...
# (node:55626) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Ship Trading System
    # Subtest: purchaseShip - successful purchase
    ok 1 - purchaseShip - successful purchase
      ---
      duration_ms: 5.695458
      ...
    # Subtest: purchaseShip - insufficient funds
    ok 2 - purchaseShip - insufficient funds
      ---
      duration_ms: 0.737792
      ...
    # Subtest: purchaseShip - debt prevents purchase
    ok 3 - purchaseShip - debt prevents purchase
      ---
      duration_ms: 1.789041
      ...
    # Subtest: purchaseShip - cargo transfer
    ok 4 - purchaseShip - cargo transfer
      ---
      duration_ms: 0.827959
      ...
    # Subtest: purchaseShip - equipment transfer
    ok 5 - purchaseShip - equipment transfer
      ---
      duration_ms: 0.637459
      ...
    # Subtest: purchaseShip - crew transfer
    ok 6 - purchaseShip - crew transfer
      ---
      duration_ms: 0.668625
      ...
    # Subtest: purchaseShip - same ship type
    ok 7 - purchaseShip - same ship type
      ---
      duration_ms: 0.524292
      ...
    # Subtest: purchaseShip - non-buyable ship
    ok 8 - purchaseShip - non-buyable ship
      ---
      duration_ms: 0.5735
      ...
    # Subtest: getShipPurchaseInfo - comprehensive info
    ok 9 - getShipPurchaseInfo - comprehensive info
      ---
      duration_ms: 0.697042
      ...
    # Subtest: getShipPurchaseInfo - cargo loss calculation
    ok 10 - getShipPurchaseInfo - cargo loss calculation
      ---
      duration_ms: 0.719333
      ...
    # Subtest: getAvailableShipsForPurchase - excludes current ship
    ok 11 - getAvailableShipsForPurchase - excludes current ship
      ---
      duration_ms: 123.743333
      ...
    # Subtest: getAvailableShipsForPurchase - includes all buyable ships
    ok 12 - getAvailableShipsForPurchase - includes all buyable ships
      ---
      duration_ms: 0.19325
      ...
    # Subtest: canPurchaseShip - comprehensive validation
    ok 13 - canPurchaseShip - comprehensive validation
      ---
      duration_ms: 0.176417
      ...
    1..13
ok 30 - Ship Trading System
  ---
  duration_ms: 137.812375
  type: 'suite'
  ...
# (node:55627) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: ship valuation - base ship value calculation
ok 31 - ship valuation - base ship value calculation
  ---
  duration_ms: 56.404458
  ...
# Subtest: ship valuation - insurance value vs trade-in value
ok 32 - ship valuation - insurance value vs trade-in value
  ---
  duration_ms: 0.758458
  ...
# Subtest: ship valuation - tribble penalty reduces trade-in value
ok 33 - ship valuation - tribble penalty reduces trade-in value
  ---
  duration_ms: 0.916458
  ...
# Subtest: ship valuation - equipment adds to ship value
ok 34 - ship valuation - equipment adds to ship value
  ---
  duration_ms: 5.425125
  ...
# Subtest: ship valuation - hull damage reduces value
ok 35 - ship valuation - hull damage reduces value
  ---
  duration_ms: 0.77325
  ...
# Subtest: ship valuation - cargo affects total worth calculation
ok 36 - ship valuation - cargo affects total worth calculation
  ---
  duration_ms: 0.526667
  ...
# Subtest: ship valuation - different ship types have different values
ok 37 - ship valuation - different ship types have different values
  ---
  duration_ms: 0.616125
  ...
# Subtest: ship valuation - special ship conditions
ok 38 - ship valuation - special ship conditions
  ---
  duration_ms: 0.51175
  ...
# Subtest: ship valuation - consistency between calculations
ok 39 - ship valuation - consistency between calculations
  ---
  duration_ms: 0.739292
  ...
# Subtest: ship valuation - insurance claim calculation accuracy
ok 40 - ship valuation - insurance claim calculation accuracy
  ---
  duration_ms: 0.833875
  ...
# (node:55628) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Trading Functions
    # Subtest: Cargo Bay Management
        # Subtest: should calculate total cargo bays correctly
        ok 1 - should calculate total cargo bays correctly
          ---
          duration_ms: 2.965583
          ...
        # Subtest: should account for extra cargo bay gadgets
        ok 2 - should account for extra cargo bay gadgets
          ---
          duration_ms: 1.452583
          ...
        # Subtest: should calculate filled cargo bays correctly
        ok 3 - should calculate filled cargo bays correctly
          ---
          duration_ms: 1.289209
          ...
        # Subtest: should calculate available cargo space
        ok 4 - should calculate available cargo space
          ---
          duration_ms: 3.355458
          ...
        1..4
    ok 1 - Cargo Bay Management
      ---
      duration_ms: 13.459084
      type: 'suite'
      ...
    # Subtest: Available Funds Calculation
        # Subtest: should return all credits when reserve money is disabled
        ok 1 - should return all credits when reserve money is disabled
          ---
          duration_ms: 0.589667
          ...
        # Subtest: should reserve money for expenses when enabled
        ok 2 - should reserve money for expenses when enabled
          ---
          duration_ms: 0.656375
          ...
        # Subtest: should not return negative funds
        ok 3 - should not return negative funds
          ---
          duration_ms: 0.510167
          ...
        1..3
    ok 2 - Available Funds Calculation
      ---
      duration_ms: 1.979
      type: 'suite'
      ...
    # Subtest: Buy Cargo Operations
        # Subtest: should successfully buy cargo when conditions are met
        ok 1 - should successfully buy cargo when conditions are met
          ---
          duration_ms: 0.6095
          ...
        # Subtest: should succeed but limit purchase when insufficient credits
        ok 2 - should succeed but limit purchase when insufficient credits
          ---
          duration_ms: 0.544958
          ...
        # Subtest: should fail when insufficient cargo space
        ok 3 - should fail when insufficient cargo space
          ---
          duration_ms: 0.351084
          ...
        # Subtest: should fail when item not available in system
        ok 4 - should fail when item not available in system
          ---
          duration_ms: 0.210167
          ...
        # Subtest: should limit purchase to available quantity
        ok 5 - should limit purchase to available quantity
          ---
          duration_ms: 0.205458
          ...
        # Subtest: should fail when item price is zero
        ok 6 - should fail when item price is zero
          ---
          duration_ms: 0.198125
          ...
        # Subtest: should fail when debt is too large
        ok 7 - should fail when debt is too large
          ---
          duration_ms: 0.196875
          ...
        # Subtest: should update buying price tracking
        ok 8 - should update buying price tracking
          ---
          duration_ms: 0.200292
          ...
        1..8
    ok 3 - Buy Cargo Operations
      ---
      duration_ms: 2.715458
      type: 'suite'
      ...
    # Subtest: Sell Cargo Operations
        # Subtest: should successfully sell cargo when conditions are met
        ok 1 - should successfully sell cargo when conditions are met
          ---
          duration_ms: 0.247583
          ...
        # Subtest: should fail when no cargo to sell
        ok 2 - should fail when no cargo to sell
          ---
          duration_ms: 12.156875
          ...
        # Subtest: should fail when sell price is zero
        ok 3 - should fail when sell price is zero
          ---
          duration_ms: 1.420834
          ...
        # Subtest: should limit sale to available cargo
        ok 4 - should limit sale to available cargo
          ---
          duration_ms: 0.361583
          ...
        # Subtest: should handle selling all cargo
        ok 5 - should handle selling all cargo
          ---
          duration_ms: 0.2385
          ...
        1..5
    ok 4 - Sell Cargo Operations
      ---
      duration_ms: 14.66275
      type: 'suite'
      ...
    # Subtest: Integration Tests
        # Subtest: should handle buy and sell cycle correctly
        ok 1 - should handle buy and sell cycle correctly
          ---
          duration_ms: 0.195708
          ...
        # Subtest: should respect cargo space limits in realistic scenario
        ok 2 - should respect cargo space limits in realistic scenario
          ---
          duration_ms: 0.480291
          ...
        1..2
    ok 5 - Integration Tests
      ---
      duration_ms: 1.138459
      type: 'suite'
      ...
    1..5
ok 41 - Trading Functions
  ---
  duration_ms: 34.9345
  type: 'suite'
  ...
# (node:55629) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Total encounters: 600
# Encounter types found: [
#    0,  1,  2, 10,
#   20, 24, 25, 73
# ]
# Easy difficulty encounters: 200/200
# Hard difficulty encounters: 200/200
# Flea encounters: 200/200
# Gnat encounters: 200/200
# Anarchy (high pirates, low police) encounters: [ 10, 20 ]
# Military (no pirates, high police) encounters: [ 0, 1, 20, 24, 25 ]
# === COMPREHENSIVE ENCOUNTER STATISTICS ===
# Total encounters: 1000/1000
# Regular encounters: 965 (96.5%)
# Trading encounters: 23 (2.3%)
# Very rare encounters: 12 (1.2%)
# Encounter type distribution:
#   Type 0: 34 (3.4%)
#   Type 1: 327 (32.7%)
#   Type 10: 378 (37.8%)
#   Type 20: 226 (22.6%)
#   Type 24: 14 (1.4%)
#   Type 25: 9 (0.9%)
#   Type 72: 4 (0.4%)
#   Type 73: 2 (0.2%)
#   Type 74: 2 (0.2%)
#   Type 80: 2 (0.2%)
#   Type 81: 1 (0.1%)
#   Type 82: 1 (0.1%)
# Difficulty 0: 100/100 encounters
# Difficulty 1: 100/100 encounters
# Difficulty 2: 100/100 encounters
# Difficulty 3: 100/100 encounters
# Difficulty 4: 100/100 encounters
# Pirate encounters when already raided: 0/100
# Subtest: Encounter System Integration
    # Subtest: should generate all major encounter types during travel
    ok 1 - should generate all major encounter types during travel
      ---
      duration_ms: 3.021541
      ...
    # Subtest: should respect difficulty level in encounter frequency
    ok 2 - should respect difficulty level in encounter frequency
      ---
      duration_ms: 2.258334
      ...
    # Subtest: should properly handle ship type modifiers (Flea vs other ships)
    ok 3 - should properly handle ship type modifiers (Flea vs other ships)
      ---
      duration_ms: 21.187416
      ...
    # Subtest: should factor in system politics for encounter types
    ok 4 - should factor in system politics for encounter types
      ---
      duration_ms: 0.983959
      ...
    # Subtest: should integrate all encounter systems properly
    ok 5 - should integrate all encounter systems properly
      ---
      duration_ms: 3.919666
      ...
    # Subtest: should maintain authentic Palm OS encounter mechanics
    ok 6 - should maintain authentic Palm OS encounter mechanics
      ---
      duration_ms: 0.475083
      ...
    # Subtest: should handle raided flag correctly for pirate encounters
    ok 7 - should handle raided flag correctly for pirate encounters
      ---
      duration_ms: 0.211166
      ...
    1..7
ok 42 - Encounter System Integration
  ---
  duration_ms: 33.796333
  ...
# (node:55630) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Very rare encounter types found: [ 72, 73, 74, 80, 81, 82 ]
# Final veryRareEncounter flags: 111111
# Total encounters: 500, Very rare: 6
# Marie already done: 1 encounters available
# Ahab already done: 1 encounters available
# Conrad already done: 3 encounters available
# Most encounters done: 0 encounters available
# All encounters done: 0 encounters available
# Subtest: Very Rare Encounter System
    # Subtest: should implement correct very rare encounter probability (5 in 1000)
    ok 1 - should implement correct very rare encounter probability (5 in 1000)
      ---
      duration_ms: 0.699625
      ...
    # Subtest: should generate all types of very rare encounters
    ok 2 - should generate all types of very rare encounters
      ---
      duration_ms: 3.102
      ...
    # Subtest: should prevent duplicate very rare encounters using flags
    ok 3 - should prevent duplicate very rare encounters using flags
      ---
      duration_ms: 8.288
      ...
    # Subtest: should provide correct encounter types and ranges
    ok 4 - should provide correct encounter types and ranges
      ---
      duration_ms: 0.345917
      ...
    # Subtest: should have correct combat actions for very rare encounters
    ok 5 - should have correct combat actions for very rare encounters
      ---
      duration_ms: 0.872458
      ...
    # Subtest: should integrate with tick-based travel system
    ok 6 - should integrate with tick-based travel system
      ---
      duration_ms: 0.879459
      ...
    # Subtest: should respect bitmask flag system for encounter tracking
    ok 7 - should respect bitmask flag system for encounter tracking
      ---
      duration_ms: 1.042584
      ...
    1..7
ok 43 - Very Rare Encounter System
  ---
  duration_ms: 16.317375
  ...
# (node:55631) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: banking actions - get loan action availability and execution
ok 44 - banking actions - get loan action availability and execution
  ---
  duration_ms: 6.115084
  ...
# Subtest: banking actions - successful loan execution
ok 45 - banking actions - successful loan execution
  ---
  duration_ms: 9.975333
  ...
# Subtest: banking actions - loan denied for bad credit
ok 46 - banking actions - loan denied for bad credit
  ---
  duration_ms: 3.298875
  ...
# Subtest: banking actions - pay back loan availability and execution
ok 47 - banking actions - pay back loan availability and execution
  ---
  duration_ms: 3.530458
  ...
# Subtest: banking actions - cannot pay back more than debt
ok 48 - banking actions - cannot pay back more than debt
  ---
  duration_ms: 0.322042
  ...
# Subtest: banking actions - insurance purchase and cancellation
ok 49 - banking actions - insurance purchase and cancellation
  ---
  duration_ms: 0.546334
  ...
# Subtest: banking actions - escape pod purchase
ok 50 - banking actions - escape pod purchase
  ---
  duration_ms: 0.432458
  ...
# Subtest: banking actions - escape pod purchase fails with insufficient credits
ok 51 - banking actions - escape pod purchase fails with insufficient credits
  ---
  duration_ms: 1.065917
  ...
# Subtest: banking actions - escape pod not available in low tech systems
ok 52 - banking actions - escape pod not available in low tech systems
  ---
  duration_ms: 0.933875
  ...
# Subtest: banking actions - loan amount limiting
ok 53 - banking actions - loan amount limiting
  ---
  duration_ms: 2.918167
  ...
# Subtest: banking actions - invalid parameters handling
ok 54 - banking actions - invalid parameters handling
  ---
  duration_ms: 1.668917
  ...
# Subtest: banking actions - actions not available when not on planet
ok 55 - banking actions - actions not available when not on planet
  ---
  duration_ms: 0.703959
  ...
# Subtest: banking actions - complete banking lifecycle
ok 56 - banking actions - complete banking lifecycle
  ---
  duration_ms: 0.714458
  ...
# (node:55632) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Game Engine Integration
    # Subtest: Game Engine Creation and Management
        # Subtest: should create game engine with initial state
        ok 1 - should create game engine with initial state
          ---
          duration_ms: 3.545167
          ...
        # Subtest: should create game engine from existing state
        ok 2 - should create game engine from existing state
          ---
          duration_ms: 1.486916
          ...
        # Subtest: should validate game state consistency
        ok 3 - should validate game state consistency
          ---
          duration_ms: 1.1545
          ...
        # Subtest: should detect invalid game state
        ok 4 - should detect invalid game state
          ---
          duration_ms: 1.936125
          ...
        1..4
    ok 1 - Game Engine Creation and Management
      ---
      duration_ms: 8.787875
      type: 'suite'
      ...
    # Subtest: Action System Integration
        # Subtest: should provide available actions based on current game mode
        ok 1 - should provide available actions based on current game mode
          ---
          duration_ms: 1.701708
          ...
        # Subtest: should execute trading actions through unified interface
        ok 2 - should execute trading actions through unified interface
          ---
          duration_ms: 47.295958
          ...
        # Subtest: should execute warp actions through unified interface
        ok 3 - should execute warp actions through unified interface
          ---
          duration_ms: 0.760208
          ...
        # Subtest: should execute combat actions through unified interface
        ok 4 - should execute combat actions through unified interface
          ---
          duration_ms: 0.593583
          ...
        # Subtest: should validate actions before execution
        ok 5 - should validate actions before execution
          ---
          duration_ms: 0.375459
          ...
        # Subtest: should check if action can be executed
        ok 6 - should check if action can be executed
          ---
          duration_ms: 0.345417
          ...
        1..6
    ok 2 - Action System Integration
      ---
      duration_ms: 51.349709
      type: 'suite'
      ...
    # Subtest: Game Loop and Time Management
        # Subtest: should advance time and update systems
        ok 1 - should advance time and update systems
          ---
          duration_ms: 0.170708
          ...
        # Subtest: should check for random encounters during travel
        ok 2 - should check for random encounters during travel
          ---
          duration_ms: 0.212583
          ...
        # Subtest: should update market prices over time
        ok 3 - should update market prices over time
          ---
          duration_ms: 0.140583
          ...
        # Subtest: should handle interest payments on debt
        ok 4 - should handle interest payments on debt
          ---
          duration_ms: 0.114625
          ...
        1..4
    ok 3 - Game Loop and Time Management
      ---
      duration_ms: 0.773542
      type: 'suite'
      ...
    # Subtest: System Integration and Synchronization
        # Subtest: should integrate updates from multiple systems
        ok 1 - should integrate updates from multiple systems
          ---
          duration_ms: 0.150833
          ...
        # Subtest: should synchronize state across systems
        ok 2 - should synchronize state across systems
          ---
          duration_ms: 0.124709
          ...
        # Subtest: should handle system transitions properly
        ok 3 - should handle system transitions properly
          ---
          duration_ms: 5.53225
          ...
        1..3
    ok 4 - System Integration and Synchronization
      ---
      duration_ms: 5.962
      type: 'suite'
      ...
    # Subtest: Persistence and State Management
        # Subtest: should serialize game state to JSON
        ok 1 - should serialize game state to JSON
          ---
          duration_ms: 0.412833
          ...
        # Subtest: should deserialize game state from JSON
        ok 2 - should deserialize game state from JSON
          ---
          duration_ms: 0.333083
          ...
        # Subtest: should handle invalid serialized data gracefully
        ok 3 - should handle invalid serialized data gracefully
          ---
          duration_ms: 0.20725
          ...
        # Subtest: should validate deserialized state
        ok 4 - should validate deserialized state
          ---
          duration_ms: 0.059291
          ...
        1..4
    ok 5 - Persistence and State Management
      ---
      duration_ms: 1.093167
      type: 'suite'
      ...
    # Subtest: Game Status and Information
        # Subtest: should provide current game status
        ok 1 - should provide current game status
          ---
          duration_ms: 0.16775
          ...
        # Subtest: should provide current location information
        ok 2 - should provide current location information
          ---
          duration_ms: 0.119167
          ...
        # Subtest: should provide current ship status
        ok 3 - should provide current ship status
          ---
          duration_ms: 0.1345
          ...
        1..3
    ok 6 - Game Status and Information
      ---
      duration_ms: 0.46525
      type: 'suite'
      ...
    # Subtest: Error Handling and Edge Cases
        # Subtest: should handle concurrent action execution
        ok 1 - should handle concurrent action execution
          ---
          duration_ms: 11.124
          ...
        # Subtest: should handle invalid action parameters
        ok 2 - should handle invalid action parameters
          ---
          duration_ms: 0.304375
          ...
        # Subtest: should handle system corruption gracefully
        ok 3 - should handle system corruption gracefully
          ---
          duration_ms: 0.139041
          ...
        # Subtest: should handle missing system data
        ok 4 - should handle missing system data
          ---
          duration_ms: 0.138583
          ...
        1..4
    ok 7 - Error Handling and Edge Cases
      ---
      duration_ms: 11.772458
      type: 'suite'
      ...
    # Subtest: Performance and Optimization
        # Subtest: should execute actions efficiently
        ok 1 - should execute actions efficiently
          ---
          duration_ms: 3.670958
          ...
        # Subtest: should handle large game states efficiently
        ok 2 - should handle large game states efficiently
          ---
          duration_ms: 0.246583
          ...
        1..2
    ok 8 - Performance and Optimization
      ---
      duration_ms: 3.977541
      type: 'suite'
      ...
    # Subtest: Integration with Existing Systems
        # Subtest: should integrate with economy system
        ok 1 - should integrate with economy system
          ---
          duration_ms: 0.208875
          ...
        # Subtest: should integrate with travel system
        ok 2 - should integrate with travel system
          ---
          duration_ms: 0.144167
          ...
        # Subtest: should integrate with combat system
        ok 3 - should integrate with combat system
          ---
          duration_ms: 0.11825
          ...
        1..3
    ok 9 - Integration with Existing Systems
      ---
      duration_ms: 0.521916
      type: 'suite'
      ...
    1..9
ok 57 - Game Engine Integration
  ---
  duration_ms: 85.461541
  type: 'suite'
  ...
# (node:55633) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Equipment Purchase Validation
    # Subtest: should validate tech level requirements
    ok 1 - should validate tech level requirements
      ---
      duration_ms: 1.657833
      ...
    # Subtest: should enforce credit requirements
    ok 2 - should enforce credit requirements
      ---
      duration_ms: 0.720208
      ...
    # Subtest: should prevent purchase while in debt
    ok 3 - should prevent purchase while in debt
      ---
      duration_ms: 10.575417
      ...
    # Subtest: should validate equipment slot availability
    ok 4 - should validate equipment slot availability
      ---
      duration_ms: 0.729292
      ...
    # Subtest: should handle special items that cannot be purchased
    ok 5 - should handle special items that cannot be purchased
      ---
      duration_ms: 1.883209
      ...
    # Subtest: should prevent duplicate non-stackable gadgets
    ok 6 - should prevent duplicate non-stackable gadgets
      ---
      duration_ms: 0.612125
      ...
    1..6
ok 58 - Equipment Purchase Validation
  ---
  duration_ms: 23.597042
  ...
# Subtest: Equipment Selling Validation
    # Subtest: should calculate sell prices correctly
    ok 1 - should calculate sell prices correctly
      ---
      duration_ms: 0.152
      ...
    # Subtest: should handle equipment removal and array shifting
    ok 2 - should handle equipment removal and array shifting
      ---
      duration_ms: 0.606833
      ...
    # Subtest: should validate cargo space when selling extra bays
    ok 3 - should validate cargo space when selling extra bays
      ---
      duration_ms: 0.24625
      ...
    1..3
ok 59 - Equipment Selling Validation
  ---
  duration_ms: 1.484209
  ...
# Subtest: Equipment Effectiveness Calculations
    # Subtest: should calculate weapon power correctly
    ok 1 - should calculate weapon power correctly
      ---
      duration_ms: 0.209958
      ...
    # Subtest: should calculate shield power correctly
    ok 2 - should calculate shield power correctly
      ---
      duration_ms: 0.150875
      ...
    # Subtest: should apply skill bonuses from gadgets
    ok 3 - should apply skill bonuses from gadgets
      ---
      duration_ms: 0.144917
      ...
    1..3
ok 60 - Equipment Effectiveness Calculations
  ---
  duration_ms: 0.642209
  ...
# Subtest: Fuel System with Equipment
    # Subtest: should calculate fuel capacity with fuel compactor
    ok 1 - should calculate fuel capacity with fuel compactor
      ---
      duration_ms: 0.127167
      ...
    # Subtest: should limit fuel to tank capacity
    ok 2 - should limit fuel to tank capacity
      ---
      duration_ms: 0.112042
      ...
    # Subtest: should handle fuel purchase with credit limits
    ok 3 - should handle fuel purchase with credit limits
      ---
      duration_ms: 0.115292
      ...
    1..3
ok 61 - Fuel System with Equipment
  ---
  duration_ms: 0.446542
  ...
# Subtest: Cargo Bay Calculation with Equipment
    # Subtest: should calculate total cargo bays with extra bay gadgets
    ok 1 - should calculate total cargo bays with extra bay gadgets
      ---
      duration_ms: 2.4555
      ...
    # Subtest: should apply quest penalties to cargo capacity
    ok 2 - should apply quest penalties to cargo capacity
      ---
      duration_ms: 0.397083
      ...
    1..2
ok 62 - Cargo Bay Calculation with Equipment
  ---
  duration_ms: 3.025791
  ...
# (node:55634) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: escape pod - saves player when ship destroyed in combat
ok 63 - escape pod - saves player when ship destroyed in combat
  ---
  duration_ms: 5.418541
  ...
# Subtest: escape pod - player dies without pod when ship destroyed
ok 64 - escape pod - player dies without pod when ship destroyed
  ---
  duration_ms: 1.939375
  ...
# Subtest: escape pod - handles both ships destroyed scenario
ok 65 - escape pod - handles both ships destroyed scenario
  ---
  duration_ms: 0.972083
  ...
# Subtest: escape pod - provides emergency ship after use
ok 66 - escape pod - provides emergency ship after use
  ---
  duration_ms: 1.388
  ...
# Subtest: escape pod - preserves commander in crew
ok 67 - escape pod - preserves commander in crew
  ---
  duration_ms: 5.925708
  ...
# Subtest: escape pod - clears cargo and equipment
ok 68 - escape pod - clears cargo and equipment
  ---
  duration_ms: 0.196708
  ...
# Subtest: escape pod - integration with reactor meltdown
ok 69 - escape pod - integration with reactor meltdown
  ---
  duration_ms: 9.528625
  ...
# Subtest: escape pod - no reactor meltdown survival without pod
ok 70 - escape pod - no reactor meltdown survival without pod
  ---
  duration_ms: 0.238917
  ...
# Subtest: escape pod - cost and availability at shipyard
ok 71 - escape pod - cost and availability at shipyard
  ---
  duration_ms: 0.39175
  ...
# (node:55635) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Artifact Quest
    # Subtest: isArtifactPickupAvailable - available when quest not started and at correct system
    ok 1 - isArtifactPickupAvailable - available when quest not started and at correct system
      ---
      duration_ms: 1.723834
      ...
    # Subtest: isArtifactPickupAvailable - not available when artifact already aboard
    ok 2 - isArtifactPickupAvailable - not available when artifact already aboard
      ---
      duration_ms: 3.9275
      ...
    # Subtest: isArtifactPickupAvailable - not available when not at Nix
    ok 3 - isArtifactPickupAvailable - not available when not at Nix
      ---
      duration_ms: 1.212542
      ...
    # Subtest: pickupArtifact - successfully picks up artifact
    ok 4 - pickupArtifact - successfully picks up artifact
      ---
      duration_ms: 0.8735
      ...
    # Subtest: pickupArtifact - fails when artifact already aboard
    ok 5 - pickupArtifact - fails when artifact already aboard
      ---
      duration_ms: 1.147166
      ...
    # Subtest: isArtifactDeliveryAvailable - available when artifact on board and at correct system
    ok 6 - isArtifactDeliveryAvailable - available when artifact on board and at correct system
      ---
      duration_ms: 0.588084
      ...
    # Subtest: isArtifactDeliveryAvailable - not available when no artifact on board
    ok 7 - isArtifactDeliveryAvailable - not available when no artifact on board
      ---
      duration_ms: 0.556
      ...
    # Subtest: isArtifactDeliveryAvailable - not available when not at delivery system
    ok 8 - isArtifactDeliveryAvailable - not available when not at delivery system
      ---
      duration_ms: 0.575375
      ...
    # Subtest: completeArtifactDelivery - successfully completes delivery with reward
    ok 9 - completeArtifactDelivery - successfully completes delivery with reward
      ---
      duration_ms: 0.69925
      ...
    # Subtest: completeArtifactDelivery - fails when no artifact on board
    ok 10 - completeArtifactDelivery - fails when no artifact on board
      ---
      duration_ms: 0.715
      ...
    # Subtest: checkArtifactStolen - chance of theft when artifact on board
    ok 11 - checkArtifactStolen - chance of theft when artifact on board
      ---
      duration_ms: 0.556458
      ...
    # Subtest: checkArtifactStolen - no theft when random above threshold
    ok 12 - checkArtifactStolen - no theft when random above threshold
      ---
      duration_ms: 0.526666
      ...
    # Subtest: checkArtifactStolen - no theft when no artifact on board
    ok 13 - checkArtifactStolen - no theft when no artifact on board
      ---
      duration_ms: 0.676125
      ...
    # Subtest: stealArtifact - successfully steals artifact when available
    ok 14 - stealArtifact - successfully steals artifact when available
      ---
      duration_ms: 0.238833
      ...
    # Subtest: stealArtifact - fails when no artifact on board
    ok 15 - stealArtifact - fails when no artifact on board
      ---
      duration_ms: 0.187042
      ...
    # Subtest: getArtifactStatus - returns correct status for each quest stage
    ok 16 - getArtifactStatus - returns correct status for each quest stage
      ---
      duration_ms: 0.276917
      ...
    # Subtest: artifact quest - complete workflow from pickup to delivery
    ok 17 - artifact quest - complete workflow from pickup to delivery
      ---
      duration_ms: 0.3055
      ...
    # Subtest: artifact quest - theft interrupts quest
    ok 18 - artifact quest - theft interrupts quest
      ---
      duration_ms: 0.221292
      ...
    1..18
ok 72 - Artifact Quest
  ---
  duration_ms: 16.000625
  type: 'suite'
  ...
# (node:55636) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Ambassador Jarek Quest
    # Subtest: isJarekPickupAvailable - available when quest not started and crew quarters available
    ok 1 - isJarekPickupAvailable - available when quest not started and crew quarters available
      ---
      duration_ms: 1.762708
      ...
    # Subtest: isJarekPickupAvailable - not available when quest already started
    ok 2 - isJarekPickupAvailable - not available when quest already started
      ---
      duration_ms: 1.337792
      ...
    # Subtest: isJarekPickupAvailable - not available when no crew quarters
    ok 3 - isJarekPickupAvailable - not available when no crew quarters
      ---
      duration_ms: 1.967083
      ...
    # Subtest: pickupJarek - successfully picks up Jarek
    ok 4 - pickupJarek - successfully picks up Jarek
      ---
      duration_ms: 0.75375
      ...
    # Subtest: pickupJarek - fails when quest already active
    ok 5 - pickupJarek - fails when quest already active
      ---
      duration_ms: 1.214667
      ...
    # Subtest: pickupJarek - fails when no crew quarters available
    ok 6 - pickupJarek - fails when no crew quarters available
      ---
      duration_ms: 0.571458
      ...
    # Subtest: isJarekDeliveryAvailable - available when Jarek on board and at Devidia
    ok 7 - isJarekDeliveryAvailable - available when Jarek on board and at Devidia
      ---
      duration_ms: 0.567833
      ...
    # Subtest: isJarekDeliveryAvailable - not available when Jarek not on board
    ok 8 - isJarekDeliveryAvailable - not available when Jarek not on board
      ---
      duration_ms: 0.578042
      ...
    # Subtest: isJarekDeliveryAvailable - not available when not at Devidia
    ok 9 - isJarekDeliveryAvailable - not available when not at Devidia
      ---
      duration_ms: 0.648042
      ...
    # Subtest: completeJarekDelivery - successfully completes delivery with reward
    ok 10 - completeJarekDelivery - successfully completes delivery with reward
      ---
      duration_ms: 0.798667
      ...
    # Subtest: completeJarekDelivery - fails when Jarek not on board
    ok 11 - completeJarekDelivery - fails when Jarek not on board
      ---
      duration_ms: 0.212333
      ...
    # Subtest: completeJarekDelivery - fails when not at Devidia
    ok 12 - completeJarekDelivery - fails when not at Devidia
      ---
      duration_ms: 0.147375
      ...
    # Subtest: jarekTakenByPirates - successfully removes Jarek when on board
    ok 13 - jarekTakenByPirates - successfully removes Jarek when on board
      ---
      duration_ms: 0.159291
      ...
    # Subtest: jarekTakenByPirates - fails when Jarek not on board
    ok 14 - jarekTakenByPirates - fails when Jarek not on board
      ---
      duration_ms: 0.113834
      ...
    # Subtest: getAvailableCrewQuarters - calculates available quarters correctly
    ok 15 - getAvailableCrewQuarters - calculates available quarters correctly
      ---
      duration_ms: 0.116292
      ...
    # Subtest: getAvailableCrewQuarters - accounts for Jarek taking quarters
    ok 16 - getAvailableCrewQuarters - accounts for Jarek taking quarters
      ---
      duration_ms: 0.111917
      ...
    # Subtest: getAvailableCrewQuarters - accounts for Wild and Jarek both taking quarters
    ok 17 - getAvailableCrewQuarters - accounts for Wild and Jarek both taking quarters
      ---
      duration_ms: 0.10925
      ...
    # Subtest: getJarekStatus - returns correct status for each quest stage
    ok 18 - getJarekStatus - returns correct status for each quest stage
      ---
      duration_ms: 0.40775
      ...
    # Subtest: jarek quest - complete workflow from pickup to delivery
    ok 19 - jarek quest - complete workflow from pickup to delivery
      ---
      duration_ms: 0.153208
      ...
    # Subtest: jarek quest - pirates interrupt quest
    ok 20 - jarek quest - pirates interrupt quest
      ---
      duration_ms: 0.118416
      ...
    # Subtest: crew quarters - prevent pickup when ship full
    ok 21 - crew quarters - prevent pickup when ship full
      ---
      duration_ms: 0.108042
      ...
    1..21
ok 73 - Ambassador Jarek Quest
  ---
  duration_ms: 13.71
  type: 'suite'
  ...
# (node:55637) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Reactor Quest
    # Subtest: should start reactor quest with sufficient cargo space
    ok 1 - should start reactor quest with sufficient cargo space
      ---
      duration_ms: 1.743625
      ...
    # Subtest: should fail to start quest without enough cargo bays
    ok 2 - should fail to start quest without enough cargo bays
      ---
      duration_ms: 97.617875
      ...
    # Subtest: should fail to start quest with Wild aboard
    ok 3 - should fail to start quest with Wild aboard
      ---
      duration_ms: 15.153875
      ...
    # Subtest: should advance reactor status each day
    ok 4 - should advance reactor status each day
      ---
      duration_ms: 19.940458
      ...
    # Subtest: should trigger meltdown at day 20 without escape pod
    ok 5 - should trigger meltdown at day 20 without escape pod
      ---
      duration_ms: 0.248542
      ...
    # Subtest: should escape with pod during meltdown
    ok 6 - should escape with pod during meltdown
      ---
      duration_ms: 0.18675
      ...
    # Subtest: should calculate cargo bay reduction correctly
    ok 7 - should calculate cargo bay reduction correctly
      ---
      duration_ms: 0.211333
      ...
    # Subtest: should provide warnings at correct days
    ok 8 - should provide warnings at correct days
      ---
      duration_ms: 0.29275
      ...
    # Subtest: should complete reactor delivery at Utopia
    ok 9 - should complete reactor delivery at Utopia
      ---
      duration_ms: 0.268083
      ...
    # Subtest: should check quest availability at Nix
    ok 10 - should check quest availability at Nix
      ---
      duration_ms: 0.35775
      ...
    # Subtest: should check delivery availability at Utopia
    ok 11 - should check delivery availability at Utopia
      ---
      duration_ms: 0.139
      ...
    1..11
ok 74 - Reactor Quest
  ---
  duration_ms: 137.045
  type: 'suite'
  ...
# (node:55638) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: wild quest - initial state and availability check
ok 75 - wild quest - initial state and availability check
  ---
  duration_ms: 2.010375
  ...
# Subtest: wild quest - pickup requires beam laser weapon
ok 76 - wild quest - pickup requires beam laser weapon
  ---
  duration_ms: 4.123417
  ...
# Subtest: wild quest - pickup requires good police record
ok 77 - wild quest - pickup requires good police record
  ---
  duration_ms: 0.736708
  ...
# Subtest: wild quest - pickup requires crew quarters
ok 78 - wild quest - pickup requires crew quarters
  ---
  duration_ms: 0.684042
  ...
# Subtest: wild quest - pickup fails with unstable reactor aboard
ok 79 - wild quest - pickup fails with unstable reactor aboard
  ---
  duration_ms: 10.005084
  ...
# Subtest: wild quest - successful pickup
ok 80 - wild quest - successful pickup
  ---
  duration_ms: 13.840125
  ...
# Subtest: wild quest - delivery at wrong system fails
ok 81 - wild quest - delivery at wrong system fails
  ---
  duration_ms: 0.865167
  ...
# Subtest: wild quest - successful delivery at Kravat
ok 82 - wild quest - successful delivery at Kravat
  ---
  duration_ms: 0.168792
  ...
# Subtest: wild quest - arrest when ship surrenders
ok 83 - wild quest - arrest when ship surrenders
  ---
  duration_ms: 0.374042
  ...
# Subtest: wild quest - leaves ship when weapons removed
ok 84 - wild quest - leaves ship when weapons removed
  ---
  duration_ms: 0.358667
  ...
# Subtest: wild quest - weapon requirements
ok 85 - wild quest - weapon requirements
  ---
  duration_ms: 0.185084
  ...
# Subtest: wild quest - crew quarters calculation
ok 86 - wild quest - crew quarters calculation
  ---
  duration_ms: 0.133542
  ...
# Subtest: wild quest - delivery availability check
ok 87 - wild quest - delivery availability check
  ---
  duration_ms: 0.122542
  ...
# Subtest: wild quest - complete quest lifecycle
ok 88 - wild quest - complete quest lifecycle
  ---
  duration_ms: 0.127584
  ...
# Subtest: wild quest - edge cases
ok 89 - wild quest - edge cases
  ---
  duration_ms: 0.10825
  ...
# Subtest: wild quest - interaction with reactor quest
ok 90 - wild quest - interaction with reactor quest
  ---
  duration_ms: 0.116166
  ...
# (node:55639) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Special Events System
    # Subtest: Special Event Constants and Definitions
        # Subtest: should have correct special event type constants matching Palm OS
        ok 1 - should have correct special event type constants matching Palm OS
          ---
          duration_ms: 0.396166
          ...
        # Subtest: should provide special event definitions with correct properties
        ok 2 - should provide special event definitions with correct properties
          ---
          duration_ms: 0.092916
          ...
        # Subtest: should validate event definition structure
        ok 3 - should validate event definition structure
          ---
          duration_ms: 0.134083
          ...
        1..3
    ok 1 - Special Event Constants and Definitions
      ---
      duration_ms: 0.944584
      type: 'suite'
      ...
    # Subtest: Event Management
        # Subtest: should create special event for system
        ok 1 - should create special event for system
          ---
          duration_ms: 10.763
          ...
        # Subtest: should check if system has special event
        ok 2 - should check if system has special event
          ---
          duration_ms: 0.721625
          ...
        # Subtest: should get system special event
        ok 3 - should get system special event
          ---
          duration_ms: 16.921125
          ...
        # Subtest: should set system special event
        ok 4 - should set system special event
          ---
          duration_ms: 0.674083
          ...
        # Subtest: should remove special event from system
        ok 5 - should remove special event from system
          ---
          duration_ms: 0.766166
          ...
        1..5
    ok 2 - Event Management
      ---
      duration_ms: 30.105459
      type: 'suite'
      ...
    # Subtest: Event Execution
        # Subtest: should check if event can be executed
        ok 1 - should check if event can be executed
          ---
          duration_ms: 0.684625
          ...
        # Subtest: should prevent execution when insufficient credits
        ok 2 - should prevent execution when insufficient credits
          ---
          duration_ms: 0.629625
          ...
        # Subtest: should execute skill increase event
        ok 3 - should execute skill increase event
          ---
          duration_ms: 0.523458
          ...
        # Subtest: should execute tribble event
        ok 4 - should execute tribble event
          ---
          duration_ms: 0.191166
          ...
        # Subtest: should execute erase record event
        ok 5 - should execute erase record event
          ---
          duration_ms: 0.144416
          ...
        # Subtest: should execute moon purchase event
        ok 6 - should execute moon purchase event
          ---
          duration_ms: 0.1225
          ...
        # Subtest: should get correct event cost
        ok 7 - should get correct event cost
          ---
          duration_ms: 0.048167
          ...
        1..7
    ok 3 - Event Execution
      ---
      duration_ms: 2.447833
      type: 'suite'
      ...
    # Subtest: Quest System Integration
        # Subtest: should track quest completion status
        ok 1 - should track quest completion status
          ---
          duration_ms: 0.150292
          ...
        # Subtest: should get active quests
        ok 2 - should get active quests
          ---
          duration_ms: 0.144542
          ...
        # Subtest: should handle quest dependencies
        ok 3 - should handle quest dependencies
          ---
          duration_ms: 0.117375
          ...
        1..3
    ok 4 - Quest System Integration
      ---
      duration_ms: 0.45275
      type: 'suite'
      ...
    # Subtest: News System Integration
        # Subtest: should add news event
        ok 1 - should add news event
          ---
          duration_ms: 0.160542
          ...
        # Subtest: should get news events
        ok 2 - should get news events
          ---
          duration_ms: 1.561041
          ...
        # Subtest: should limit number of news events
        ok 3 - should limit number of news events
          ---
          duration_ms: 0.437833
          ...
        1..3
    ok 5 - News System Integration
      ---
      duration_ms: 2.267541
      type: 'suite'
      ...
    # Subtest: Random Events System
        # Subtest: should generate random event with proper probability
        ok 1 - should generate random event with proper probability
          ---
          duration_ms: 0.3315
          ...
        # Subtest: should check random event occurrence
        ok 2 - should check random event occurrence
          ---
          duration_ms: 0.132709
          ...
        # Subtest: should respect event occurrence rates
        ok 3 - should respect event occurrence rates
          ---
          duration_ms: 0.130334
          ...
        1..3
    ok 6 - Random Events System
      ---
      duration_ms: 0.666
      type: 'suite'
      ...
    # Subtest: Event System Updates
        # Subtest: should update event statuses based on game state
        ok 1 - should update event statuses based on game state
          ---
          duration_ms: 0.684584
          ...
        # Subtest: should check event availability based on conditions
        ok 2 - should check event availability based on conditions
          ---
          duration_ms: 0.668167
          ...
        1..2
    ok 7 - Event System Updates
      ---
      duration_ms: 1.389416
      type: 'suite'
      ...
    # Subtest: Utility Functions
        # Subtest: should get event name
        ok 1 - should get event name
          ---
          duration_ms: 0.0605
          ...
        # Subtest: should get event description
        ok 2 - should get event description
          ---
          duration_ms: 0.038792
          ...
        # Subtest: should handle invalid event IDs
        ok 3 - should handle invalid event IDs
          ---
          duration_ms: 0.03375
          ...
        1..3
    ok 8 - Utility Functions
      ---
      duration_ms: 0.190917
      type: 'suite'
      ...
    # Subtest: Integration with Game State
        # Subtest: should integrate with tribble breeding system
        ok 1 - should integrate with tribble breeding system
          ---
          duration_ms: 0.673875
          ...
        # Subtest: should integrate with reputation system
        ok 2 - should integrate with reputation system
          ---
          duration_ms: 0.600291
          ...
        # Subtest: should integrate with ship equipment requirements
        ok 3 - should integrate with ship equipment requirements
          ---
          duration_ms: 0.53825
          ...
        1..3
    ok 9 - Integration with Game State
      ---
      duration_ms: 1.867625
      type: 'suite'
      ...
    # Subtest: Edge Cases and Error Handling
        # Subtest: should handle system index out of bounds
        ok 1 - should handle system index out of bounds
          ---
          duration_ms: 1.145834
          ...
        # Subtest: should handle execution of non-existent events
        ok 2 - should handle execution of non-existent events
          ---
          duration_ms: 0.530083
          ...
        # Subtest: should prevent duplicate event execution
        ok 3 - should prevent duplicate event execution
          ---
          duration_ms: 0.533791
          ...
        # Subtest: should validate game state during event execution
        ok 4 - should validate game state during event execution
          ---
          duration_ms: 0.510333
          ...
        1..4
    ok 10 - Edge Cases and Error Handling
      ---
      duration_ms: 2.865542
      type: 'suite'
      ...
    1..10
ok 91 - Special Events System
  ---
  duration_ms: 44.806084
  type: 'suite'
  ...
# (node:55640) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Fuel Capacity Calculation
    # Subtest: should return base fuel tanks from ship type
    ok 1 - should return base fuel tanks from ship type
      ---
      duration_ms: 1.600292
      ...
    # Subtest: should return increased fuel tanks with fuel compactor
    ok 2 - should return increased fuel tanks with fuel compactor
      ---
      duration_ms: 0.688458
      ...
    # Subtest: should handle multiple fuel compactors (no stacking)
    ok 3 - should handle multiple fuel compactors (no stacking)
      ---
      duration_ms: 6.897958
      ...
    1..3
ok 92 - Fuel Capacity Calculation
  ---
  duration_ms: 9.98175
  ...
# Subtest: Current Fuel Calculation
    # Subtest: should return current fuel limited by tank capacity
    ok 1 - should return current fuel limited by tank capacity
      ---
      duration_ms: 9.091542
      ...
    # Subtest: should return actual fuel when less than capacity
    ok 2 - should return actual fuel when less than capacity
      ---
      duration_ms: 0.199166
      ...
    # Subtest: should handle zero fuel
    ok 3 - should handle zero fuel
      ---
      duration_ms: 0.148208
      ...
    # Subtest: should work with fuel compactor capacity
    ok 4 - should work with fuel compactor capacity
      ---
      duration_ms: 0.223208
      ...
    1..4
ok 93 - Current Fuel Calculation
  ---
  duration_ms: 18.469417
  ...
# Subtest: Fuel Purchase Mechanics
    # Subtest: should calculate fuel purchase cost correctly
    ok 1 - should calculate fuel purchase cost correctly
      ---
      duration_ms: 0.308667
      ...
    # Subtest: should limit fuel purchase to tank capacity
    ok 2 - should limit fuel purchase to tank capacity
      ---
      duration_ms: 0.177875
      ...
    # Subtest: should limit fuel purchase to available credits
    ok 3 - should limit fuel purchase to available credits
      ---
      duration_ms: 0.14
      ...
    # Subtest: should handle different ship fuel costs
    ok 4 - should handle different ship fuel costs
      ---
      duration_ms: 0.456458
      ...
    # Subtest: should work with fuel compactor
    ok 5 - should work with fuel compactor
      ---
      duration_ms: 0.274125
      ...
    # Subtest: should handle exact credit amounts
    ok 6 - should handle exact credit amounts
      ---
      duration_ms: 0.161083
      ...
    # Subtest: should handle zero credit purchase attempts
    ok 7 - should handle zero credit purchase attempts
      ---
      duration_ms: 0.122042
      ...
    # Subtest: should handle already full tank
    ok 8 - should handle already full tank
      ---
      duration_ms: 0.1125
      ...
    1..8
ok 94 - Fuel Purchase Mechanics
  ---
  duration_ms: 16.189
  ...
# Subtest: Fuel Cost Variations by Ship Type
    # Subtest: should have correct fuel costs for each ship type
    ok 1 - should have correct fuel costs for each ship type
      ---
      duration_ms: 0.113875
      ...
    # Subtest: should calculate different total costs for full tank
    ok 2 - should calculate different total costs for full tank
      ---
      duration_ms: 0.152
      ...
    1..2
ok 95 - Fuel Cost Variations by Ship Type
  ---
  duration_ms: 0.354542
  ...
# Subtest: Fuel System Edge Cases
    # Subtest: should handle fractional credit amounts
    ok 1 - should handle fractional credit amounts
      ---
      duration_ms: 0.114583
      ...
    # Subtest: should handle maximum fuel scenario
    ok 2 - should handle maximum fuel scenario
      ---
      duration_ms: 0.105042
      ...
    # Subtest: should maintain fuel invariants
    ok 3 - should maintain fuel invariants
      ---
      duration_ms: 0.112875
      ...
    1..3
ok 96 - Fuel System Edge Cases
  ---
  duration_ms: 0.419166
  ...
# (node:55641) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: calculateFinalScore - factors in worth, days, end status, and difficulty
ok 97 - calculateFinalScore - factors in worth, days, end status, and difficulty
  ---
  duration_ms: 0.769916
  ...
# Subtest: calculateFinalScore - end status affects score
ok 98 - calculateFinalScore - end status affects score
  ---
  duration_ms: 0.059417
  ...
# Subtest: calculateFinalScore - difficulty affects score multiplier
ok 99 - calculateFinalScore - difficulty affects score multiplier
  ---
  duration_ms: 0.049791
  ...
# Subtest: calculateFinalScore - fewer days increases score
ok 100 - calculateFinalScore - fewer days increases score
  ---
  duration_ms: 0.043875
  ...
# Subtest: isHighScoreQualified - empty high score table accepts any score
ok 101 - isHighScoreQualified - empty high score table accepts any score
  ---
  duration_ms: 5.0035
  ...
# Subtest: isHighScoreQualified - score comparison with existing entries
ok 102 - isHighScoreQualified - score comparison with existing entries
  ---
  duration_ms: 0.102708
  ...
# Subtest: processGameEnd - calculates complete end game statistics
ok 103 - processGameEnd - calculates complete end game statistics
  ---
  duration_ms: 1.31225
  ...
# Subtest: high score system - moon purchase ending
ok 104 - high score system - moon purchase ending
  ---
  duration_ms: 9.213334
  ...
# Subtest: high score system - retirement ending
ok 105 - high score system - retirement ending
  ---
  duration_ms: 0.937042
  ...
# Subtest: high score system - score calculation edge cases
ok 106 - high score system - score calculation edge cases
  ---
  duration_ms: 14.162958
  ...
# Subtest: high score system - difficulty progression affects scoring
ok 107 - high score system - difficulty progression affects scoring
  ---
  duration_ms: 0.15225
  ...
# (node:55642) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: player options - default values match requirements
ok 108 - player options - default values match requirements
  ---
  duration_ms: 1.817417
  ...
# Subtest: player options - can modify all option values
ok 109 - player options - can modify all option values
  ---
  duration_ms: 4.696917
  ...
# Subtest: player options - leaveEmpty affects cargo space calculation
ok 110 - player options - leaveEmpty affects cargo space calculation
  ---
  duration_ms: 2.545709
  ...
# Subtest: player options - reserveMoney affects available funds
ok 111 - player options - reserveMoney affects available funds
  ---
  duration_ms: 1.399916
  ...
# Subtest: player options - complete options structure matches Palm OS
ok 112 - player options - complete options structure matches Palm OS
  ---
  duration_ms: 1.916042
  ...
# Subtest: player options - options isolated from other state
ok 113 - player options - options isolated from other state
  ---
  duration_ms: 0.562042
  ...
# Subtest: player options - default Palm OS compatibility
ok 114 - player options - default Palm OS compatibility
  ---
  duration_ms: 0.587834
  ...
# Subtest: player options - state cloning preserves options
ok 115 - player options - state cloning preserves options
  ---
  duration_ms: 0.561458
  ...
# (node:55643) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: time progression - days increment during travel
ok 116 - time progression - days increment during travel
  ---
  duration_ms: 1.951292
  ...
# Subtest: time progression - day counter starts at zero
ok 117 - time progression - day counter starts at zero
  ---
  duration_ms: 2.32375
  ...
# Subtest: time progression - reactor countdown progresses daily
ok 118 - time progression - reactor countdown progresses daily
  ---
  duration_ms: 14.737583
  ...
# Subtest: time progression - tribble breeding occurs over time
ok 119 - time progression - tribble breeding occurs over time
  ---
  duration_ms: 5.226708
  ...
# Subtest: time progression - daily costs accumulate
ok 120 - time progression - daily costs accumulate
  ---
  duration_ms: 0.849541
  ...
# Subtest: time progression - interest accumulates on debt daily
ok 121 - time progression - interest accumulates on debt daily
  ---
  duration_ms: 0.368667
  ...
# Subtest: time progression - quest countdowns advance
ok 122 - time progression - quest countdowns advance
  ---
  duration_ms: 0.237084
  ...
# Subtest: time progression - special event countdowns
ok 123 - time progression - special event countdowns
  ---
  duration_ms: 0.14525
  ...
# Subtest: time progression - aging effects on equipment
ok 124 - time progression - aging effects on equipment
  ---
  duration_ms: 0.365625
  ...
# Subtest: time progression - police record decay over time
ok 125 - time progression - police record decay over time
  ---
  duration_ms: 0.354375
  ...
# Subtest: time progression - reputation persistence
ok 126 - time progression - reputation persistence
  ---
  duration_ms: 0.173667
  ...
# (node:55644) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: insurance - daily premium calculation during travel
ok 127 - insurance - daily premium calculation during travel
  ---
  duration_ms: 1.956292
  ...
# Subtest: insurance - no cost when not active
ok 128 - insurance - no cost when not active
  ---
  duration_ms: 0.960625
  ...
# Subtest: insurance claim - full ship value when destroyed
ok 129 - insurance claim - full ship value when destroyed
  ---
  duration_ms: 0.778208
  ...
# Subtest: insurance claim - no payout without insurance
ok 130 - insurance claim - no payout without insurance
  ---
  duration_ms: 77.704292
  ...
# Subtest: insurance claim - covers partial cargo value
ok 131 - insurance claim - covers partial cargo value
  ---
  duration_ms: 0.679041
  ...
# Subtest: insurance claim - tribbles penalty ignored for insurance
ok 132 - insurance claim - tribbles penalty ignored for insurance
  ---
  duration_ms: 6.13775
  ...
# Subtest: insurance - state integration after claim
ok 133 - insurance - state integration after claim
  ---
  duration_ms: 0.196083
  ...
# Subtest: insurance affordability check during travel
ok 134 - insurance affordability check during travel
  ---
  duration_ms: 0.153
  ...
# (node:55645) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# ✅ Basic integration bot: Game engine initializes correctly
# Action refuel_ship: FAILED - Action 'refuel_ship' is not available in current game mode
# Action track_system: SUCCESS - Now tracking Adahn
# Subtest: Integration Bots System
    # Subtest: Basic Integration Bot Functionality
        # Subtest: should test basic game systems integration
        ok 1 - should test basic game systems integration
          ---
          duration_ms: 1.661958
          ...
# Action read_news: SUCCESS - 
# === Acamar Daily News ===
# Cost: 2 credits
# No major news today.
# • Local weather continues to be pleasant
# Press Enter to continue...
# ✅ Basic integration bot: Action system works correctly
# ✅ Basic integration bot: Found 10/10 active markets
# ✅ Advanced integration bot: Found 0 profitable items
# ✅ Advanced integration bot: Travel result - Out of fuel range
# Available weapons: 3
# Available shields: 2
# Available gadgets: 5
# ✅ Advanced integration bot: Weapon purchase - Action 'buy_weapon' is not available in current game mode
# Actions available in invalid mode: 0
# ✅ Integration bot recovery: Handled 2 failed actions gracefully
        # Subtest: should test action system integration
        ok 2 - should test action system integration
          ---
          duration_ms: 14.2065
          ...
        # Subtest: should test market system integration
        ok 3 - should test market system integration
          ---
          duration_ms: 0.977875
          ...
        1..3
    ok 1 - Basic Integration Bot Functionality
      ---
      duration_ms: 17.339959
      ...
    # Subtest: Advanced Integration Bot Simulation
        # Subtest: should simulate intelligent trading behavior
        ok 1 - should simulate intelligent trading behavior
          ---
          duration_ms: 0.780583
          ...
        # Subtest: should simulate travel and encounter handling
        ok 2 - should simulate travel and encounter handling
          ---
          duration_ms: 1.017292
          ...
        # Subtest: should simulate equipment and upgrade decisions
        ok 3 - should simulate equipment and upgrade decisions
          ---
          duration_ms: 6.684042
          ...
        1..3
    ok 2 - Advanced Integration Bot Simulation
      ---
      duration_ms: 57.232791
      ...
    # Subtest: Integration Bot Error Recovery
        # Subtest: should handle unexpected game state changes
        ok 1 - should handle unexpected game state changes
          ---
          duration_ms: 0.330459
          ...
        # Subtest: should recover from failed actions gracefully
        ok 2 - should recover from failed actions gracefully
          ---
          duration_ms: 0.65175
          ...
        1..2
    ok 3 - Integration Bot Error Recovery
      ---
      duration_ms: 1.309375
      ...
# ✅ Long-running integration: 125/130 actions successful
# Encounters handled: 16
# Final credits: 16680
    # Subtest: Long-Running Integration Simulation
        # Subtest: should handle extended gameplay session
        ok 1 - should handle extended gameplay session
          ---
          duration_ms: 127.1335
          ...
        1..1
    ok 4 - Long-Running Integration Simulation
      ---
      duration_ms: 127.405083
      ...
    1..4
ok 135 - Integration Bots System
  ---
  duration_ms: 203.977625
  ...
# (node:55646) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Police inspection actions: combat_attack, combat_flee, combat_submit, combat_bribe
# ✅ combat_attack: SUCCESS
# ✅ combat_flee: SUCCESS
# ✅ combat_submit: SUCCESS
# ✅ combat_bribe: SUCCESS
# Pirate attack actions: combat_attack, combat_flee, combat_surrender
# ✅ combat_attack: SUCCESS
# ✅ combat_flee: SUCCESS
# ✅ combat_surrender: SUCCESS
# Encounter 24 actions: combat_attack, combat_ignore, combat_trade
# Encounter 25 actions: combat_attack, combat_ignore, combat_trade
# Encounter 22 actions: combat_attack, combat_flee
# Encounter 23 actions: combat_attack, combat_ignore
# Marie Celeste actions: combat_board, combat_ignore
# Bottle Old actions: combat_drink, combat_ignore
# Bottle Good actions: combat_drink, combat_ignore
# Captain Ahab actions: combat_attack, combat_flee, combat_ignore
# ✅ InSpace → InCombat transition successful (attempt 25)
# Encounter triggered: true (25 attempts)
# ✅ InSpace → OnPlanet transition successful
# 🎯 Attempting warp from system 0 to system 22 with 20 fuel
# 🔍 Warp result: success=true, message="Traveling to Devidia... (fuel used: 14) - Combat encounter at 20 clicks to Devidia!"
# 📊 After warp: mode=2, system=0, fuel=6
# ✅ OnPlanet → InSpace/InCombat transition successful
# OnPlanet: 11 actions (buy_cargo, buy_equipment, sell_equipment, buy_ship, read_news, warp_to_system, track_system, system_scanner, get_loan, buy_insurance, buy_escape_pod)
# InSpace: 2 actions (warp_to_system, dock_at_planet)
# Encounter 0: combat_attack, combat_flee, combat_submit, combat_bribe
# Encounter 2: combat_attack, combat_flee, combat_surrender
# Encounter 10: combat_attack, combat_flee, combat_surrender
# Encounter 13: combat_attack, combat_plunder
# Encounter 24: combat_attack, combat_ignore, combat_trade
# Encounter 25: combat_attack, combat_ignore, combat_trade
# Encounter 80: combat_board, combat_ignore
# Encounter 81: combat_drink, combat_ignore
# Encounter 72: combat_attack, combat_flee, combat_ignore
# ✅ combat_attack: SUCCESS - You deal 17 damage. Enemy deals 15 damage.
# ✅ combat_flee: SUCCESS - You successfully escape! 
# ✅ combat_surrender: SUCCESS - You surrender. The encounter ends. 
# ✅ combat_submit: HANDLED - Action 'combat_submit' is not available in current game mode
# ✅ combat_bribe: HANDLED - Action 'combat_bribe' is not available in current game mode
# ✅ combat_ignore: HANDLED - Action 'combat_ignore' is not available in current game mode
# ✅ combat_trade: HANDLED - Action 'combat_trade' is not available in current game mode
# ✅ combat_board: HANDLED - Action 'combat_board' is not available in current game mode
# ✅ combat_meet: HANDLED - Action 'combat_meet' is not available in current game mode
# ✅ combat_drink: HANDLED - Action 'combat_drink' is not available in current game mode
# ✅ combat_yield: HANDLED - Action 'combat_yield' is not available in current game mode
# ✅ combat_plunder: HANDLED - Action 'combat_plunder' is not available in current game mode
# ✅ buy_cargo: State remains valid after execution
# ✅ buy_equipment: State remains valid after execution
# ✅ sell_equipment: State remains valid after execution
# ✅ buy_ship: State remains valid after execution
# Subtest: State Transition Testing
    # Subtest: Combat Action Coverage
        # Subtest: should handle all combat actions for police inspection
        ok 1 - should handle all combat actions for police inspection
          ---
          duration_ms: 38.046959
          ...
        # Subtest: should handle all combat actions for pirate attack
        ok 2 - should handle all combat actions for pirate attack
          ---
          duration_ms: 0.885167
          ...
        # Subtest: should handle all combat actions for trader encounters
        ok 3 - should handle all combat actions for trader encounters
          ---
          duration_ms: 3.378
          ...
        # Subtest: should handle special encounter actions
        ok 4 - should handle special encounter actions
          ---
          duration_ms: 1.268291
          ...
        1..4
    ok 1 - Combat Action Coverage
      ---
      duration_ms: 43.919541
      type: 'suite'
      ...
    # Subtest: Game Mode Transitions
        # Subtest: should transition from InSpace to InCombat during encounters
        ok 1 - should transition from InSpace to InCombat during encounters
          ---
          duration_ms: 6.424083
          ...
        # Subtest: should transition from InCombat to InSpace after combat resolution
        ok 2 - should transition from InCombat to InSpace after combat resolution
          ---
          duration_ms: 0.277833
          ...
        # Subtest: should transition from InSpace to OnPlanet when docking
        ok 3 - should transition from InSpace to OnPlanet when docking
          ---
          duration_ms: 0.209583
          ...
        # Subtest: should transition from OnPlanet to InSpace when warping
        ok 4 - should transition from OnPlanet to InSpace when warping
          ---
          duration_ms: 2.483
          ...
        1..4
    ok 2 - Game Mode Transitions
      ---
      duration_ms: 9.691125
      type: 'suite'
      ...
    # Subtest: Action Availability by Mode
        # Subtest: should provide correct actions for each game mode
        ok 1 - should provide correct actions for each game mode
          ---
          duration_ms: 0.547
          ...
        # Subtest: should provide combat actions for different encounter types
        ok 2 - should provide combat actions for different encounter types
          ---
          duration_ms: 1.594583
          ...
        1..2
    ok 3 - Action Availability by Mode
      ---
      duration_ms: 2.231209
      type: 'suite'
      ...
    # Subtest: All Possible Combat Actions
        # Subtest: should execute all combat actions without errors
        ok 1 - should execute all combat actions without errors
          ---
          duration_ms: 1.1795
          ...
        1..1
    ok 4 - All Possible Combat Actions
      ---
      duration_ms: 1.225709
      type: 'suite'
      ...
# ✅ read_news: State remains valid after execution
# ✅ warp_to_system: State remains valid after execution
# ✅ track_system: State remains valid after execution
# ✅ system_scanner: State remains valid after execution
# ✅ get_loan: State remains valid after execution
# ✅ buy_insurance: State remains valid after execution
# ✅ buy_escape_pod: State remains valid after execution
# ✅ Player destruction handled: Game Over = true
# ✅ Both ships destroyed handled: Game Over = true
    # Subtest: State Consistency After Actions
        # Subtest: should maintain valid state after all planet actions
        ok 1 - should maintain valid state after all planet actions
          ---
          duration_ms: 13.586167
          ...
        1..1
    ok 5 - State Consistency After Actions
      ---
      duration_ms: 13.679708
      type: 'suite'
      ...
    # Subtest: Edge Case State Transitions
        # Subtest: should handle destroyed player ship scenarios
        ok 1 - should handle destroyed player ship scenarios
          ---
          duration_ms: 0.233917
          ...
        # Subtest: should handle both ships destroyed scenario
        ok 2 - should handle both ships destroyed scenario
          ---
          duration_ms: 0.148917
          ...
        1..2
    ok 6 - Edge Case State Transitions
      ---
      duration_ms: 0.428083
      type: 'suite'
      ...
    1..6
ok 136 - State Transition Testing
  ---
  duration_ms: 71.763459
  type: 'suite'
  ...
# (node:55647) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Core Math Functions
    # Subtest: Integer Square Root
        # Subtest: should handle perfect squares correctly
        ok 1 - should handle perfect squares correctly
          ---
          duration_ms: 0.581
          ...
        # Subtest: should approximate non-perfect squares correctly
        ok 2 - should approximate non-perfect squares correctly
          ---
          duration_ms: 0.150792
          ...
        # Subtest: should handle edge cases
        ok 3 - should handle edge cases
          ---
          duration_ms: 0.050458
          ...
        # Subtest: should handle large numbers
        ok 4 - should handle large numbers
          ---
          duration_ms: 0.049292
          ...
        # Subtest: should match Palm OS approximation logic
        ok 5 - should match Palm OS approximation logic
          ---
          duration_ms: 0.039916
          ...
        1..5
    ok 1 - Integer Square Root
      ---
      duration_ms: 1.346167
      type: 'suite'
      ...
    # Subtest: Squared Distance
        # Subtest: should calculate squared distance correctly
        ok 1 - should calculate squared distance correctly
          ---
          duration_ms: 0.158583
          ...
        # Subtest: should handle negative coordinates
        ok 2 - should handle negative coordinates
          ---
          duration_ms: 0.044292
          ...
        1..2
    ok 2 - Squared Distance
      ---
      duration_ms: 0.402333
      type: 'suite'
      ...
    # Subtest: Real Distance (Integer)
        # Subtest: should calculate real distance using integer sqrt
        ok 1 - should calculate real distance using integer sqrt
          ---
          duration_ms: 0.315584
          ...
        # Subtest: should match 3-4-5 triangle
        ok 2 - should match 3-4-5 triangle
          ---
          duration_ms: 0.231167
          ...
        # Subtest: should handle approximations for non-perfect squares
        ok 3 - should handle approximations for non-perfect squares
          ---
          duration_ms: 0.465584
          ...
        1..3
    ok 3 - Real Distance (Integer)
      ---
      duration_ms: 1.895084
      type: 'suite'
      ...
    # Subtest: Utility Functions
        # Subtest: clamp should constrain values within bounds
        ok 1 - clamp should constrain values within bounds
          ---
          duration_ms: 0.168875
          ...
        # Subtest: square should calculate squared values correctly
        ok 2 - square should calculate squared values correctly
          ---
          duration_ms: 0.082875
          ...
        1..2
    ok 4 - Utility Functions
      ---
      duration_ms: 0.420667
      type: 'suite'
      ...
    # Subtest: Consistency with JavaScript Math
        # Subtest: should produce same results as JavaScript Math.sqrt for perfect squares
        ok 1 - should produce same results as JavaScript Math.sqrt for perfect squares
          ---
          duration_ms: 0.154208
          ...
        # Subtest: integer sqrt should be close to JavaScript sqrt
        ok 2 - integer sqrt should be close to JavaScript sqrt
          ---
          duration_ms: 0.253666
          ...
        1..2
    ok 5 - Consistency with JavaScript Math
      ---
      duration_ms: 0.525584
      type: 'suite'
      ...
    1..5
ok 137 - Core Math Functions
  ---
  duration_ms: 5.076709
  type: 'suite'
  ...
# (node:55648) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Distance Calculations
    # Subtest: Integer Square Root vs JavaScript Math.sqrt
        # Subtest: should produce identical results for perfect squares
        ok 1 - should produce identical results for perfect squares
          ---
          duration_ms: 0.490167
          ...
        # Subtest: should closely approximate JavaScript results for non-perfect squares
        ok 2 - should closely approximate JavaScript results for non-perfect squares
          ---
          duration_ms: 0.146791
          ...
        1..2
    ok 1 - Integer Square Root vs JavaScript Math.sqrt
      ---
      duration_ms: 1.00775
      type: 'suite'
      ...
    # Subtest: Distance Calculation Comparison
        # Subtest: should compare Palm OS integer distance vs modern float distance
        ok 1 - should compare Palm OS integer distance vs modern float distance
          ---
          duration_ms: 0.184083
          ...
        # Subtest: should handle maximum galaxy coordinates
        ok 2 - should handle maximum galaxy coordinates
          ---
          duration_ms: 0.055083
          ...
        1..2
    ok 2 - Distance Calculation Comparison
      ---
      duration_ms: 0.302916
      type: 'suite'
      ...
    # Subtest: Game Mechanics Impact
        # Subtest: should ensure consistent fuel calculations with different distance methods
        ok 1 - should ensure consistent fuel calculations with different distance methods
          ---
          duration_ms: 0.168333
          ...
        # Subtest: should handle zero distance correctly
        ok 2 - should handle zero distance correctly
          ---
          duration_ms: 0.050833
          ...
        # Subtest: should maintain symmetry in distance calculations
        ok 3 - should maintain symmetry in distance calculations
          ---
          duration_ms: 0.224375
          ...
        1..3
    ok 3 - Game Mechanics Impact
      ---
      duration_ms: 0.572
      type: 'suite'
      ...
    # Subtest: Edge Cases and Boundary Conditions
        # Subtest: should handle very small distances correctly
        ok 1 - should handle very small distances correctly
          ---
          duration_ms: 0.064209
          ...
        # Subtest: should ensure no negative distances
        ok 2 - should ensure no negative distances
          ---
          duration_ms: 0.119459
          ...
        1..2
    ok 4 - Edge Cases and Boundary Conditions
      ---
      duration_ms: 0.295958
      type: 'suite'
      ...
    1..4
ok 138 - Distance Calculations
  ---
  duration_ms: 2.660917
  type: 'suite'
  ...
# (node:55649) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Random Number Generator
    # Subtest: Basic Random Functions
        # Subtest: getRandom should return values in range [0, maxVal)
        ok 1 - getRandom should return values in range [0, maxVal)
          ---
          duration_ms: 6.289458
          ...
        # Subtest: getRandom should handle edge cases
        ok 2 - getRandom should handle edge cases
          ---
          duration_ms: 0.07725
          ...
        # Subtest: rand should generate 32-bit values
        ok 3 - rand should generate 32-bit values
          ---
          duration_ms: 0.0865
          ...
        # Subtest: should be deterministic with same seed
        ok 4 - should be deterministic with same seed
          ---
          duration_ms: 0.388333
          ...
        # Subtest: should be different with different seeds
        ok 5 - should be different with different seeds
          ---
          duration_ms: 0.099709
          ...
        # Subtest: should use default seeds when seeded with 0
        ok 6 - should use default seeds when seeded with 0
          ---
          duration_ms: 0.050417
          ...
        1..6
    ok 1 - Basic Random Functions
      ---
      duration_ms: 7.328041
      type: 'suite'
      ...
    # Subtest: Random Integer Range
        # Subtest: randomInt should work for valid ranges
        ok 1 - randomInt should work for valid ranges
          ---
          duration_ms: 0.105875
          ...
        # Subtest: randomInt should handle equal min/max
        ok 2 - randomInt should handle equal min/max
          ---
          duration_ms: 0.202625
          ...
        # Subtest: randomInt should throw on invalid range
        ok 3 - randomInt should throw on invalid range
          ---
          duration_ms: 0.203541
          ...
        # Subtest: randomInt should handle negative numbers
        ok 4 - randomInt should handle negative numbers
          ---
          duration_ms: 0.164791
          ...
        1..4
    ok 2 - Random Integer Range
      ---
      duration_ms: 0.88375
      type: 'suite'
      ...
    # Subtest: Random Boolean
        # Subtest: randomBool should respect probability bounds
        ok 1 - randomBool should respect probability bounds
          ---
          duration_ms: 0.072958
          ...
        # Subtest: randomBool should approximate expected probability
        ok 2 - randomBool should approximate expected probability
          ---
          duration_ms: 0.625375
          ...
        # Subtest: randomBool default should be approximately 50/50
        ok 3 - randomBool default should be approximately 50/50
          ---
          duration_ms: 0.677584
          ...
        1..3
    ok 3 - Random Boolean
      ---
      duration_ms: 1.423833
      type: 'suite'
      ...
    # Subtest: Array Operations
        # Subtest: shuffleArray should preserve all elements
        ok 1 - shuffleArray should preserve all elements
          ---
          duration_ms: 0.152708
          ...
        # Subtest: shuffleArray should actually shuffle
        ok 2 - shuffleArray should actually shuffle
          ---
          duration_ms: 0.060792
          ...
        # Subtest: shuffleArray should handle empty and single element arrays
        ok 3 - shuffleArray should handle empty and single element arrays
          ---
          duration_ms: 0.032042
          ...
        # Subtest: randomChoice should select from array
        ok 4 - randomChoice should select from array
          ---
          duration_ms: 0.04975
          ...
        # Subtest: randomChoice should return undefined for empty array
        ok 5 - randomChoice should return undefined for empty array
          ---
          duration_ms: 0.028667
          ...
        # Subtest: randomChoice should handle single element array
        ok 6 - randomChoice should handle single element array
          ---
          duration_ms: 0.02875
          ...
        1..6
    ok 4 - Array Operations
      ---
      duration_ms: 0.461
      type: 'suite'
      ...
    # Subtest: Isolated Random State
        # Subtest: createRandomState should not affect global state
        ok 1 - createRandomState should not affect global state
          ---
          duration_ms: 0.057209
          ...
        # Subtest: isolated states should be independent
        ok 2 - isolated states should be independent
          ---
          duration_ms: 0.037
          ...
        1..2
    ok 5 - Isolated Random State
      ---
      duration_ms: 0.127708
      type: 'suite'
      ...
    # Subtest: Distribution and Quality Tests
        # Subtest: should have reasonable distribution across range
        ok 1 - should have reasonable distribution across range
          ---
          duration_ms: 0.820708
          ...
        # Subtest: should not have obvious patterns in low bits
        ok 2 - should not have obvious patterns in low bits
          ---
          duration_ms: 0.11
          ...
        1..2
    ok 6 - Distribution and Quality Tests
      ---
      duration_ms: 0.963042
      type: 'suite'
      ...
    # Subtest: Edge Cases and Error Handling
        # Subtest: should handle large max values
        ok 1 - should handle large max values
          ---
          duration_ms: 0.063834
          ...
        # Subtest: should be consistent across multiple calls with same state
        ok 2 - should be consistent across multiple calls with same state
          ---
          duration_ms: 0.06075
          ...
        # Subtest: should handle rapid seed changes
        ok 3 - should handle rapid seed changes
          ---
          duration_ms: 0.152625
          ...
        1..3
    ok 7 - Edge Cases and Error Handling
      ---
      duration_ms: 0.316375
      type: 'suite'
      ...
    1..7
ok 139 - Random Number Generator
  ---
  duration_ms: 12.079041
  type: 'suite'
  ...
# (node:55650) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Bribery success rate: 94/100 (94.0%)
# Subtest: bribery - amount calculation varies by difficulty
ok 140 - bribery - amount calculation varies by difficulty
  ---
  duration_ms: 0.836291
  ...
# Subtest: bribery - credit availability check
ok 141 - bribery - credit availability check
  ---
  duration_ms: 2.383375
  ...
# Subtest: bribery - successful attempt with sufficient credits
ok 142 - bribery - successful attempt with sufficient credits
  ---
  duration_ms: 0.73675
  ...
# Subtest: bribery - failed attempt with insufficient credits
ok 143 - bribery - failed attempt with insufficient credits
  ---
  duration_ms: 0.722334
  ...
# Subtest: bribery - success rate depends on police record
ok 144 - bribery - success rate depends on police record
  ---
  duration_ms: 0.824
  ...
# Subtest: bribery - police record worsens on failed attempt
ok 145 - bribery - police record worsens on failed attempt
  ---
  duration_ms: 0.688708
  ...
# Subtest: bribery - bribe option availability during police encounters
ok 146 - bribery - bribe option availability during police encounters
  ---
  duration_ms: 2.272292
  ...
# Subtest: bribery - bribe option not available for pirate encounters
ok 147 - bribery - bribe option not available for pirate encounters
  ---
  duration_ms: 0.701625
  ...
# Subtest: bribery - government bribe level affects difficulty
ok 148 - bribery - government bribe level affects difficulty
  ---
  duration_ms: 0.904875
  ...
# Subtest: bribery - amount calculation bounds checking
ok 149 - bribery - amount calculation bounds checking
  ---
  duration_ms: 0.262625
  ...
# Subtest: bribery - edge cases
ok 150 - bribery - edge cases
  ---
  duration_ms: 0.74025
  ...
# Subtest: bribery - consistency across multiple attempts
ok 151 - bribery - consistency across multiple attempts
  ---
  duration_ms: 0.912917
  ...
# (node:55651) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Combat Reputation System
    # Subtest: Reputation string conversion
    ok 1 - Reputation string conversion
      ---
      duration_ms: 0.505542
      ...
    # Subtest: Kill points calculation based on opponent reputation
    ok 2 - Kill points calculation based on opponent reputation
      ---
      duration_ms: 0.076125
      ...
    # Subtest: Award kill points progression
    ok 3 - Award kill points progression
      ---
      duration_ms: 1.20125
      ...
    # Subtest: Elite and dangerous reputation checks
    ok 4 - Elite and dangerous reputation checks
      ---
      duration_ms: 0.060042
      ...
    # Subtest: Reputation encounter modifiers
    ok 5 - Reputation encounter modifiers
      ---
      duration_ms: 0.0605
      ...
    # Subtest: Bounty reward calculation
    ok 6 - Bounty reward calculation
      ---
      duration_ms: 0.100667
      ...
    # Subtest: Combat victory processing
    ok 7 - Combat victory processing
      ---
      duration_ms: 7.4145
      ...
    # Subtest: Pirate intimidation chance
    ok 8 - Pirate intimidation chance
      ---
      duration_ms: 0.170917
      ...
    # Subtest: Reputation penalty application
    ok 9 - Reputation penalty application
      ---
      duration_ms: 0.914833
      ...
    1..9
ok 152 - Combat Reputation System
  ---
  duration_ms: 14.792417
  ...
# (node:55652) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Police Record System
    # Subtest: Police record string conversion
    ok 1 - Police record string conversion
      ---
      duration_ms: 0.450542
      ...
    # Subtest: Criminal record detection
    ok 2 - Criminal record detection
      ---
      duration_ms: 0.058417
      ...
    # Subtest: Clean record detection
    ok 3 - Clean record detection
      ---
      duration_ms: 0.050875
      ...
    # Subtest: Bribe amount calculation varies by difficulty
    ok 4 - Bribe amount calculation varies by difficulty
      ---
      duration_ms: 0.132667
      ...
    # Subtest: Police record penalties
    ok 5 - Police record penalties
      ---
      duration_ms: 1.176209
      ...
    # Subtest: Police record improvements
    ok 6 - Police record improvements
      ---
      duration_ms: 1.7765
      ...
    # Subtest: Police encounter modifier based on record
    ok 7 - Police encounter modifier based on record
      ---
      duration_ms: 0.096834
      ...
    # Subtest: Inspector encounter processing
    ok 8 - Inspector encounter processing
      ---
      duration_ms: 0.919792
      ...
    1..8
ok 153 - Police Record System
  ---
  duration_ms: 5.9915
  ...
# (node:55653) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Weapon Performance Calculations
    # Subtest: should calculate single weapon power correctly
    ok 1 - should calculate single weapon power correctly
      ---
      duration_ms: 1.637458
      ...
    # Subtest: should calculate multiple weapon power correctly
    ok 2 - should calculate multiple weapon power correctly
      ---
      duration_ms: 2.703417
      ...
    # Subtest: should handle empty weapon slots
    ok 3 - should handle empty weapon slots
      ---
      duration_ms: 5.565209
      ...
    # Subtest: should detect weapon types for upgrade checks
    ok 4 - should detect weapon types for upgrade checks
      ---
      duration_ms: 0.697875
      ...
    1..4
ok 154 - Weapon Performance Calculations
  ---
  duration_ms: 11.382666
  ...
# Subtest: Shield Performance Calculations
    # Subtest: should calculate single shield power correctly
    ok 1 - should calculate single shield power correctly
      ---
      duration_ms: 48.075125
      ...
    # Subtest: should calculate multiple shield power correctly
    ok 2 - should calculate multiple shield power correctly
      ---
      duration_ms: 0.559584
      ...
    # Subtest: should track shield strength separately from type
    ok 3 - should track shield strength separately from type
      ---
      duration_ms: 0.624292
      ...
    # Subtest: should detect shield types correctly
    ok 4 - should detect shield types correctly
      ---
      duration_ms: 0.617583
      ...
    1..4
ok 155 - Shield Performance Calculations
  ---
  duration_ms: 50.4015
  ...
# Subtest: Skill Enhancement from Equipment
    # Subtest: should enhance fighter skill with targeting system
    ok 1 - should enhance fighter skill with targeting system
      ---
      duration_ms: 0.584167
      ...
    # Subtest: should enhance pilot skill with navigating system
    ok 2 - should enhance pilot skill with navigating system
      ---
      duration_ms: 0.547458
      ...
    # Subtest: should enhance pilot skill with cloaking device
    ok 3 - should enhance pilot skill with cloaking device
      ---
      duration_ms: 0.127459
      ...
    # Subtest: should stack pilot skill bonuses
    ok 4 - should stack pilot skill bonuses
      ---
      duration_ms: 0.126416
      ...
    # Subtest: should enhance engineer skill with auto-repair system
    ok 5 - should enhance engineer skill with auto-repair system
      ---
      duration_ms: 0.120625
      ...
    # Subtest: should handle multiple skill-enhancing gadgets
    ok 6 - should handle multiple skill-enhancing gadgets
      ---
      duration_ms: 0.116792
      ...
    1..6
ok 156 - Skill Enhancement from Equipment
  ---
  duration_ms: 1.869625
  ...
# Subtest: Cloaking Device Mechanics
    # Subtest: should detect cloaking device presence
    ok 1 - should detect cloaking device presence
      ---
      duration_ms: 0.119875
      ...
    # Subtest: should calculate cloaking effectiveness
    ok 2 - should calculate cloaking effectiveness
      ---
      duration_ms: 0.114958
      ...
    1..2
ok 157 - Cloaking Device Mechanics
  ---
  duration_ms: 0.303625
  ...
# Subtest: Combat Hit Probability Modifiers
    # Subtest: should modify hit chance based on ship size
    ok 1 - should modify hit chance based on ship size
      ---
      duration_ms: 0.037292
      ...
    # Subtest: should calculate damage reduction from shields
    ok 2 - should calculate damage reduction from shields
      ---
      duration_ms: 1.491625
      ...
    # Subtest: should limit damage to hull strength fraction
    ok 3 - should limit damage to hull strength fraction
      ---
      duration_ms: 0.056667
      ...
    1..3
ok 158 - Combat Hit Probability Modifiers
  ---
  duration_ms: 1.737042
  ...
# Subtest: Equipment Synergy Effects
    # Subtest: should combine weapon and targeting system effectively
    ok 1 - should combine weapon and targeting system effectively
      ---
      duration_ms: 0.141
      ...
    # Subtest: should combine shields and auto-repair for survivability
    ok 2 - should combine shields and auto-repair for survivability
      ---
      duration_ms: 0.119917
      ...
    # Subtest: should maximize stealth with cloaking and navigation
    ok 3 - should maximize stealth with cloaking and navigation
      ---
      duration_ms: 0.114458
      ...
    1..3
ok 159 - Equipment Synergy Effects
  ---
  duration_ms: 0.487791
  ...
# (node:55654) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Ship Purchase Validation
    # Subtest: should validate tech level requirements
    ok 1 - should validate tech level requirements
      ---
      duration_ms: 1.677792
      ...
    # Subtest: should enforce credit requirements
    ok 2 - should enforce credit requirements
      ---
      duration_ms: 0.714458
      ...
    # Subtest: should prevent purchase while in debt
    ok 3 - should prevent purchase while in debt
      ---
      duration_ms: 1.879167
      ...
    # Subtest: should validate crew quarters capacity
    ok 4 - should validate crew quarters capacity
      ---
      duration_ms: 0.678541
      ...
    # Subtest: should handle special equipment transfer costs
    ok 5 - should handle special equipment transfer costs
      ---
      duration_ms: 0.226958
      ...
    # Subtest: should prevent selling ship with reactor quest active
    ok 6 - should prevent selling ship with reactor quest active
      ---
      duration_ms: 0.20825
      ...
    1..6
ok 160 - Ship Purchase Validation
  ---
  duration_ms: 19.193042
  ...
# Subtest: Ship Upgrade Validation
    # Subtest: should calculate hull strength correctly
    ok 1 - should calculate hull strength correctly
      ---
      duration_ms: 0.237625
      ...
    # Subtest: should calculate repair costs correctly
    ok 2 - should calculate repair costs correctly
      ---
      duration_ms: 0.23025
      ...
    # Subtest: should handle repair credit limits
    ok 3 - should handle repair credit limits
      ---
      duration_ms: 2.070083
      ...
    1..3
ok 161 - Ship Upgrade Validation
  ---
  duration_ms: 2.898375
  ...
# Subtest: Ship Transfer Validation
    # Subtest: should validate special equipment slot compatibility
    ok 1 - should validate special equipment slot compatibility
      ---
      duration_ms: 0.060042
      ...
    # Subtest: should validate passenger requirements
    ok 2 - should validate passenger requirements
      ---
      duration_ms: 0.148917
      ...
    1..2
ok 162 - Ship Transfer Validation
  ---
  duration_ms: 0.343125
  ...
# Subtest: Ship Price Calculation
    # Subtest: should apply trader skill discount on ship purchases
    ok 1 - should apply trader skill discount on ship purchases
      ---
      duration_ms: 0.045791
      ...
    # Subtest: should calculate trade-in value correctly
    ok 2 - should calculate trade-in value correctly
      ---
      duration_ms: 0.03175
      ...
    # Subtest: should handle minimum ship prices
    ok 3 - should handle minimum ship prices
      ---
      duration_ms: 0.031666
      ...
    1..3
ok 163 - Ship Price Calculation
  ---
  duration_ms: 0.2035
  ...
# (node:55655) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Space Trader Combat Formulas
    # Subtest: Hit Calculation (Encounter.c:804-806)
        # Subtest: should calculate hit probability based on fighter vs pilot skill
        ok 1 - should calculate hit probability based on fighter vs pilot skill
          ---
          duration_ms: 0.520333
          ...
        # Subtest: should reduce hit chance when defender is fleeing
        ok 2 - should reduce hit chance when defender is fleeing
          ---
          duration_ms: 0.852459
          ...
        # Subtest: should factor in ship size for larger targets
        ok 3 - should factor in ship size for larger targets
          ---
          duration_ms: 1.164916
          ...
        1..3
    ok 1 - Hit Calculation (Encounter.c:804-806)
      ---
      duration_ms: 2.919166
      type: 'suite'
      ...
    # Subtest: Damage Calculation (Encounter.c:821)
        # Subtest: should apply engineer skill bonus to weapon damage
        ok 1 - should apply engineer skill bonus to weapon damage
          ---
          duration_ms: 0.126375
          ...
        # Subtest: should return 0 damage for no weapons
        ok 2 - should return 0 damage for no weapons
          ---
          duration_ms: 0.058083
          ...
        1..2
    ok 2 - Damage Calculation (Encounter.c:821)
      ---
      duration_ms: 0.307583
      type: 'suite'
      ...
    # Subtest: Reactor Damage Boost (Encounter.c:827-833)
        # Subtest: should boost damage for commander under attack with reactor
        ok 1 - should boost damage for commander under attack with reactor
          ---
          duration_ms: 0.097333
          ...
        # Subtest: should not boost damage for opponents
        ok 2 - should not boost damage for opponents
          ---
          duration_ms: 0.203125
          ...
        1..2
    ok 3 - Reactor Damage Boost (Encounter.c:827-833)
      ---
      duration_ms: 0.470625
      type: 'suite'
      ...
    # Subtest: Hull Damage Limits (Encounter.c:863-868)
        # Subtest: should limit commander hull damage based on difficulty
        ok 1 - should limit commander hull damage based on difficulty
          ---
          duration_ms: 0.062458
          ...
        # Subtest: should use fixed limit for opponents
        ok 2 - should use fixed limit for opponents
          ---
          duration_ms: 0.066417
          ...
        1..2
    ok 4 - Hull Damage Limits (Encounter.c:863-868)
      ---
      duration_ms: 0.259417
      type: 'suite'
      ...
    # Subtest: Escape Probability (Encounter.c:1071-1072)
        # Subtest: should calculate escape based on pilot skills and difficulty
        ok 1 - should calculate escape based on pilot skills and difficulty
          ---
          duration_ms: 0.2625
          ...
        # Subtest: should make escape harder on higher difficulty
        ok 2 - should make escape harder on higher difficulty
          ---
          duration_ms: 0.218416
          ...
        1..2
    ok 5 - Escape Probability (Encounter.c:1071-1072)
      ---
      duration_ms: 0.519666
      type: 'suite'
      ...
    # Subtest: Bounty Calculation (Encounter.c:78-90)
        # Subtest: should calculate bounty with proper rounding and limits
        ok 1 - should calculate bounty with proper rounding and limits
          ---
          duration_ms: 0.108459
          ...
        # Subtest: should enforce minimum and maximum bounty limits
        ok 2 - should enforce minimum and maximum bounty limits
          ---
          duration_ms: 0.037333
          ...
        1..2
    ok 6 - Bounty Calculation (Encounter.c:78-90)
      ---
      duration_ms: 2.139167
      type: 'suite'
      ...
    # Subtest: Skill Difficulty Adaptation (Skill.c:355-363)
        # Subtest: should adapt skills based on difficulty level
        ok 1 - should adapt skills based on difficulty level
          ---
          duration_ms: 0.054042
          ...
        # Subtest: should not reduce skills below 1 on impossible
        ok 2 - should not reduce skills below 1 on impossible
          ---
          duration_ms: 0.027083
          ...
        1..2
    ok 7 - Skill Difficulty Adaptation (Skill.c:355-363)
      ---
      duration_ms: 0.115084
      type: 'suite'
      ...
    # Subtest: Auto-Repair System (Traveler.c:1779-1804)
        # Subtest: should repair based on engineer skill during travel
        ok 1 - should repair based on engineer skill during travel
          ---
          duration_ms: 0.11425
          ...
        # Subtest: should not repair with no engineer skill
        ok 2 - should not repair with no engineer skill
          ---
          duration_ms: 0.026875
          ...
        1..2
    ok 8 - Auto-Repair System (Traveler.c:1779-1804)
      ---
      duration_ms: 0.170916
      type: 'suite'
      ...
    # Subtest: Integration Tests
        # Subtest: should handle complete combat sequence
        ok 1 - should handle complete combat sequence
          ---
          duration_ms: 0.069708
          ...
        # Subtest: should handle escape attempt from combat
        ok 2 - should handle escape attempt from combat
          ---
          duration_ms: 0.053833
          ...
        1..2
    ok 9 - Integration Tests
      ---
      duration_ms: 0.153334
      type: 'suite'
      ...
    1..9
ok 164 - Space Trader Combat Formulas
  ---
  duration_ms: 7.740625
  type: 'suite'
  ...
# (node:55656) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Space Trader Encounter Generation
    # Subtest: Base Encounter Probability (Traveler.c:1866-1870)
        # Subtest: should calculate encounter threshold based on difficulty
        ok 1 - should calculate encounter threshold based on difficulty
          ---
          duration_ms: 0.394458
          ...
        # Subtest: should halve encounter probability for Flea ships
        ok 2 - should halve encounter probability for Flea ships
          ---
          duration_ms: 0.126375
          ...
        1..2
    ok 1 - Base Encounter Probability (Traveler.c:1866-1870)
      ---
      duration_ms: 0.790541
      type: 'suite'
      ...
    # Subtest: Encounter Type Priority (Traveler.c:1872-1885)
        # Subtest: should prioritize encounters correctly
        ok 1 - should prioritize encounters correctly
          ---
          duration_ms: 0.078167
          ...
        # Subtest: should prevent pirate encounters when already raided
        ok 2 - should prevent pirate encounters when already raided
          ---
          duration_ms: 0.687958
          ...
        1..2
    ok 2 - Encounter Type Priority (Traveler.c:1872-1885)
      ---
      duration_ms: 10.132541
      type: 'suite'
      ...
    # Subtest: Police Encounter Behavior (Traveler.c:1914-1973)
        # Subtest: should attack criminals with low reputation
        ok 1 - should attack criminals with low reputation
          ---
          duration_ms: 0.347958
          ...
        # Subtest: should flee from criminals with high reputation
        ok 2 - should flee from criminals with high reputation
          ---
          duration_ms: 0.062917
          ...
        # Subtest: should inspect dubious players
        ok 3 - should inspect dubious players
          ---
          duration_ms: 0.212625
          ...
        # Subtest: should ignore cloaked ships
        ok 4 - should ignore cloaked ships
          ---
          duration_ms: 0.046166
          ...
        # Subtest: should have low inspection rate for lawful traders
        ok 5 - should have low inspection rate for lawful traders
          ---
          duration_ms: 0.173916
          ...
        1..5
    ok 3 - Police Encounter Behavior (Traveler.c:1914-1973)
      ---
      duration_ms: 1.265209
      type: 'suite'
      ...
    # Subtest: Pirate Encounter Behavior (Traveler.c:2004-2023)
        # Subtest: should attack when pirate ship is large
        ok 1 - should attack when pirate ship is large
          ---
          duration_ms: 0.091125
          ...
        # Subtest: should flee from high reputation players in small ships
        ok 2 - should flee from high reputation players in small ships
          ---
          duration_ms: 0.050541
          ...
        # Subtest: should attack when pirate ship is superior to player
        ok 3 - should attack when pirate ship is superior to player
          ---
          duration_ms: 0.029375
          ...
        # Subtest: should ignore cloaked ships
        ok 4 - should ignore cloaked ships
          ---
          duration_ms: 0.02725
          ...
        1..4
    ok 4 - Pirate Encounter Behavior (Traveler.c:2004-2023)
      ---
      duration_ms: 0.294875
      type: 'suite'
      ...
    # Subtest: Wild Police Encounter at Kravat (Traveler.c:1886-1902)
        # Subtest: should calculate correct police chances by difficulty
        ok 1 - should calculate correct police chances by difficulty
          ---
          duration_ms: 0.044708
          ...
        # Subtest: should trigger police encounters at correct rate
        ok 2 - should trigger police encounters at correct rate
          ---
          duration_ms: 0.067833
          ...
        1..2
    ok 5 - Wild Police Encounter at Kravat (Traveler.c:1886-1902)
      ---
      duration_ms: 0.144834
      type: 'suite'
      ...
    # Subtest: Special Encounters
        # Subtest: should trigger Space Monster at Acamar
        ok 1 - should trigger Space Monster at Acamar
          ---
          duration_ms: 0.051333
          ...
        # Subtest: should trigger Scarab with correct conditions
        ok 2 - should trigger Scarab with correct conditions
          ---
          duration_ms: 0.033125
          ...
        # Subtest: should calculate very rare encounter probability
        ok 3 - should calculate very rare encounter probability
          ---
          duration_ms: 0.077291
          ...
        1..3
    ok 6 - Special Encounters
      ---
      duration_ms: 0.19675
      type: 'suite'
      ...
    # Subtest: Artifact Mantis Encounters (Traveler.c:1904-1905)
        # Subtest: should trigger Mantis encounters with artifact
        ok 1 - should trigger Mantis encounters with artifact
          ---
          duration_ms: 0.121208
          ...
        # Subtest: should not trigger Mantis without artifact
        ok 2 - should not trigger Mantis without artifact
          ---
          duration_ms: 0.0315
          ...
        1..2
    ok 7 - Artifact Mantis Encounters (Traveler.c:1904-1905)
      ---
      duration_ms: 0.181875
      type: 'suite'
      ...
    # Subtest: Encounter Avoidance Rules (Traveler.c:1975-2096)
        # Subtest: should skip encounters when both ships cloaked
        ok 1 - should skip encounters when both ships cloaked
          ---
          duration_ms: 0.04625
          ...
        # Subtest: should respect player avoidance preferences
        ok 2 - should respect player avoidance preferences
          ---
          duration_ms: 0.046667
          ...
        1..2
    ok 8 - Encounter Avoidance Rules (Traveler.c:1975-2096)
      ---
      duration_ms: 0.1215
      type: 'suite'
      ...
    # Subtest: Trade in Orbit (Traveler.c:2064-2073)
        # Subtest: should trigger trade opportunities with correct probability
        ok 1 - should trigger trade opportunities with correct probability
          ---
          duration_ms: 0.074959
          ...
        # Subtest: should prefer selling over buying when both possible
        ok 2 - should prefer selling over buying when both possible
          ---
          duration_ms: 1.186625
          ...
        1..2
    ok 9 - Trade in Orbit (Traveler.c:2064-2073)
      ---
      duration_ms: 1.305916
      type: 'suite'
      ...
    # Subtest: System Strength Calculations
        # Subtest: should handle system strength scaling with difficulty
        ok 1 - should handle system strength scaling with difficulty
          ---
          duration_ms: 0.05775
          ...
        1..1
    ok 10 - System Strength Calculations
      ---
      duration_ms: 0.097459
      type: 'suite'
      ...
    # Subtest: Integration Test - Complete Travel Encounter
        # Subtest: should handle complete travel encounter sequence
        ok 1 - should handle complete travel encounter sequence
          ---
          duration_ms: 0.06975
          ...
        1..1
    ok 11 - Integration Test - Complete Travel Encounter
      ---
      duration_ms: 0.10425
      type: 'suite'
      ...
    1..11
ok 165 - Space Trader Encounter Generation
  ---
  duration_ms: 15.329292
  type: 'suite'
  ...
# (node:55657) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: System Constants Validation
    # Subtest: difficulty level validation
    ok 1 - difficulty level validation
      ---
      duration_ms: 0.593709
      ...
    # Subtest: credits validation
    ok 2 - credits validation
      ---
      duration_ms: 0.060875
      ...
    # Subtest: price validation
    ok 3 - price validation
      ---
      duration_ms: 0.053042
      ...
    # Subtest: quantity validation
    ok 4 - quantity validation
      ---
      duration_ms: 0.047834
      ...
    # Subtest: tech level validation
    ok 5 - tech level validation
      ---
      duration_ms: 4.004791
      ...
    # Subtest: system coordinates validation
    ok 6 - system coordinates validation
      ---
      duration_ms: 0.109333
      ...
    # Subtest: encounter type validation
    ok 7 - encounter type validation
      ---
      duration_ms: 0.072167
      ...
    # Subtest: trade item validation
    ok 8 - trade item validation
      ---
      duration_ms: 0.124292
      ...
    # Subtest: police record score validation
    ok 9 - police record score validation
      ---
      duration_ms: 0.151625
      ...
    # Subtest: police strength calculation
    ok 10 - police strength calculation
      ---
      duration_ms: 0.24325
      ...
    # Subtest: debt thresholds
    ok 11 - debt thresholds
      ---
      duration_ms: 0.071875
      ...
    # Subtest: maximum values consistency
    ok 12 - maximum values consistency
      ---
      duration_ms: 0.036833
      ...
    # Subtest: system status constants
    ok 13 - system status constants
      ---
      duration_ms: 0.0315
      ...
    # Subtest: trade item indices
    ok 14 - trade item indices
      ---
      duration_ms: 0.033167
      ...
    1..14
ok 166 - System Constants Validation
  ---
  duration_ms: 6.421625
  type: 'suite'
  ...
# Subtest: Business Logic Validation
    # Subtest: trade price calculations
    ok 1 - trade price calculations
      ---
      duration_ms: 0.109583
      ...
    # Subtest: police record levels
    ok 2 - police record levels
      ---
      duration_ms: 0.051166
      ...
    # Subtest: reputation levels
    ok 3 - reputation levels
      ---
      duration_ms: 0.038542
      ...
    # Subtest: police strength calculation
    ok 4 - police strength calculation
      ---
      duration_ms: 0.034
      ...
    # Subtest: debt warnings
    ok 5 - debt warnings
      ---
      duration_ms: 0.03375
      ...
    # Subtest: trade transaction validation
    ok 6 - trade transaction validation
      ---
      duration_ms: 0.089292
      ...
    # Subtest: ship equipment management
    ok 7 - ship equipment management
      ---
      duration_ms: 0.053292
      ...
    # Subtest: fuel and range calculations
    ok 8 - fuel and range calculations
      ---
      duration_ms: 0.0475
      ...
    # Subtest: system range checking
    ok 9 - system range checking
      ---
      duration_ms: 0.051083
      ...
    # Subtest: special equipment checks
    ok 10 - special equipment checks
      ---
      duration_ms: 0.034625
      ...
    # Subtest: cargo value calculation
    ok 11 - cargo value calculation
      ---
      duration_ms: 0.044
      ...
    # Subtest: political system trade restrictions
    ok 12 - political system trade restrictions
      ---
      duration_ms: 0.030292
      ...
    # Subtest: ship price calculation with trader skill
    ok 13 - ship price calculation with trader skill
      ---
      duration_ms: 0.031667
      ...
    # Subtest: boundary conditions for trade items
    ok 14 - boundary conditions for trade items
      ---
      duration_ms: 0.086917
      ...
    # Subtest: political system constraints
    ok 15 - political system constraints
      ---
      duration_ms: 0.063042
      ...
    1..15
ok 167 - Business Logic Validation
  ---
  duration_ms: 0.92
  type: 'suite'
  ...
# (node:55658) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: System Constants Validation
    # Subtest: difficulty level validation
    ok 1 - difficulty level validation
      ---
      duration_ms: 0.589
      ...
    # Subtest: credits validation
    ok 2 - credits validation
      ---
      duration_ms: 0.060625
      ...
    # Subtest: price validation
    ok 3 - price validation
      ---
      duration_ms: 0.053208
      ...
    # Subtest: quantity validation
    ok 4 - quantity validation
      ---
      duration_ms: 0.049208
      ...
    # Subtest: tech level validation
    ok 5 - tech level validation
      ---
      duration_ms: 0.102834
      ...
    # Subtest: system coordinates validation
    ok 6 - system coordinates validation
      ---
      duration_ms: 0.052417
      ...
    # Subtest: encounter type validation
    ok 7 - encounter type validation
      ---
      duration_ms: 0.058542
      ...
    # Subtest: trade item validation
    ok 8 - trade item validation
      ---
      duration_ms: 0.110167
      ...
    # Subtest: police record score validation
    ok 9 - police record score validation
      ---
      duration_ms: 0.23275
      ...
    # Subtest: police strength calculation
    ok 10 - police strength calculation
      ---
      duration_ms: 0.258166
      ...
    # Subtest: debt thresholds
    ok 11 - debt thresholds
      ---
      duration_ms: 0.074791
      ...
    # Subtest: maximum values consistency
    ok 12 - maximum values consistency
      ---
      duration_ms: 0.039
      ...
    # Subtest: system status constants
    ok 13 - system status constants
      ---
      duration_ms: 0.031916
      ...
    # Subtest: trade item indices
    ok 14 - trade item indices
      ---
      duration_ms: 0.032208
      ...
    1..14
ok 168 - System Constants Validation
  ---
  duration_ms: 3.975708
  type: 'suite'
  ...
# Subtest: Data Structure Validation
    # Subtest: valid ship structure
    ok 1 - valid ship structure
      ---
      duration_ms: 0.174083
      ...
    # Subtest: invalid ship structure - negative values
    ok 2 - invalid ship structure - negative values
      ---
      duration_ms: 0.074042
      ...
    # Subtest: invalid ship structure - wrong array sizes
    ok 3 - invalid ship structure - wrong array sizes
      ---
      duration_ms: 0.086375
      ...
    # Subtest: tribbles limit validation
    ok 4 - tribbles limit validation
      ---
      duration_ms: 0.050167
      ...
    # Subtest: valid solar system structure
    ok 5 - valid solar system structure
      ---
      duration_ms: 0.081583
      ...
    # Subtest: invalid solar system coordinates
    ok 6 - invalid solar system coordinates
      ---
      duration_ms: 0.042417
      ...
    # Subtest: valid crew member structure
    ok 7 - valid crew member structure
      ---
      duration_ms: 0.052958
      ...
    # Subtest: invalid crew member skills
    ok 8 - invalid crew member skills
      ---
      duration_ms: 0.0355
      ...
    # Subtest: distance calculations
    ok 9 - distance calculations
      ---
      duration_ms: 0.048834
      ...
    # Subtest: minimum distance validation
    ok 10 - minimum distance validation
      ---
      duration_ms: 0.051
      ...
    # Subtest: boundary value testing
    ok 11 - boundary value testing
      ---
      duration_ms: 0.032333
      ...
    1..11
ok 169 - Data Structure Validation
  ---
  duration_ms: 0.826708
  type: 'suite'
  ...
# (node:55659) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: System Constants Validation
    # Subtest: difficulty level validation
    ok 1 - difficulty level validation
      ---
      duration_ms: 0.579875
      ...
    # Subtest: credits validation
    ok 2 - credits validation
      ---
      duration_ms: 0.061625
      ...
    # Subtest: price validation
    ok 3 - price validation
      ---
      duration_ms: 0.0545
      ...
    # Subtest: quantity validation
    ok 4 - quantity validation
      ---
      duration_ms: 0.052791
      ...
    # Subtest: tech level validation
    ok 5 - tech level validation
      ---
      duration_ms: 0.048625
      ...
    # Subtest: system coordinates validation
    ok 6 - system coordinates validation
      ---
      duration_ms: 0.09325
      ...
    # Subtest: encounter type validation
    ok 7 - encounter type validation
      ---
      duration_ms: 0.061666
      ...
    # Subtest: trade item validation
    ok 8 - trade item validation
      ---
      duration_ms: 0.160125
      ...
    # Subtest: police record score validation
    ok 9 - police record score validation
      ---
      duration_ms: 0.139084
      ...
    # Subtest: police strength calculation
    ok 10 - police strength calculation
      ---
      duration_ms: 0.243916
      ...
    # Subtest: debt thresholds
    ok 11 - debt thresholds
      ---
      duration_ms: 0.07125
      ...
    # Subtest: maximum values consistency
    ok 12 - maximum values consistency
      ---
      duration_ms: 0.037958
      ...
    # Subtest: system status constants
    ok 13 - system status constants
      ---
      duration_ms: 0.032167
      ...
    # Subtest: trade item indices
    ok 14 - trade item indices
      ---
      duration_ms: 0.036167
      ...
    1..14
ok 170 - System Constants Validation
  ---
  duration_ms: 2.494208
  type: 'suite'
  ...
# (node:55660) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Utility Functions
    # Subtest: min/max functions
    ok 1 - min/max functions
      ---
      duration_ms: 0.56025
      ...
    # Subtest: abs function
    ok 2 - abs function
      ---
      duration_ms: 0.054667
      ...
    # Subtest: sqr function
    ok 3 - sqr function
      ---
      duration_ms: 0.098625
      ...
    # Subtest: case conversion
    ok 4 - case conversion
      ---
      duration_ms: 0.063875
      ...
    # Subtest: distance calculations
    ok 5 - distance calculations
      ---
      duration_ms: 0.079708
      ...
    # Subtest: random number generation
    ok 6 - random number generation
      ---
      duration_ms: 0.109
      ...
    # Subtest: string utilities
    ok 7 - string utilities
      ---
      duration_ms: 0.050125
      ...
    # Subtest: validation utilities
    ok 8 - validation utilities
      ---
      duration_ms: 0.3345
      ...
    # Subtest: clamp function
    ok 9 - clamp function
      ---
      duration_ms: 0.137625
      ...
    # Subtest: safe division
    ok 10 - safe division
      ---
      duration_ms: 0.25075
      ...
    # Subtest: percentage calculations
    ok 11 - percentage calculations
      ---
      duration_ms: 0.060333
      ...
    # Subtest: rounding utilities
    ok 12 - rounding utilities
      ---
      duration_ms: 0.0525
      ...
    # Subtest: array slot utilities
    ok 13 - array slot utilities
      ---
      duration_ms: 0.087042
      ...
    # Subtest: coordinate utilities
    ok 14 - coordinate utilities
      ---
      duration_ms: 2.305833
      ...
    # Subtest: credit formatting
    ok 15 - credit formatting
      ---
      duration_ms: 9.354833
      ...
    # Subtest: bit manipulation
    ok 16 - bit manipulation
      ---
      duration_ms: 0.080291
      ...
    # Subtest: boolean packing/unpacking
    ok 17 - boolean packing/unpacking
      ---
      duration_ms: 0.383334
      ...
    # Subtest: edge cases and boundary conditions
    ok 18 - edge cases and boundary conditions
      ---
      duration_ms: 0.043625
      ...
    1..18
ok 171 - Utility Functions
  ---
  duration_ms: 14.924417
  type: 'suite'
  ...
# (node:55661) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: createInitialState creates valid initial game state
ok 172 - createInitialState creates valid initial game state
  ---
  duration_ms: 1.744292
  ...
# Subtest: cloneState creates independent copy
ok 173 - cloneState creates independent copy
  ---
  duration_ms: 0.835042
  ...
# Subtest: createEmptyShip creates ship with correct defaults
ok 174 - createEmptyShip creates ship with correct defaults
  ---
  duration_ms: 0.056791
  ...
# (node:55662) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: getSystemInfo - detailed info for current system
ok 175 - getSystemInfo - detailed info for current system
  ---
  duration_ms: 2.358334
  ...
# Subtest: getSystemInfo - summary info for visited distant system
ok 176 - getSystemInfo - summary info for visited distant system
  ---
  duration_ms: 1.028333
  ...
# Subtest: getSystemInfo - unknown info for unvisited distant system
ok 177 - getSystemInfo - unknown info for unvisited distant system
  ---
  duration_ms: 0.79075
  ...
# Subtest: getNearbySystemsInfo - returns only detailed systems within range
ok 178 - getNearbySystemsInfo - returns only detailed systems within range
  ---
  duration_ms: 0.844917
  ...
# Subtest: getGalacticChartInfo - returns all systems sorted by distance
ok 179 - getGalacticChartInfo - returns all systems sorted by distance
  ---
  duration_ms: 6.813125
  ...
# Subtest: getBestPriceSystemsForItem - finds systems with best prices
ok 180 - getBestPriceSystemsForItem - finds systems with best prices
  ---
  duration_ms: 0.32175
  ...
# Subtest: formatSystemInfo - formats different info types correctly
ok 181 - formatSystemInfo - formats different info types correctly
  ---
  duration_ms: 0.180459
  ...
# Subtest: system scanner action - nearby scan
ok 182 - system scanner action - nearby scan
  ---
  duration_ms: 1.0585
  ...
# Subtest: system scanner action - galactic chart
ok 183 - system scanner action - galactic chart
  ---
  duration_ms: 4.841334
  ...
# Subtest: system scanner action - trade analysis
ok 184 - system scanner action - trade analysis
  ---
  duration_ms: 4.978875
  ...
# Subtest: system scanner action - invalid scan type
ok 185 - system scanner action - invalid scan type
  ---
  duration_ms: 0.360333
  ...
# (node:55663) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Space Trader Economy System
    # Subtest: ToSpend Calculation (Traveler.c:1234-1239)
        # Subtest: should return full credits when ReserveMoney is false
        ok 1 - should return full credits when ReserveMoney is false
          ---
          duration_ms: 0.896375
          ...
        # Subtest: should reserve money for mercenaries and insurance when ReserveMoney is true
        ok 2 - should reserve money for mercenaries and insurance when ReserveMoney is true
          ---
          duration_ms: 0.152125
          ...
        # Subtest: should return 0 when reserved money exceeds credits
        ok 3 - should return 0 when reserved money exceeds credits
          ---
          duration_ms: 0.075
          ...
        1..3
    ok 1 - ToSpend Calculation (Traveler.c:1234-1239)
      ---
      duration_ms: 1.413958
      type: 'suite'
      ...
    # Subtest: Buy Price Calculation (Skill.c:142-165)
        # Subtest: should return 0 for items requiring higher tech level
        ok 1 - should return 0 for items requiring higher tech level
          ---
          duration_ms: 0.211375
          ...
        # Subtest: should return 0 for illegal goods in restrictive systems
        ok 2 - should return 0 for illegal goods in restrictive systems
          ---
          duration_ms: 0.359125
          ...
        # Subtest: should apply criminal markup for dubious police record
        ok 3 - should apply criminal markup for dubious police record
          ---
          duration_ms: 0.127458
          ...
        # Subtest: should apply trader skill modifier correctly
        ok 4 - should apply trader skill modifier correctly
          ---
          duration_ms: 0.068458
          ...
        # Subtest: should ensure minimum markup of 1 credit
        ok 5 - should ensure minimum markup of 1 credit
          ---
          duration_ms: 0.177916
          ...
        1..5
    ok 2 - Buy Price Calculation (Skill.c:142-165)
      ---
      duration_ms: 1.264834
      type: 'suite'
      ...
    # Subtest: Equipment Sell Price (Cargo.c:834-837)
        # Subtest: should calculate equipment sell price as 3/4 of original
        ok 1 - should calculate equipment sell price as 3/4 of original
          ---
          duration_ms: 0.155625
          ...
        # Subtest: should handle odd numbers correctly
        ok 2 - should handle odd numbers correctly
          ---
          duration_ms: 0.079292
          ...
        1..2
    ok 3 - Equipment Sell Price (Cargo.c:834-837)
      ---
      duration_ms: 0.285375
      type: 'suite'
      ...
    # Subtest: Maximum Loan Calculation (Bank.c:40-44)
        # Subtest: should allow higher loans for clean police record
        ok 1 - should allow higher loans for clean police record
          ---
          duration_ms: 0.101458
          ...
        # Subtest: should limit criminals to 500 credits max loan
        ok 2 - should limit criminals to 500 credits max loan
          ---
          duration_ms: 0.053333
          ...
        # Subtest: should cap loan at 25000 credits maximum
        ok 3 - should cap loan at 25000 credits maximum
          ---
          duration_ms: 0.0535
          ...
        1..3
    ok 4 - Maximum Loan Calculation (Bank.c:40-44)
      ---
      duration_ms: 0.248084
      type: 'suite'
      ...
    # Subtest: Cargo Purchase Validation (Cargo.c:572-615)
        # Subtest: should reject purchase when debt is too large
        ok 1 - should reject purchase when debt is too large
          ---
          duration_ms: 0.10175
          ...
        # Subtest: should reject purchase when item not available
        ok 2 - should reject purchase when item not available
          ---
          duration_ms: 0.047417
          ...
        # Subtest: should reject purchase when no cargo space
        ok 3 - should reject purchase when no cargo space
          ---
          duration_ms: 0.062625
          ...
        # Subtest: should reject purchase when cannot afford
        ok 4 - should reject purchase when cannot afford
          ---
          duration_ms: 0.11725
          ...
        # Subtest: should allow valid purchase
        ok 5 - should allow valid purchase
          ---
          duration_ms: 0.066625
          ...
        1..5
    ok 5 - Cargo Purchase Validation (Cargo.c:572-615)
      ---
      duration_ms: 0.865667
      type: 'suite'
      ...
    # Subtest: Illegal Goods Trading (Cargo.c:216-219, 249-250, 274-275)
        # Subtest: should allow criminals to trade only illegal goods
        ok 1 - should allow criminals to trade only illegal goods
          ---
          duration_ms: 0.089625
          ...
        # Subtest: should prevent non-criminals from trading illegal goods
        ok 2 - should prevent non-criminals from trading illegal goods
          ---
          duration_ms: 0.048292
          ...
        1..2
    ok 6 - Illegal Goods Trading (Cargo.c:216-219, 249-250, 274-275)
      ---
      duration_ms: 0.172542
      type: 'suite'
      ...
    # Subtest: Interest Payment (Money.c:55-70)
        # Subtest: should calculate daily interest as max(1, debt/10)
        ok 1 - should calculate daily interest as max(1, debt/10)
          ---
          duration_ms: 0.062667
          ...
        1..1
    ok 7 - Interest Payment (Money.c:55-70)
      ---
      duration_ms: 0.088584
      type: 'suite'
      ...
    # Subtest: Dumping Cost (Cargo.c:163-165)
        # Subtest: should calculate dumping cost as 5 * (difficulty + 1)
        ok 1 - should calculate dumping cost as 5 * (difficulty + 1)
          ---
          duration_ms: 0.120542
          ...
        1..1
    ok 8 - Dumping Cost (Cargo.c:163-165)
      ---
      duration_ms: 0.14325
      type: 'suite'
      ...
    # Subtest: Cargo Sale Validation (Cargo.c:622-695)
        # Subtest: should reject sale when no cargo to sell
        ok 1 - should reject sale when no cargo to sell
          ---
          duration_ms: 0.080708
          ...
        # Subtest: should reject sale when market not interested
        ok 2 - should reject sale when market not interested
          ---
          duration_ms: 0.044709
          ...
        # Subtest: should validate dumping cost affordability
        ok 3 - should validate dumping cost affordability
          ---
          duration_ms: 0.046875
          ...
        # Subtest: should allow jettisoning without cost check
        ok 4 - should allow jettisoning without cost check
          ---
          duration_ms: 0.044709
          ...
        1..4
    ok 9 - Cargo Sale Validation (Cargo.c:622-695)
      ---
      duration_ms: 0.259708
      type: 'suite'
      ...
    # Subtest: Jettison Police Penalty (Cargo.c:666-674)
        # Subtest: should apply penalty based on difficulty probability
        ok 1 - should apply penalty based on difficulty probability
          ---
          duration_ms: 0.106625
          ...
        # Subtest: should cap police score at DUBIOUSSCORE when already low
        ok 2 - should cap police score at DUBIOUSSCORE when already low
          ---
          duration_ms: 0.057208
          ...
        1..2
    ok 10 - Jettison Police Penalty (Cargo.c:666-674)
      ---
      duration_ms: 0.200125
      type: 'suite'
      ...
    # Subtest: Trade Item Constants Validation
        # Subtest: should have correct number of trade items
        ok 1 - should have correct number of trade items
          ---
          duration_ms: 0.056791
          ...
        # Subtest: should have valid trade item properties
        ok 2 - should have valid trade item properties
          ---
          duration_ms: 0.113542
          ...
        # Subtest: should have correct illegal goods indices
        ok 3 - should have correct illegal goods indices
          ---
          duration_ms: 0.0465
          ...
        1..3
    ok 11 - Trade Item Constants Validation
      ---
      duration_ms: 0.251917
      type: 'suite'
      ...
    # Subtest: Edge Cases and Boundary Conditions
        # Subtest: should handle zero values correctly
        ok 1 - should handle zero values correctly
          ---
          duration_ms: 0.061791
          ...
        # Subtest: should handle maximum values correctly
        ok 2 - should handle maximum values correctly
          ---
          duration_ms: 0.14375
          ...
        # Subtest: should maintain price consistency rules
        ok 3 - should maintain price consistency rules
          ---
          duration_ms: 0.055917
          ...
        1..3
    ok 12 - Edge Cases and Boundary Conditions
      ---
      duration_ms: 0.299125
      type: 'suite'
      ...
    # Subtest: Integration Tests
        # Subtest: should handle complete trading transaction
        ok 1 - should handle complete trading transaction
          ---
          duration_ms: 0.078875
          ...
        # Subtest: should handle debt and interest accumulation
        ok 2 - should handle debt and interest accumulation
          ---
          duration_ms: 0.051417
          ...
        # Subtest: should handle criminal status transitions
        ok 3 - should handle criminal status transitions
          ---
          duration_ms: 0.068
          ...
        1..3
    ok 13 - Integration Tests
      ---
      duration_ms: 0.235917
      type: 'suite'
      ...
    1..13
ok 186 - Space Trader Economy System
  ---
  duration_ms: 6.390083
  type: 'suite'
  ...
# (node:55664) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Orbital trade probability: 10.5% (expected 10.0%)
# Bought 3 3 for 798 credits
# Sold 8 8 for 256 credits
# Price range observed: 48 - 4954 credits per unit
# Water prices - Buy: 621, Sell: 407
# Subtest: Orbital Trading System
    # Subtest: Trade Probability System
        # Subtest: should implement correct trade-in-orbit probability (100 in 1000)
        ok 1 - should implement correct trade-in-orbit probability (100 in 1000)
          ---
          duration_ms: 0.910541
          ...
        1..1
    ok 1 - Trade Probability System
      ---
      duration_ms: 1.182042
      ...
    # Subtest: Orbital Purchase System (Trader Selling to Player)
        # Subtest: should successfully purchase from orbital trader
        ok 1 - should successfully purchase from orbital trader
          ---
          duration_ms: 1.313584
          ...
        # Subtest: should fail when insufficient credits
        ok 2 - should fail when insufficient credits
          ---
          duration_ms: 3.766542
          ...
        # Subtest: should fail when insufficient cargo space
        ok 3 - should fail when insufficient cargo space
          ---
          duration_ms: 0.82325
          ...
        1..3
    ok 2 - Orbital Purchase System (Trader Selling to Player)
      ---
      duration_ms: 6.168292
      ...
    # Subtest: Orbital Sale System (Player Selling to Trader)
        # Subtest: should successfully sell to orbital trader
        ok 1 - should successfully sell to orbital trader
          ---
          duration_ms: 8.473792
          ...
        # Subtest: should fail when no cargo to sell
        ok 2 - should fail when no cargo to sell
          ---
          duration_ms: 1.512208
          ...
        # Subtest: should only sell cargo player actually has
        ok 3 - should only sell cargo player actually has
          ---
          duration_ms: 1.020458
          ...
        1..3
    ok 3 - Orbital Sale System (Player Selling to Trader)
      ---
      duration_ms: 12.087416
      ...
    # Subtest: Price Calculation System
        # Subtest: should use min/max price ranges for orbital trading
        ok 1 - should use min/max price ranges for orbital trading
          ---
          duration_ms: 0.63625
          ...
        # Subtest: should provide different prices for buying vs selling
        ok 2 - should provide different prices for buying vs selling
          ---
          duration_ms: 0.396083
          ...
        1..2
    ok 4 - Price Calculation System
      ---
      duration_ms: 1.622458
      ...
# Combat trade result: Action 'combat_trade' is not available in current game mode
# Generated 101 orbital trade encounters in 1000 attempts
# Sample encounter: BUY 5 Water for 31 each
# Encounters with no money/cargo: 0
    # Subtest: Integration with Combat System
        # Subtest: should handle trade action in combat encounters
        ok 1 - should handle trade action in combat encounters
          ---
          duration_ms: 31.261584
          ...
        # Subtest: should properly end encounters after successful trade
        ok 2 - should properly end encounters after successful trade
          ---
          duration_ms: 0.234042
          ...
        1..2
    ok 5 - Integration with Combat System
      ---
      duration_ms: 31.812
      ...
    # Subtest: Encounter Generation System
        # Subtest: should generate orbital trade encounters with proper data
        ok 1 - should generate orbital trade encounters with proper data
          ---
          duration_ms: 0.407042
          ...
        # Subtest: should handle edge cases in encounter generation
        ok 2 - should handle edge cases in encounter generation
          ---
          duration_ms: 0.177334
          ...
        1..2
    ok 6 - Encounter Generation System
      ---
      duration_ms: 0.667375
      ...
    1..6
ok 187 - Orbital Trading System
  ---
  duration_ms: 54.313375
  ...
# (node:55665) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: fabric rip - start experiment initializes probability
ok 188 - fabric rip - start experiment initializes probability
  ---
  duration_ms: 1.970417
  ...
# Subtest: fabric rip - stop experiment resets probability
ok 189 - fabric rip - stop experiment resets probability
  ---
  duration_ms: 0.708667
  ...
# Subtest: fabric rip - probability decreases daily
ok 190 - fabric rip - probability decreases daily
  ---
  duration_ms: 2.921084
  ...
# Subtest: fabric rip - probability does not go below zero
ok 191 - fabric rip - probability does not go below zero
  ---
  duration_ms: 0.701875
  ...
# Subtest: fabric rip - no probability decrease when experiment not active
ok 192 - fabric rip - no probability decrease when experiment not active
  ---
  duration_ms: 3.063375
  ...
# Subtest: fabric rip - occurrence check when no experiment
ok 193 - fabric rip - occurrence check when no experiment
  ---
  duration_ms: 0.756917
  ...
# Subtest: fabric rip - occurrence probability scales with fabricRipProbability
ok 194 - fabric rip - occurrence probability scales with fabricRipProbability
  ---
  duration_ms: 0.747667
  ...
# Subtest: fabric rip - travel transports to random system
ok 195 - fabric rip - travel transports to random system
  ---
  duration_ms: 0.794041
  ...
# Subtest: fabric rip - travel with specific target system
ok 196 - fabric rip - travel with specific target system
  ---
  duration_ms: 0.9035
  ...
# Subtest: fabric rip - complete experiment lifecycle
ok 197 - fabric rip - complete experiment lifecycle
  ---
  duration_ms: 3.58175
  ...
# Subtest: fabric rip - probability bounds checking
ok 198 - fabric rip - probability bounds checking
  ---
  duration_ms: 1.713708
  ...
# Subtest: fabric rip - integration with experiment events
ok 199 - fabric rip - integration with experiment events
  ---
  duration_ms: 2.716375
  ...
# (node:55666) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Galaxy Map System
    # Subtest: System Tracking
        # Subtest: should start with no system tracked
        ok 1 - should start with no system tracked
          ---
          duration_ms: 4.225083
          ...
        # Subtest: should set tracked system correctly
        ok 2 - should set tracked system correctly
          ---
          duration_ms: 0.705291
          ...
        # Subtest: should clear tracked system
        ok 3 - should clear tracked system
          ---
          duration_ms: 0.74775
          ...
        # Subtest: should validate system index when setting tracked system
        ok 4 - should validate system index when setting tracked system
          ---
          duration_ms: 3.3065
          ...
        # Subtest: should auto-stop tracking when arriving at tracked system
        ok 5 - should auto-stop tracking when arriving at tracked system
          ---
          duration_ms: 2.318958
          ...
        # Subtest: should not auto-stop tracking when disabled
        ok 6 - should not auto-stop tracking when disabled
          ---
          duration_ms: 0.589625
          ...
        # Subtest: should not auto-stop when arriving at different system
        ok 7 - should not auto-stop when arriving at different system
          ---
          duration_ms: 0.654583
          ...
        1..7
    ok 1 - System Tracking
      ---
      duration_ms: 13.049583
      type: 'suite'
      ...
    # Subtest: Galactic Chart Navigation
        # Subtest: should start with commander system selected on chart
        ok 1 - should start with commander system selected on chart
          ---
          duration_ms: 0.635834
          ...
        # Subtest: should set galactic chart system selection
        ok 2 - should set galactic chart system selection
          ---
          duration_ms: 0.597583
          ...
        # Subtest: should validate galactic chart system index
        ok 3 - should validate galactic chart system index
          ---
          duration_ms: 0.598042
          ...
        1..3
    ok 2 - Galactic Chart Navigation
      ---
      duration_ms: 1.965417
      type: 'suite'
      ...
    # Subtest: Distance and Range Calculations
        # Subtest: should calculate distance to tracked system
        ok 1 - should calculate distance to tracked system
          ---
          duration_ms: 3.281542
          ...
        # Subtest: should return 0 distance when no system tracked
        ok 2 - should return 0 distance when no system tracked
          ---
          duration_ms: 0.493375
          ...
        # Subtest: should find systems within fuel range
        ok 3 - should find systems within fuel range
          ---
          duration_ms: 0.513792
          ...
        # Subtest: should exclude current system from range calculations
        ok 4 - should exclude current system from range calculations
          ---
          duration_ms: 0.437458
          ...
        1..4
    ok 3 - Distance and Range Calculations
      ---
      duration_ms: 4.887417
      type: 'suite'
      ...
    # Subtest: System Visibility
        # Subtest: should return all visited systems as visible
        ok 1 - should return all visited systems as visible
          ---
          duration_ms: 0.605958
          ...
        # Subtest: should always include current system as visible
        ok 2 - should always include current system as visible
          ---
          duration_ms: 0.267
          ...
        # Subtest: should not include unvisited systems
        ok 3 - should not include unvisited systems
          ---
          duration_ms: 0.47625
          ...
        1..3
    ok 4 - System Visibility
      ---
      duration_ms: 1.499083
      type: 'suite'
      ...
    # Subtest: Tracking Display
        # Subtest: should show tracking arrow when system is tracked and display enabled
        ok 1 - should show tracking arrow when system is tracked and display enabled
          ---
          duration_ms: 0.34625
          ...
        # Subtest: should not show tracking arrow when no system tracked
        ok 2 - should not show tracking arrow when no system tracked
          ---
          duration_ms: 0.236208
          ...
        # Subtest: should not show tracking arrow when display disabled
        ok 3 - should not show tracking arrow when display disabled
          ---
          duration_ms: 0.350917
          ...
        # Subtest: should toggle tracking display setting
        ok 4 - should toggle tracking display setting
          ---
          duration_ms: 0.150958
          ...
        # Subtest: should provide tracking info for display
        ok 5 - should provide tracking info for display
          ---
          duration_ms: 0.151709
          ...
        1..5
    ok 5 - Tracking Display
      ---
      duration_ms: 1.38025
      type: 'suite'
      ...
    # Subtest: Pathfinding
        # Subtest: should find direct path to adjacent system
        ok 1 - should find direct path to adjacent system
          ---
          duration_ms: 1.295083
          ...
        # Subtest: should return empty path when target unreachable
        ok 2 - should return empty path when target unreachable
          ---
          duration_ms: 0.145375
          ...
        # Subtest: should return empty path to same system
        ok 3 - should return empty path to same system
          ---
          duration_ms: 0.111333
          ...
        # Subtest: should find multi-hop path when necessary
        ok 4 - should find multi-hop path when necessary
          ---
          duration_ms: 4.501417
          ...
        1..4
    ok 6 - Pathfinding
      ---
      duration_ms: 6.121541
      type: 'suite'
      ...
    # Subtest: Galaxy Map State Integration
        # Subtest: should extract galaxy map state from game state
        ok 1 - should extract galaxy map state from game state
          ---
          duration_ms: 0.172917
          ...
        # Subtest: should handle edge cases in system indices
        ok 2 - should handle edge cases in system indices
          ---
          duration_ms: 0.119167
          ...
        1..2
    ok 7 - Galaxy Map State Integration
      ---
      duration_ms: 0.338208
      type: 'suite'
      ...
    # Subtest: Integration with Warp System
        # Subtest: should work with warp system distance calculations
        ok 1 - should work with warp system distance calculations
          ---
          duration_ms: 0.127917
          ...
        1..1
    ok 8 - Integration with Warp System
      ---
      duration_ms: 0.170833
      type: 'suite'
      ...
    1..8
ok 200 - Galaxy Map System
  ---
  duration_ms: 30.092792
  type: 'suite'
  ...
# (node:55667) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Warp System
    # Subtest: Distance Calculations
        # Subtest: should calculate distance between two systems correctly
        ok 1 - should calculate distance between two systems correctly
          ---
          duration_ms: 0.456791
          ...
        # Subtest: should handle same system distance (zero)
        ok 2 - should handle same system distance (zero)
          ---
          duration_ms: 0.056625
          ...
        # Subtest: should calculate distance for negative coordinates
        ok 3 - should calculate distance for negative coordinates
          ---
          duration_ms: 0.05075
          ...
        1..3
    ok 1 - Distance Calculations
      ---
      duration_ms: 0.841667
      type: 'suite'
      ...
    # Subtest: Fuel System
        # Subtest: should return base fuel tanks from ship type
        ok 1 - should return base fuel tanks from ship type
          ---
          duration_ms: 3.513375
          ...
        # Subtest: should return increased fuel tanks with fuel compactor
        ok 2 - should return increased fuel tanks with fuel compactor
          ---
          duration_ms: 0.682959
          ...
        # Subtest: should return current fuel limited by tank capacity
        ok 3 - should return current fuel limited by tank capacity
          ---
          duration_ms: 3.330666
          ...
        # Subtest: should return actual fuel when less than capacity
        ok 4 - should return actual fuel when less than capacity
          ---
          duration_ms: 0.8875
          ...
        1..4
    ok 2 - Fuel System
      ---
      duration_ms: 8.927125
      type: 'suite'
      ...
    # Subtest: Wormhole System
        # Subtest: should identify wormhole travel between connected systems
        ok 1 - should identify wormhole travel between connected systems
          ---
          duration_ms: 2.019334
          ...
        # Subtest: should not identify regular travel as wormhole
        ok 2 - should not identify regular travel as wormhole
          ---
          duration_ms: 1.344833
          ...
        # Subtest: should calculate wormhole tax correctly
        ok 3 - should calculate wormhole tax correctly
          ---
          duration_ms: 0.668833
          ...
        1..3
    ok 3 - Wormhole System
      ---
      duration_ms: 4.263208
      type: 'suite'
      ...
    # Subtest: Warp Cost Calculation
        # Subtest: should calculate base warp cost with no extras
        ok 1 - should calculate base warp cost with no extras
          ---
          duration_ms: 0.641875
          ...
        # Subtest: should include wormhole tax for wormhole travel
        ok 2 - should include wormhole tax for wormhole travel
          ---
          duration_ms: 0.419375
          ...
        # Subtest: should include mercenary pay for crew members
        ok 3 - should include mercenary pay for crew members
          ---
          duration_ms: 0.201667
          ...
        # Subtest: should include insurance cost when active
        ok 4 - should include insurance cost when active
          ---
          duration_ms: 0.166458
          ...
        # Subtest: should include interest on debt
        ok 5 - should include interest on debt
          ---
          duration_ms: 0.120584
          ...
        # Subtest: should include minimum interest of 1 credit
        ok 6 - should include minimum interest of 1 credit
          ---
          duration_ms: 0.111958
          ...
        1..6
    ok 4 - Warp Cost Calculation
      ---
      duration_ms: 1.740208
      type: 'suite'
      ...
    # Subtest: Warp Validation
        # Subtest: should allow warp when conditions are met
        ok 1 - should allow warp when conditions are met
          ---
          duration_ms: 0.705292
          ...
        # Subtest: should prevent warp when out of fuel range
        ok 2 - should prevent warp when out of fuel range
          ---
          duration_ms: 0.37925
          ...
        # Subtest: should allow wormhole warp regardless of fuel
        ok 3 - should allow wormhole warp regardless of fuel
          ---
          duration_ms: 0.315459
          ...
        # Subtest: should prevent warp when insufficient credits
        ok 4 - should prevent warp when insufficient credits
          ---
          duration_ms: 0.3665
          ...
        # Subtest: should prevent warp when debt too large
        ok 5 - should prevent warp when debt too large
          ---
          duration_ms: 0.127666
          ...
        # Subtest: should prevent warp when Wild aboard without beam laser
        ok 6 - should prevent warp when Wild aboard without beam laser
          ---
          duration_ms: 0.128958
          ...
        # Subtest: should allow warp when Wild aboard with beam laser
        ok 7 - should allow warp when Wild aboard with beam laser
          ---
          duration_ms: 0.115208
          ...
        1..7
    ok 5 - Warp Validation
      ---
      duration_ms: 3.222125
      type: 'suite'
      ...
    # Subtest: Warp Execution
        # Subtest: should successfully execute normal warp
        ok 1 - should successfully execute normal warp
          ---
          duration_ms: 0.330792
          ...
        # Subtest: should successfully execute wormhole warp
        ok 2 - should successfully execute wormhole warp
          ---
          duration_ms: 0.129041
          ...
        # Subtest: should reset shield strength after warp
        ok 3 - should reset shield strength after warp
          ---
          duration_ms: 0.128541
          ...
        # Subtest: should handle singularity warp (skip costs)
        ok 4 - should handle singularity warp (skip costs)
          ---
          duration_ms: 0.110875
          ...
        # Subtest: should fail when warp conditions not met
        ok 5 - should fail when warp conditions not met
          ---
          duration_ms: 0.116458
          ...
        # Subtest: should mark destination system as visited
        ok 6 - should mark destination system as visited
          ---
          duration_ms: 0.134417
          ...
        1..6
    ok 6 - Warp Execution
      ---
      duration_ms: 1.016166
      type: 'suite'
      ...
    # Subtest: Edge Cases and Integration
        # Subtest: should handle warp to same system (should fail)
        ok 1 - should handle warp to same system (should fail)
          ---
          duration_ms: 0.174958
          ...
        # Subtest: should handle multiple costs correctly
        ok 2 - should handle multiple costs correctly
          ---
          duration_ms: 0.130291
          ...
        # Subtest: should validate system indices
        ok 3 - should validate system indices
          ---
          duration_ms: 0.110167
          ...
        1..3
    ok 7 - Edge Cases and Integration
      ---
      duration_ms: 0.478
      type: 'suite'
      ...
    1..7
ok 201 - Warp System
  ---
  duration_ms: 21.043959
  type: 'suite'
  ...
# (node:55668) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: wormhole system - tax calculation for wormhole travel
ok 202 - wormhole system - tax calculation for wormhole travel
  ---
  duration_ms: 1.816083
  ...
# Subtest: wormhole system - criminal record affects tax
ok 203 - wormhole system - criminal record affects tax
  ---
  duration_ms: 3.518875
  ...
# Subtest: wormhole system - identifies wormhole connections correctly
ok 204 - wormhole system - identifies wormhole connections correctly
  ---
  duration_ms: 1.607166
  ...
# Subtest: wormhole system - wormhole travel ignores fuel requirements
ok 205 - wormhole system - wormhole travel ignores fuel requirements
  ---
  duration_ms: 6.484625
  ...
# Subtest: wormhole system - tax included in total warp cost
ok 206 - wormhole system - tax included in total warp cost
  ---
  duration_ms: 0.77475
  ...
# Subtest: wormhole system - regular travel has no wormhole tax
ok 207 - wormhole system - regular travel has no wormhole tax
  ---
  duration_ms: 0.786666
  ...
# Subtest: wormhole system - wormhole data structure validity
ok 208 - wormhole system - wormhole data structure validity
  ---
  duration_ms: 0.59975
  ...
# Subtest: wormhole system - bidirectional wormhole connections
ok 209 - wormhole system - bidirectional wormhole connections
  ---
  duration_ms: 0.707833
  ...
# Subtest: wormhole system - wormhole travel vs regular travel cost comparison
ok 210 - wormhole system - wormhole travel vs regular travel cost comparison
  ---
  duration_ms: 0.77675
  ...
# (node:55669) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: GameMode constants are correct
ok 211 - GameMode constants are correct
  ---
  duration_ms: 0.598792
  ...
# Subtest: Difficulty levels match Palm source
ok 212 - Difficulty levels match Palm source
  ---
  duration_ms: 0.05625
  ...
# Subtest: SystemStatus matches Palm source
ok 213 - SystemStatus matches Palm source
  ---
  duration_ms: 0.095292
  ...
# Subtest: SkillType matches Palm source
ok 214 - SkillType matches Palm source
  ---
  duration_ms: 0.043334
  ...
# Subtest: TradeItem constants match Palm source
ok 215 - TradeItem constants match Palm source
  ---
  duration_ms: 0.051958
  ...
# Subtest: Constants match Palm source values
ok 216 - Constants match Palm source values
  ---
  duration_ms: 0.039375
  ...
# (node:55670) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: String Formatting and Display Utilities
    # Subtest: Text Formatting
        # Subtest: formatMultiples should handle singular and plural correctly
        ok 1 - formatMultiples should handle singular and plural correctly
          ---
          duration_ms: 0.387083
          ...
        # Subtest: formatShortMultiples should omit count for singular
        ok 2 - formatShortMultiples should omit count for singular
          ---
          duration_ms: 1.536583
          ...
        # Subtest: should handle empty and special text
        ok 3 - should handle empty and special text
          ---
          duration_ms: 0.219291
          ...
        1..3
    ok 1 - Text Formatting
      ---
      duration_ms: 2.542833
      type: 'suite'
      ...
    # Subtest: Rectangle Operations
        # Subtest: validateRectangle should ensure positive dimensions
        ok 1 - validateRectangle should ensure positive dimensions
          ---
          duration_ms: 0.439375
          ...
        # Subtest: isPointInRectangle should detect containment correctly
        ok 2 - isPointInRectangle should detect containment correctly
          ---
          duration_ms: 0.0665
          ...
        1..2
    ok 2 - Rectangle Operations
      ---
      duration_ms: 0.580375
      type: 'suite'
      ...
    # Subtest: Text Width and Positioning
        # Subtest: calculateTextWidth should return reasonable approximations
        ok 1 - calculateTextWidth should return reasonable approximations
          ---
          duration_ms: 0.098709
          ...
        # Subtest: calculateCenteredX should center text properly
        ok 2 - calculateCenteredX should center text properly
          ---
          duration_ms: 0.213542
          ...
        # Subtest: calculateTextPosition should handle different alignments
        ok 3 - calculateTextPosition should handle different alignments
          ---
          duration_ms: 0.090458
          ...
        1..3
    ok 3 - Text Width and Positioning
      ---
      duration_ms: 0.651792
      type: 'suite'
      ...
    # Subtest: Word Wrapping
        # Subtest: wordWrap should handle simple cases
        ok 1 - wordWrap should handle simple cases
          ---
          duration_ms: 0.225416
          ...
        # Subtest: wordWrap should break long lines
        ok 2 - wordWrap should break long lines
          ---
          duration_ms: 0.12825
          ...
        # Subtest: wordWrap should handle single long words
        ok 3 - wordWrap should handle single long words
          ---
          duration_ms: 0.041875
          ...
        # Subtest: findWordBreakpoint should prefer good break points
        ok 4 - findWordBreakpoint should prefer good break points
          ---
          duration_ms: 0.049583
          ...
        1..4
    ok 4 - Word Wrapping
      ---
      duration_ms: 0.591209
      type: 'suite'
      ...
    # Subtest: Display Text Formatting
        # Subtest: formatDisplayText should handle single line text
        ok 1 - formatDisplayText should handle single line text
          ---
          duration_ms: 0.081208
          ...
        # Subtest: formatDisplayText should handle wrapping with indents
        ok 2 - formatDisplayText should handle wrapping with indents
          ---
          duration_ms: 0.040417
          ...
        # Subtest: formatDisplayText should respect maxLines limit
        ok 3 - formatDisplayText should respect maxLines limit
          ---
          duration_ms: 0.031084
          ...
        # Subtest: formatDisplayText should handle empty text
        ok 4 - formatDisplayText should handle empty text
          ---
          duration_ms: 0.03075
          ...
        1..4
    ok 5 - Display Text Formatting
      ---
      duration_ms: 0.237708
      type: 'suite'
      ...
    # Subtest: Screen and Coordinate Utilities
        # Subtest: clampToScreen should keep coordinates in bounds
        ok 1 - clampToScreen should keep coordinates in bounds
          ---
          duration_ms: 0.135959
          ...
        # Subtest: clampToScreen should work with custom dimensions
        ok 2 - clampToScreen should work with custom dimensions
          ---
          duration_ms: 0.032125
          ...
        1..2
    ok 6 - Screen and Coordinate Utilities
      ---
      duration_ms: 0.198958
      type: 'suite'
      ...
    # Subtest: Text Validation and Truncation
        # Subtest: validateTextBounds should preserve text that fits
        ok 1 - validateTextBounds should preserve text that fits
          ---
          duration_ms: 0.054833
          ...
        # Subtest: validateTextBounds should truncate long text
        ok 2 - validateTextBounds should truncate long text
          ---
          duration_ms: 0.03225
          ...
        # Subtest: validateTextBounds should handle very small widths
        ok 3 - validateTextBounds should handle very small widths
          ---
          duration_ms: 0.032542
          ...
        1..3
    ok 7 - Text Validation and Truncation
      ---
      duration_ms: 0.158209
      type: 'suite'
      ...
    # Subtest: Debug and Utility Functions
        # Subtest: formatDebugValues should format various value types
        ok 1 - formatDebugValues should format various value types
          ---
          duration_ms: 0.06725
          ...
        # Subtest: formatDebugValues should handle undefined values
        ok 2 - formatDebugValues should handle undefined values
          ---
          duration_ms: 0.029208
          ...
        1..2
    ok 8 - Debug and Utility Functions
      ---
      duration_ms: 0.132333
      type: 'suite'
      ...
    # Subtest: Scrolling State
        # Subtest: getScrollState should calculate pagination correctly
        ok 1 - getScrollState should calculate pagination correctly
          ---
          duration_ms: 0.062125
          ...
        # Subtest: getScrollState should handle edge cases
        ok 2 - getScrollState should handle edge cases
          ---
          duration_ms: 0.115541
          ...
        1..2
    ok 9 - Scrolling State
      ---
      duration_ms: 5.974916
      type: 'suite'
      ...
    # Subtest: Constants and Configuration
        # Subtest: PALM_SCREEN constants should have expected values
        ok 1 - PALM_SCREEN constants should have expected values
          ---
          duration_ms: 0.063084
          ...
        1..1
    ok 10 - Constants and Configuration
      ---
      duration_ms: 0.104375
      type: 'suite'
      ...
    # Subtest: Integration and Real-world Scenarios
        # Subtest: should handle Palm OS news display scenario
        ok 1 - should handle Palm OS news display scenario
          ---
          duration_ms: 0.07
          ...
        # Subtest: should handle centered button text
        ok 2 - should handle centered button text
          ---
          duration_ms: 0.033334
          ...
        # Subtest: should handle scrollable list display
        ok 3 - should handle scrollable list display
          ---
          duration_ms: 0.045166
          ...
        1..3
    ok 11 - Integration and Real-world Scenarios
      ---
      duration_ms: 0.185375
      type: 'suite'
      ...
    1..11
ok 217 - String Formatting and Display Utilities
  ---
  duration_ms: 12.131375
  type: 'suite'
  ...
# (node:55671) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: newspaper - basic purchase mechanics
ok 218 - newspaper - basic purchase mechanics
  ---
  duration_ms: 3.0405
  ...
# Subtest: newspaper - insufficient credits handling
ok 219 - newspaper - insufficient credits handling
  ---
  duration_ms: 1.483959
  ...
# Subtest: newspaper - successful purchase
ok 220 - newspaper - successful purchase
  ---
  duration_ms: 6.170292
  ...
# Subtest: newspaper - already purchased in system
ok 221 - newspaper - already purchased in system
  ---
  duration_ms: 0.406709
  ...
# Subtest: newspaper - reset when changing systems
ok 222 - newspaper - reset when changing systems
  ---
  duration_ms: 0.365083
  ...
# Subtest: newspaper - cost calculation by difficulty level
ok 223 - newspaper - cost calculation by difficulty level
  ---
  duration_ms: 0.537375
  ...
# Subtest: newspaper - auto-pay preference
ok 224 - newspaper - auto-pay preference
  ---
  duration_ms: 0.179125
  ...
# Subtest: newspaper - content varies by system events
ok 225 - newspaper - content varies by system events
  ---
  duration_ms: 0.536375
  ...
# Subtest: newspaper - multiple systems payment tracking
ok 226 - newspaper - multiple systems payment tracking
  ---
  duration_ms: 0.554041
  ...
# Subtest: newspaper - edge cases
ok 227 - newspaper - edge cases
  ---
  duration_ms: 0.637125
  ...
# Subtest: newspaper - integration with fabric rip travel
ok 228 - newspaper - integration with fabric rip travel
  ---
  duration_ms: 0.339166
  ...
# (node:55672) ExperimentalWarning: Type Stripping is an experimental feature and might change at any time
# (Use `node --trace-warnings ...` to show where the warning was created)
# Subtest: Form Field Validation and Management
    # Subtest: FormState Basic Operations
        # Subtest: setField and getField should work correctly
        ok 1 - setField and getField should work correctly
          ---
          duration_ms: 1.394
          ...
        # Subtest: setField should enforce size limits
        ok 2 - setField should enforce size limits
          ---
          duration_ms: 0.12925
          ...
        # Subtest: setField should handle focus correctly
        ok 3 - setField should handle focus correctly
          ---
          duration_ms: 0.077125
          ...
        # Subtest: peekField should not remove field
        ok 4 - peekField should not remove field
          ---
          duration_ms: 0.059166
          ...
        1..4
    ok 1 - FormState Basic Operations
      ---
      duration_ms: 2.304292
      type: 'suite'
      ...
    # Subtest: Checkbox Operations
        # Subtest: setCheckBox and getCheckBox should work correctly
        ok 1 - setCheckBox and getCheckBox should work correctly
          ---
          duration_ms: 0.0775
          ...
        # Subtest: checkbox state should persist until cleared
        ok 2 - checkbox state should persist until cleared
          ---
          duration_ms: 0.126083
          ...
        1..2
    ok 2 - Checkbox Operations
      ---
      duration_ms: 0.304042
      type: 'suite'
      ...
    # Subtest: Trigger List Operations
        # Subtest: setTriggerList and getTriggerList should work correctly
        ok 1 - setTriggerList and getTriggerList should work correctly
          ---
          duration_ms: 0.172
          ...
        # Subtest: setTriggerList should clamp index to valid range
        ok 2 - setTriggerList should clamp index to valid range
          ---
          duration_ms: 0.049291
          ...
        # Subtest: getTriggerListValue should handle invalid selections
        ok 3 - getTriggerListValue should handle invalid selections
          ---
          duration_ms: 0.076167
          ...
        1..3
    ok 3 - Trigger List Operations
      ---
      duration_ms: 0.518458
      type: 'suite'
      ...
    # Subtest: Form State Management
        # Subtest: isEmpty should work correctly
        ok 1 - isEmpty should work correctly
          ---
          duration_ms: 0.090708
          ...
        # Subtest: getFieldIds should return all field IDs
        ok 2 - getFieldIds should return all field IDs
          ---
          duration_ms: 0.085
          ...
        # Subtest: clear should remove all data
        ok 3 - clear should remove all data
          ---
          duration_ms: 0.043958
          ...
        1..3
    ok 4 - Form State Management
      ---
      duration_ms: 0.263791
      type: 'suite'
      ...
    # Subtest: Text Field Validation
        # Subtest: should validate required fields
        ok 1 - should validate required fields
          ---
          duration_ms: 0.079833
          ...
        # Subtest: should validate field length
        ok 2 - should validate field length
          ---
          duration_ms: 0.037042
          ...
        # Subtest: should validate patterns
        ok 3 - should validate patterns
          ---
          duration_ms: 0.090708
          ...
        # Subtest: should apply transformations
        ok 4 - should apply transformations
          ---
          duration_ms: 0.038833
          ...
        # Subtest: should handle transformation errors
        ok 5 - should handle transformation errors
          ---
          duration_ms: 0.053875
          ...
        1..5
    ok 5 - Text Field Validation
      ---
      duration_ms: 0.352542
      type: 'suite'
      ...
    # Subtest: Number Field Validation
        # Subtest: should validate numeric input
        ok 1 - should validate numeric input
          ---
          duration_ms: 0.116416
          ...
        # Subtest: should validate number ranges
        ok 2 - should validate number ranges
          ---
          duration_ms: 0.080375
          ...
        # Subtest: should handle empty values for optional fields
        ok 3 - should handle empty values for optional fields
          ---
          duration_ms: 0.031375
          ...
        # Subtest: should require values for required fields
        ok 4 - should require values for required fields
          ---
          duration_ms: 0.033333
          ...
        1..4
    ok 6 - Number Field Validation
      ---
      duration_ms: 0.3155
      type: 'suite'
      ...
    # Subtest: Integer Field Validation
        # Subtest: should validate integer input
        ok 1 - should validate integer input
          ---
          duration_ms: 0.062083
          ...
        # Subtest: should validate integer ranges
        ok 2 - should validate integer ranges
          ---
          duration_ms: 0.033208
          ...
        1..2
    ok 7 - Integer Field Validation
      ---
      duration_ms: 3.538916
      type: 'suite'
      ...
    # Subtest: Field Patterns
        # Subtest: NUMERIC pattern should work correctly
        ok 1 - NUMERIC pattern should work correctly
          ---
          duration_ms: 0.096542
          ...
        # Subtest: INTEGER pattern should work correctly
        ok 2 - INTEGER pattern should work correctly
          ---
          duration_ms: 0.0835
          ...
        # Subtest: POSITIVE_INTEGER pattern should work correctly
        ok 3 - POSITIVE_INTEGER pattern should work correctly
          ---
          duration_ms: 0.058375
          ...
        # Subtest: NAME pattern should allow typical name characters
        ok 4 - NAME pattern should allow typical name characters
          ---
          duration_ms: 0.052083
          ...
        # Subtest: COORDINATE pattern should handle game coordinates
        ok 5 - COORDINATE pattern should handle game coordinates
          ---
          duration_ms: 0.03275
          ...
        1..5
    ok 8 - Field Patterns
      ---
      duration_ms: 0.394709
      type: 'suite'
      ...
    # Subtest: Common Field Validations
        # Subtest: PLAYER_NAME validation should work correctly
        ok 1 - PLAYER_NAME validation should work correctly
          ---
          duration_ms: 0.059833
          ...
        # Subtest: CREDITS validation should work correctly
        ok 2 - CREDITS validation should work correctly
          ---
          duration_ms: 0.101958
          ...
        # Subtest: COORDINATE validation should work correctly
        ok 3 - COORDINATE validation should work correctly
          ---
          duration_ms: 0.051125
          ...
        1..3
    ok 9 - Common Field Validations
      ---
      duration_ms: 0.25325
      type: 'suite'
      ...
    # Subtest: Form Validation
        # Subtest: validateForm should validate all fields
        ok 1 - validateForm should validate all fields
          ---
          duration_ms: 0.10375
          ...
        # Subtest: isFormValid should check all results
        ok 2 - isFormValid should check all results
          ---
          duration_ms: 0.049584
          ...
        # Subtest: getFirstError should return first error message
        ok 3 - getFirstError should return first error message
          ---
          duration_ms: 0.043417
          ...
        1..3
    ok 10 - Form Validation
      ---
      duration_ms: 0.239667
      type: 'suite'
      ...
    # Subtest: Field Value Formatting
        # Subtest: should format different value types correctly
        ok 1 - should format different value types correctly
          ---
          duration_ms: 9.191958
          ...
        1..1
    ok 11 - Field Value Formatting
      ---
      duration_ms: 9.223583
      type: 'suite'
      ...
    # Subtest: Integration Scenarios
        # Subtest: should handle complete form workflow
        ok 1 - should handle complete form workflow
          ---
          duration_ms: 0.10125
          ...
        # Subtest: should handle field size limits like Palm OS
        ok 2 - should handle field size limits like Palm OS
          ---
          duration_ms: 0.036583
          ...
        # Subtest: should handle focus management like Palm OS forms
        ok 3 - should handle focus management like Palm OS forms
          ---
          duration_ms: 0.060917
          ...
        1..3
    ok 12 - Integration Scenarios
      ---
      duration_ms: 0.240958
      type: 'suite'
      ...
    1..12
ok 229 - Form Field Validation and Management
  ---
  duration_ms: 24.651541
  type: 'suite'
  ...
1..229
# tests 1239
# suites 208
# pass 1239
# fail 0
# cancelled 0
# skipped 0
# todo 0
# duration_ms 1228.963709
